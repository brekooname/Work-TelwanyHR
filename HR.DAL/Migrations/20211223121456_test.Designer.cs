// <auto-generated />
using System;
using HR.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HR.DAL.Migrations
{
    [DbContext(typeof(SmartERPStandardContext))]
    [Migration("20211223121456_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HR.Tables.Tables.AppSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductKey")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(2147483647);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(2147483647);

                    b.HasKey("Id");

                    b.ToTable("AppSetting");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetAddDoc", b =>
                {
                    b.Property<int>("AssetAddId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AssetAddId");

                    b.ToTable("Asset_AssetAddDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetAddDocDetail", b =>
                {
                    b.Property<int>("AddAssetDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AddValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("AssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetAddId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("AddAssetDetailId");

                    b.HasIndex("AssetAddId");

                    b.ToTable("Asset_AssetAddDocDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetCard", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("AssetCatId")
                        .HasColumnType("int");

                    b.Property<string>("AssetCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("Barcode")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("CarLicenseExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("CarLicenseIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CarLicenseIssuePlace")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CarLicenseNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CurrentBookValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CurrentEmpId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DeprInstallmentVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("DeprMethod")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeprStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DtReg")
                        .HasColumnName("dtReg")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DtRegRenew")
                        .HasColumnName("dtRegRenew")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("EquipId")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("InstallMentCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsuranceExpiry")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsProduction")
                        .HasColumnType("bit");

                    b.Property<decimal?>("JunkValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("LastDeprDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("MarketPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("NoDepreciation")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ProductivPeriod")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("PurchDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PurchDoc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("PurchPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("RemainInstallments")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ResponsiblePerson")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SerialNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel3")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel4")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel5")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("VendorDesc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("WarrantyDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("WarrantyNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("WarrantyTerms")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("AssetId");

                    b.HasIndex("AssetCatId");

                    b.ToTable("Asset_AssetCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetCategory", b =>
                {
                    b.Property<int>("AssetCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetCatLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("AssetCatType")
                        .HasColumnType("tinyint");

                    b.Property<string>("CatCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParentAssetCatId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AssetCatId");

                    b.HasIndex("ParentAssetCatId");

                    b.ToTable("Asset_AssetCategory");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetContacts", b =>
                {
                    b.Property<int>("AssetContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId1")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId2")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId3")
                        .HasColumnType("int");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("Bank1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Bank2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Bank3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BankAccNo1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BankAccNo2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BankAccNo3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ContactAddress1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactAddress2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactAddress3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ContactEmail1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactEmail2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactEmail3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactPhone1")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ContactPhone2")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ContactPhone3")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ContactPhone4")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ContactPhone5")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<string>("Idno")
                        .HasColumnName("IDNo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Isprimary")
                        .HasColumnType("bit");

                    b.Property<string>("PassPortNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Remark1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remark2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("AssetContactId");

                    b.HasIndex("AssetId");

                    b.ToTable("Asset_AssetContacts");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetDeductDoc", b =>
                {
                    b.Property<int>("AssetDeductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AssetDeductId");

                    b.ToTable("Asset_AssetDeductDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetDeductDocDetail", b =>
                {
                    b.Property<int>("DeductAssetDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetDeductId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DeductValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("DeductAssetDetailId");

                    b.HasIndex("AssetDeductId");

                    b.ToTable("Asset_AssetDeductDocDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetDeliverDoc", b =>
                {
                    b.Property<int>("DeliverAssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("DeliverAssetId")
                        .HasName("PK_Asset_AssetCustodyDoc");

                    b.ToTable("Asset_AssetDeliverDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetDeliverDocDetail", b =>
                {
                    b.Property<int>("DeliverAssetDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AddValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliverAssetId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("DeliverAssetDetailId");

                    b.HasIndex("DeliverAssetId");

                    b.ToTable("Asset_AssetDeliverDocDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetFixDoc", b =>
                {
                    b.Property<int>("FixAssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("FixAssetId");

                    b.ToTable("Asset_AssetFixDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetFixDocDetail", b =>
                {
                    b.Property<int>("FixAssetDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("FixAssetId")
                        .HasColumnType("int");

                    b.Property<decimal?>("FixValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("FixAssetDetailId");

                    b.HasIndex("FixAssetId");

                    b.ToTable("Asset_AssetFixDocDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetMoveDoc", b =>
                {
                    b.Property<int>("AssetMovId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AssetMovId");

                    b.ToTable("Asset_AssetMoveDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetMoveDocDetail", b =>
                {
                    b.Property<int>("AssetMovDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetMovId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MoveCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("NewDepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("NewStoreId")
                        .HasColumnType("int");

                    b.Property<int?>("OldDepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("OldStoreId")
                        .HasColumnType("int");

                    b.HasKey("AssetMovDetailId");

                    b.HasIndex("AssetMovId");

                    b.ToTable("Asset_AssetMoveDocDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetReceiveDoc", b =>
                {
                    b.Property<int>("ReceiveAssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ReceiveAssetId");

                    b.ToTable("Asset_AssetReceiveDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetReceiveDocDetail", b =>
                {
                    b.Property<int>("ReceiveAssetDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AddValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiveAssetId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ReceiveAssetDetailId");

                    b.HasIndex("ReceiveAssetId");

                    b.ToTable("Asset_AssetReceiveDocDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetSettingDetails", b =>
                {
                    b.Property<int>("AssetSetDetails")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetSetId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeprStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("ScrapValu")
                        .HasColumnType("decimal(38, 10)");

                    b.Property<decimal?>("UsablifeTime")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("AssetSetDetails");

                    b.HasIndex("AssetSetId");

                    b.ToTable("Asset_AssetSettingDetails");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetSettings", b =>
                {
                    b.Property<int>("AssetSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<byte?>("DeprMethod")
                        .HasColumnType("tinyint");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AssetSetId");

                    b.ToTable("Asset_AssetSettings");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetDepreciationDoc", b =>
                {
                    b.Property<int>("DeprDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalDeprVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("DeprDocId");

                    b.ToTable("Asset_DepreciationDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetDepreciationDocDetail", b =>
                {
                    b.Property<int>("DeprDocDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditAssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditCostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitCostcenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DeprDocId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("DeprDocDetailId");

                    b.HasIndex("DeprDocId");

                    b.ToTable("Asset_DepreciationDocDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetTermination", b =>
                {
                    b.Property<int>("AssetTerminatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CreditAssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditCostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccountId")
                        .HasColumnType("int");

                    b.Property<string>("DebitAccountTableName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("DebitAssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitCostcenterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("DeprValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ProfitLossAccountId")
                        .HasColumnType("int");

                    b.Property<string>("ProfitLossAccountTableName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AssetTerminatId");

                    b.ToTable("Asset_Termination");
                });

            modelBuilder.Entity("HR.Tables.Tables.BnkBankNotice", b =>
                {
                    b.Property<int>("BankNoticId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BankExpenses")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReceived")
                        .HasColumnType("bit");

                    b.Property<string>("KeeperNo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("PaperDirection")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("RefNo")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCheques")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<byte?>("TranType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BankNoticId");

                    b.ToTable("BNk_BankNotice");
                });

            modelBuilder.Entity("HR.Tables.Tables.BnkBankNoticeDetail", b =>
                {
                    b.Property<int>("BankNoticDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BankNoticId")
                        .HasColumnType("int");

                    b.Property<bool?>("Canceled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CollectDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsCollected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTransferred")
                        .HasColumnType("bit");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TransferredAte")
                        .HasColumnType("smalldatetime");

                    b.HasKey("BankNoticDetailId");

                    b.HasIndex("BankNoticId");

                    b.ToTable("BNK_BankNoticeDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalAccChrtDailyAssist", b =>
                {
                    b.Property<int>("AccChrtDailyAssistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DailyAssisId")
                        .HasColumnType("int");

                    b.HasKey("AccChrtDailyAssistId");

                    b.HasIndex("AccountId");

                    b.ToTable("Cal_AccChrtDailyAssist");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalAccountChart", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AccApproxim")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("AccBulkAccount")
                        .HasColumnType("int");

                    b.Property<byte?>("AccCashFlow")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("AccCurrTrancCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("AccountCategory")
                        .HasColumnType("int");

                    b.Property<long?>("AccountCode")
                        .HasColumnType("bigint");

                    b.Property<byte?>("AccountGroup")
                        .HasColumnType("tinyint");

                    b.Property<int?>("AccountLevel")
                        .HasColumnType("int");

                    b.Property<string>("AccountNameA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AccountNameE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("AccountNature")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("AccountStopped")
                        .HasColumnType("bit");

                    b.Property<byte?>("AccountType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Aid")
                        .HasColumnType("int");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceCreditLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("CalcMethod")
                        .HasColumnType("bit");

                    b.Property<byte?>("CostCenterOption")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("CostCentersDistribute")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<bool?>("CurrencyReevaluation")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("MainAccountId")
                        .HasColumnName("mainAccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AccountId");

                    b.HasIndex("Aid");

                    b.ToTable("Cal_AccountChart");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalAccountClaasiJoin", b =>
                {
                    b.Property<int>("AcChrtJoinClaasi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountClassId")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DaysCount")
                        .HasColumnType("int");

                    b.Property<byte?>("Operator")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("TypeOfAcc")
                        .HasColumnType("tinyint");

                    b.HasKey("AcChrtJoinClaasi");

                    b.HasIndex("AccountId");

                    b.ToTable("Cal_AccountClaasiJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalAccountUsers", b =>
                {
                    b.Property<int>("AccUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool?>("TranAndView")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AccUserId");

                    b.HasIndex("AccountId");

                    b.HasIndex("UserId");

                    b.ToTable("Cal_AccountUsers");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalAccountingFix", b =>
                {
                    b.Property<int>("AccRecalcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AccRecalcId");

                    b.ToTable("Cal_AccountingFix");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalAssetAccounts", b =>
                {
                    b.Property<int>("AssetAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AccCurrTrancCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AccountDescription")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AccountModel")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("discount, tax, master ...etc")
                        .HasMaxLength(100);

                    b.Property<string>("AccountNameA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AccountNameE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("AccountStopped")
                        .HasColumnType("bit");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceCreditLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("IsInUse")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrimeAccount")
                        .HasColumnType("bit");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AssetAccountId");

                    b.HasIndex("AssetId");

                    b.ToTable("Cal_AssetAccounts");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalBudget", b =>
                {
                    b.Property<int>("BudgetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("FromFinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ScinarioDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<int?>("ToFinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BudgetId");

                    b.ToTable("Cal_Budget");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalBudgetDetails", b =>
                {
                    b.Property<int>("BudgetDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BudgetId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Credit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Debit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FromFinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("ToFinancialIntervalsId")
                        .HasColumnType("int");

                    b.HasKey("BudgetDetailId");

                    b.HasIndex("BudgetId");

                    b.ToTable("Cal_BudgetDetails");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalBusinessPartnerAccounts", b =>
                {
                    b.Property<int>("BusinessPartnerAccId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AccCurrTrancCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AccountDescription")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AccountModel")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("discount, tax, master ...etc")
                        .HasMaxLength(100);

                    b.Property<string>("AccountNameA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AccountNameE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("AccountStopped")
                        .HasColumnType("bit");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceCreditLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("BspartnerId")
                        .HasColumnName("BSPartnerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("IsInUse")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrimeAccount")
                        .HasColumnType("bit");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TableCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("TableEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BusinessPartnerAccId");

                    b.HasIndex("BspartnerId");

                    b.ToTable("Cal_BusinessPartnerAccounts");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalCostCenterAccount", b =>
                {
                    b.Property<int>("CostCenterAccId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.HasKey("CostCenterAccId");

                    b.HasIndex("AccountId");

                    b.HasIndex("CostCenterId");

                    b.ToTable("Cal_CostCenterAccount");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalCostCenters", b =>
                {
                    b.Property<int>("CostCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccCostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnType("int");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceCreditLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.Property<byte?>("CashFlowList")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("CenterCategory")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CostCenterCode")
                        .HasColumnType("int");

                    b.Property<decimal?>("CostCenterCurrTrancCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("CostCenterCurrTrancCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("CostCenterCurrTrancDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("CostCenterCurrTrancDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("CostCenterLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("CostCenterNameA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CostCenterNameE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("CostCenterTotaCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("CostCenterTotaCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("CostCenterTotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("CostCenterTotalDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("CostType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("FunctionDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FunctionDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("JopDesc")
                        .HasColumnName("jopDesc")
                        .HasColumnType("tinyint");

                    b.Property<int?>("MainCostCenterId")
                        .HasColumnName("mainCostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("MonthlybalanceId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Parent")
                        .HasColumnType("int");

                    b.Property<decimal?>("PreviousBalance")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CostCenterId")
                        .HasName("PK_Cal_CostCenter");

                    b.ToTable("Cal_CostCenters");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalCustAccounts", b =>
                {
                    b.Property<int>("CustAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AccCurrTrancCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AccountDescription")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AccountModel")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AccountNameA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AccountNameE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("AccountStopped")
                        .HasColumnType("bit");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceCreditLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("IsInUse")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrimeAccount")
                        .HasColumnType("bit");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CustAccountId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Cal_CustAccounts");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalEmpAccounts", b =>
                {
                    b.Property<int>("EmpAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AccCurrTrancCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AccountDescription")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AccountModel")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("discount, tax, master ...etc")
                        .HasMaxLength(100);

                    b.Property<string>("AccountNameA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AccountNameE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("AccountStopped")
                        .HasColumnType("bit");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceCreditLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsInUse")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrimeAccount")
                        .HasColumnType("bit");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("EmpAccountId");

                    b.HasIndex("AccountId");

                    b.HasIndex("EmpId");

                    b.ToTable("Cal_EmpAccounts");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalJurnalDetail", b =>
                {
                    b.Property<int>("JurnalDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BusinessPartnerAccId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId4")
                        .HasColumnType("int");

                    b.Property<decimal?>("CreditCurrency")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CreditLocal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustAccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DebitCurrency")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DebitLocal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("EmpAccountId")
                        .HasColumnType("int");

                    b.Property<string>("JurDesc")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("JurnalId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("VendAccountId")
                        .HasColumnType("int");

                    b.HasKey("JurnalDetailId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("JurnalId");

                    b.ToTable("Cal_JurnalDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalJurnalEntry", b =>
                {
                    b.Property<int>("JurnalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdjustId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnType("int");

                    b.Property<int?>("AssetAddId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetDeductId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetMovId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetTerminatId")
                        .HasColumnType("int");

                    b.Property<int?>("BankNoticId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BoxTranId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DeliverAssetId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliverId")
                        .HasColumnType("int");

                    b.Property<int?>("DeprDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DifferenceInvoices")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("FixAssetId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsManual")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsOpenning")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<int?>("JorderClosId")
                        .HasColumnName("JOrderClosId")
                        .HasColumnType("int");

                    b.Property<int?>("JorderEmpDocId")
                        .HasColumnName("JOrderEmpDocId")
                        .HasColumnType("int");

                    b.Property<int?>("JorderEquipDocId")
                        .HasColumnName("JOrderEquipDocId")
                        .HasColumnType("int");

                    b.Property<string>("JurnalDesc")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("KeeperId")
                        .HasColumnType("int");

                    b.Property<int?>("LetOfGrnteeTranId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaidInvoices")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<int?>("PettycashId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<int?>("PurOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiveAssetId")
                        .HasColumnType("int");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ResourceBalance")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("RetPurchId")
                        .HasColumnType("int");

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<int?>("SalaryIssuDocId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOfferId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("StockAdjustId")
                        .HasColumnType("int");

                    b.Property<int?>("StockRecId")
                        .HasColumnType("int");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCredit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalDebit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalInvoices")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<int?>("TrOpenningBalanceId")
                        .HasColumnName("Tr_OpenningBalanceId")
                        .HasColumnType("int");

                    b.Property<int?>("TranId")
                        .HasColumnType("int");

                    b.Property<int?>("TranReqId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VjorderId")
                        .HasColumnName("VJOrderId")
                        .HasColumnType("int");

                    b.HasKey("JurnalId");

                    b.HasIndex("Aid");

                    b.HasIndex("StorId");

                    b.ToTable("Cal_JurnalEntry");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalPostOrder", b =>
                {
                    b.Property<int>("PostQueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BalaceCurrencyBeforCredit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BalaceCurrencyBeforDebit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BalaceLocalBeforCredit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BalaceLocalBeforDebit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BalancCrencyAftrCredCostCentr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BalancCrencyAftrDebtCostCentr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BalancCrencyBeforCredCostCentr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BalancCrencyBeforDebtCostCentr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BalancLocalAfterCredCostCentr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BalancLocalAfterDebCostCentr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BalancLocalBeforCredCostCentr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BalancLocalBeforDebCostCentr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BalanceCurrencyAfterCredit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BalanceCurrencyAfterDebit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BalanceLocalAfterCredit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BalanceLocalAfterDebit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CreditCurrency")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CreditLocal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DebitCurrency")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DebitLocal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("HelpAccId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("HelpCostCenterId")
                        .HasColumnType("int");

                    b.Property<string>("HelpCostCenterType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsHelpAcc")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHelpCostCenter")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOpenningTerm")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("OpenBalancCredCostCentr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenBalancCredCrncyCostCentr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenBalancDepCostCentr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenBalancDepCrncyCostCentr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OriginalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("TableCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("TableEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.HasKey("PostQueId");

                    b.ToTable("Cal_PostOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalQueueOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("QueueOrder")
                        .HasColumnType("int");

                    b.Property<string>("TableCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("TableEntityId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.ToTable("Cal_QueueOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalVendAccounts", b =>
                {
                    b.Property<int>("VendAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AccCurrTrancCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AccountDescription")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AccountModel")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("discount, tax, master ...etc")
                        .HasMaxLength(100);

                    b.Property<string>("AccountNameA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AccountNameE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("AccountStopped")
                        .HasColumnType("bit");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceCreditLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("IsInUse")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrimeAccount")
                        .HasColumnType("bit");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("VendAccountId");

                    b.HasIndex("VendorId");

                    b.ToTable("Cal_VendAccounts");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodAccountCategories", b =>
                {
                    b.Property<int>("AccountCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("AccountCatType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<long?>("Code")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParentAccountCatId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AccountCatId");

                    b.HasIndex("Aid");

                    b.ToTable("Cod_AccountCategories");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodAccountClassification", b =>
                {
                    b.Property<int>("AccountClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountCatId")
                        .HasColumnType("int");

                    b.Property<byte?>("AccountClassType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<long?>("Code")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParentAccountClassId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AccountClassId");

                    b.HasIndex("AccountCatId");

                    b.ToTable("Cod_AccountClassification");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodBuildOccupTypes", b =>
                {
                    b.Property<int>("BuildOccupTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BuildOccupTypeId");

                    b.ToTable("Cod_BuildOccupTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodBuildPermitActiv", b =>
                {
                    b.Property<int>("BuildPermitActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BuildPermitActivityId");

                    b.ToTable("Cod_BuildPermitActiv");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodBuildPerspective", b =>
                {
                    b.Property<int>("BuildPerspectiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BuildPerspectiveId");

                    b.ToTable("Cod_BuildPerspective");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodBuildingDegree", b =>
                {
                    b.Property<int>("BuildDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BuildDegreeId");

                    b.ToTable("Cod_BuildingDegree");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodBuildingExploitation", b =>
                {
                    b.Property<int>("BuildExploitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BuildExploitId");

                    b.ToTable("Cod_BuildingExploitation");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodBuildingFinishingLevel", b =>
                {
                    b.Property<int>("BuildFinishLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BuildFinishLevelId");

                    b.ToTable("Cod_BuildingFinishingLevel");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodBuildingInsuranceStatus", b =>
                {
                    b.Property<int>("BuildInsurStatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BuildInsurStatId");

                    b.ToTable("Cod_BuildingInsuranceStatus");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodBuildingStatus", b =>
                {
                    b.Property<int>("BuildStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BuildStatusId");

                    b.ToTable("Cod_BuildingStatus");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodBuildingTypes", b =>
                {
                    b.Property<int>("BuildTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BuildTypeId");

                    b.ToTable("Cod_BuildingTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodCity", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("CurrentZoom")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Lat")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Lng")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("MaxZoom")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("MinZoom")
                        .HasColumnType("tinyint");

                    b.Property<string>("NameA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NameE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RmarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("SysCityId")
                        .HasColumnName("SysCityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CityId");

                    b.HasIndex("RegionId");

                    b.HasIndex("SysCityId");

                    b.ToTable("Cod_City");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodColors", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ColorId");

                    b.ToTable("Cod_Colors");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodContractType", b =>
                {
                    b.Property<int>("ContractTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ContractTypeId");

                    b.ToTable("Cod_ContractType");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodCountry", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("CurrentZoom")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Lat")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Lng")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("MaxZoom")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("MinZoom")
                        .HasColumnType("tinyint");

                    b.Property<string>("NameA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NameE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CountryId");

                    b.HasIndex("CountryCode");

                    b.ToTable("Cod_Country");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodDailyAssistance", b =>
                {
                    b.Property<int>("DailyAssisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("DailyAssisId");

                    b.HasIndex("AccountId");

                    b.HasIndex("Aid");

                    b.ToTable("Cod_DailyAssistance");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodElectInsurStatus", b =>
                {
                    b.Property<int>("ElectInsurStatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ElectInsurStatId");

                    b.ToTable("Cod_ElectInsurStatus");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodExplanations", b =>
                {
                    b.Property<int>("ExplanationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ExplanationId");

                    b.ToTable("Cod_Explanations");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodFurnitAndEqupmnts", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("EquipmentId");

                    b.ToTable("Cod_FurnitAndEqupmnts");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodInstallmentTemps", b =>
                {
                    b.Property<int>("InstallTempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<bool?>("CanEditInstallManual")
                        .HasColumnType("bit");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("IsPercent")
                        .HasColumnType("bit");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("YearsCount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("InstallTempId");

                    b.ToTable("Cod_InstallmentTemps");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodInstallmentTempsDetail", b =>
                {
                    b.Property<int>("InstallTempDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InstallTempId")
                        .HasColumnType("int");

                    b.Property<int?>("MonthOfInstall")
                        .HasColumnType("int");

                    b.Property<int?>("MonthOrder")
                        .HasColumnType("int");

                    b.Property<int?>("PayCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("PayPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PayRepeat")
                        .HasColumnType("int");

                    b.Property<int?>("PayTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PayValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("YearOrder")
                        .HasColumnType("int");

                    b.HasKey("InstallTempDetailId");

                    b.HasIndex("InstallTempId");

                    b.ToTable("Cod_InstallmentTempsDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodInsurCovTypes", b =>
                {
                    b.Property<int>("InsurCovTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoverPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("InsurCovTypeId");

                    b.ToTable("Cod_InsurCovTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodInsuranceCases", b =>
                {
                    b.Property<int>("InsurCaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("InsurCaseId");

                    b.ToTable("Cod_InsuranceCases");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodLandPermitActivJoin", b =>
                {
                    b.Property<int>("LandPermitActivJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LandId")
                        .HasColumnType("int");

                    b.Property<int?>("LandPermitActivId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("LandPermitActivJoinId");

                    b.HasIndex("LandId");

                    b.HasIndex("LandPermitActivId");

                    b.ToTable("Cod_LandPermitActivJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodLandPermtActiv", b =>
                {
                    b.Property<int>("LandPermitActivId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LandPermitActivId");

                    b.ToTable("Cod_LandPermtActiv");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodLandPosJoin", b =>
                {
                    b.Property<int>("LandPosJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LandId")
                        .HasColumnType("int");

                    b.Property<int?>("LandPosId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("LandPosJoinId");

                    b.HasIndex("LandId");

                    b.HasIndex("LandPosId");

                    b.ToTable("Cod_LandPosJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodLandPositions", b =>
                {
                    b.Property<int>("LandPosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LandPosId");

                    b.ToTable("Cod_LandPositions");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodLandRetainResJoin", b =>
                {
                    b.Property<int>("LandRetainResJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LandId")
                        .HasColumnType("int");

                    b.Property<int?>("LandRetainResId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("LandRetainResJoinId");

                    b.HasIndex("LandId");

                    b.HasIndex("LandRetainResId");

                    b.ToTable("Cod_LandRetainResJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodLandRetainRsons", b =>
                {
                    b.Property<int>("LandRetainResId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LandRetainResId");

                    b.ToTable("Cod_LandRetainRsons");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodLandStatus", b =>
                {
                    b.Property<int>("LandSatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LandSatusId");

                    b.ToTable("Cod_LandStatus");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodLandTypes", b =>
                {
                    b.Property<int>("LandTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LandTypeId");

                    b.ToTable("Cod_LandTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodLands", b =>
                {
                    b.Property<int>("LandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BuildingArea")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BuildingMeterPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("LandMeterPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("LandNo")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("LandSatusId")
                        .HasColumnType("int");

                    b.Property<int?>("LandTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Landarea")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LandId")
                        .HasName("PK_Code_Lands");

                    b.ToTable("Cod_Lands");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodMaintenanceTypes", b =>
                {
                    b.Property<int>("MaintainTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("MaintainTypeId");

                    b.ToTable("Cod_MaintenanceTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodNonRenewalReasons", b =>
                {
                    b.Property<int>("NonRenewResId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("NonRenewResId");

                    b.ToTable("Cod_NonRenewalReasons");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodOperatingOrders", b =>
                {
                    b.Property<int>("OperOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("OperOrderId");

                    b.ToTable("Cod_OperatingOrders");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodOwnershipBonds", b =>
                {
                    b.Property<int>("OwnShipBondId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("OwnShipBondId");

                    b.ToTable("Cod_OwnershipBonds");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodPackingSize", b =>
                {
                    b.Property<int>("PackSizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("HeightCentimeter")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("HeightMeter")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("HeightMillimeters")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Hieght")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Length")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LengthCentimeter")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LengthMeter")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LengthMillimeters")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Wheight")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WidthCentimeter")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WidthMeter")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WidthMillimeters")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("PackSizeId");

                    b.ToTable("Cod_PackingSize");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodParkings", b =>
                {
                    b.Property<int>("ParkingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("AppartId")
                        .HasColumnType("int");

                    b.Property<int?>("CarCapacity")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ParkingId");

                    b.ToTable("Cod_Parkings");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodPaymentTerms", b =>
                {
                    b.Property<int>("PaymentTermId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("PaymentTermId");

                    b.ToTable("Cod_PaymentTerms");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodPaymentTypes", b =>
                {
                    b.Property<int>("PayTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("PayRepeat")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("PayTypeId");

                    b.ToTable("Cod_PaymentTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodPostalCodes", b =>
                {
                    b.Property<int>("PostalCodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("PostalCodId");

                    b.ToTable("Cod_PostalCodes");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodRegion", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("CurrentZoom")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Lat")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Lng")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("MaxZoom")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("MinZoom")
                        .HasColumnType("tinyint");

                    b.Property<string>("NameA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NameE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("RegionId");

                    b.HasIndex("CountryId");

                    b.ToTable("Cod_Region");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodRentCase", b =>
                {
                    b.Property<int>("RentCaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("RentCaseId");

                    b.ToTable("Cod_RentCase");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodSavingFiles", b =>
                {
                    b.Property<int>("SavfilesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("ShelvId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("SavfilesId");

                    b.ToTable("Cod_SavingFiles");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodServices", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ServiceId");

                    b.ToTable("Cod_Services");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodShelves", b =>
                {
                    b.Property<int>("ShelvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParentShelvId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ShelvId");

                    b.ToTable("Cod_Shelves");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodSubRegion", b =>
                {
                    b.Property<int>("SubRegionClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("CurrentZoom")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Lat")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Lng")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("MaxZoom")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("MinZoom")
                        .HasColumnType("tinyint");

                    b.Property<string>("NameA")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NameE")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("SubRegionClassId");

                    b.ToTable("Cod_SubRegion");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodTaskTypes", b =>
                {
                    b.Property<int>("TaskTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("TaskTypeId");

                    b.ToTable("Cod_TaskTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodTrmsModifiRsons", b =>
                {
                    b.Property<int>("TrmModResId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("TrmModResId");

                    b.ToTable("Cod_TrmsModifiRsons");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodUnitDegree", b =>
                {
                    b.Property<int>("UnitDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UnitDegreeId");

                    b.ToTable("Cod_UnitDegree");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodUnitExploitation", b =>
                {
                    b.Property<int>("UnitExploitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UnitExploitId");

                    b.ToTable("Cod_UnitExploitation");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodUnitFinishingLevel", b =>
                {
                    b.Property<int>("UnFinLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("FinishMeterPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UnFinLevelId");

                    b.ToTable("Cod_UnitFinishingLevel");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodUnitInsuranceStatus", b =>
                {
                    b.Property<int>("UnitInsurstatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UnitInsurstatId");

                    b.ToTable("Cod_UnitInsuranceStatus");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodUnitOccupancyTypes", b =>
                {
                    b.Property<int>("UnitOccuTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UnitOccuTypeId");

                    b.ToTable("Cod_UnitOccupancyTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodUnitPermittedActivity", b =>
                {
                    b.Property<int>("UnitPermitActivId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UnitPermitActivId");

                    b.ToTable("Cod_UnitPermittedActivity");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodUnitPerspective", b =>
                {
                    b.Property<int>("UnitPerspectiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UnitPerspectiveId");

                    b.ToTable("Cod_UnitPerspective");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodUnitServices", b =>
                {
                    b.Property<int>("UnitServId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UnitServId");

                    b.ToTable("Cod_UnitServices");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodUnitStatus", b =>
                {
                    b.Property<int>("UnitStatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UnitStatId");

                    b.ToTable("Cod_UnitStatus");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodUnitTypes", b =>
                {
                    b.Property<int>("UnittypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UnittypeId");

                    b.ToTable("Cod_UnitTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodUntMntanItmBylndownrTnant", b =>
                {
                    b.Property<int>("UnMantItmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UnMantItmId");

                    b.ToTable("Cod_UntMntanItmBylndownrTnant");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodeSubUnitTypes", b =>
                {
                    b.Property<int>("SubUnittypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<bool?>("CalcByMeter")
                        .HasColumnType("bit");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("TotalUnitMeters")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("SubUnittypeId");

                    b.ToTable("Code_SubUnitTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.ContrInstallMent", b =>
                {
                    b.Property<int>("InstallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote")
                        .HasMaxLength(100);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnName("DBTableId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasColumnName("DBTableName")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("InstallmentsCount")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("NotPaidInstallCount")
                        .HasColumnType("int");

                    b.Property<string>("OtherSource")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("PaidInstallCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TableEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TableStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("InstallId");

                    b.ToTable("Contr_InstallMent");
                });

            modelBuilder.Entity("HR.Tables.Tables.ContrInstallMentDetail", b =>
                {
                    b.Property<int>("InstallDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("InstallId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InstallValu")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PayDayDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Serial")
                        .HasColumnType("int");

                    b.HasKey("InstallDetailId");

                    b.HasIndex("InstallId");

                    b.ToTable("Contr_InstallMentDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmLeadTypes", b =>
                {
                    b.Property<int>("LeadTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreayedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("LeadTypeCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LeadTypeDes")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("LeadTypeName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LeadTypeName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LeadTypeId");

                    b.ToTable("CRM_LeadTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmLeads", b =>
                {
                    b.Property<int>("LeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("AssignedToEmpId")
                        .HasColumnType("int");

                    b.Property<byte?>("Barcode")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("CarLicenseExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("CarLicenseIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CarLicenseIssuePlace")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CarLicenseNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("CreditLimit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CreditLimitAllowed")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CreditPeriod")
                        .HasColumnType("int");

                    b.Property<string>("CustId")
                        .HasColumnName("CustID")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CustJob")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("DefaultDisc")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("DiscPercentOrVal")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DtReg")
                        .HasColumnName("dtReg")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DtRegRenew")
                        .HasColumnName("dtRegRenew")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("ForAdjustOnly")
                        .HasColumnType("bit");

                    b.Property<string>("FormerProduct")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("HomePage")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<bool?>("InternationalLicense")
                        .HasColumnType("bit");

                    b.Property<byte?>("InvoiceCopies")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCreditEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCustomer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDiscountByItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOpportunity")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPricIncludTax")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTaxExempted")
                        .HasColumnType("bit");

                    b.Property<string>("LeadCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LeadName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LeadName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("LeadTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("MarketChannelId")
                        .HasColumnType("int");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("PassPortExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PassPortIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PassPortIssuePlace")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PassPortNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("PeriodType")
                        .HasColumnType("tinyint")
                        .HasComment("1 day, 2 month, 3 year");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("PrePaidPercent")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("ReportDiscValu")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("SalPrice")
                        .HasColumnType("tinyint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TaxExemptionNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TaxRefNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel3")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel4")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel5")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LeadId");

                    b.HasIndex("LeadTypeId");

                    b.HasIndex("MarketChannelId");

                    b.ToTable("CRM_Leads");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmLeadsMembers", b =>
                {
                    b.Property<int>("LeadMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LeadMemberId");

                    b.ToTable("CRM_LeadsMembers");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmLeadsMembersDetails", b =>
                {
                    b.Property<int>("LeadMemberDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("LeadId")
                        .HasColumnType("int");

                    b.Property<int?>("LeadMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("LeadMemberDetailId");

                    b.HasIndex("LeadMemberId");

                    b.ToTable("CRM_LeadsMembersDetails");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmLeadsMembersJoin", b =>
                {
                    b.Property<int>("LeadMemberJoin")
                        .HasColumnType("int");

                    b.Property<int?>("LeadId")
                        .HasColumnType("int");

                    b.Property<int?>("LeadMemberId")
                        .HasColumnType("int");

                    b.HasKey("LeadMemberJoin");

                    b.HasIndex("LeadId");

                    b.HasIndex("LeadMemberId");

                    b.ToTable("CRM_LeadsMembersJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmMarketChannels", b =>
                {
                    b.Property<int>("MarketChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField10")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField8")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField9")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ChannelCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ChannelName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ChannelName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("MarketChannelId");

                    b.ToTable("CRM_MarketChannels");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmSalesPlan", b =>
                {
                    b.Property<int>("SalesPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("PlanName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PlanName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("SalesPlanId");

                    b.ToTable("CRM_SalesPlan");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmSalesPlanDetail", b =>
                {
                    b.Property<int>("SalesPlanDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("LeadId")
                        .HasColumnType("int");

                    b.Property<string>("Mission")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("SalesPlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("SalesPlanDetailId");

                    b.HasIndex("SalesPlanId");

                    b.ToTable("CRM_SalesPlanDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmSurvey", b =>
                {
                    b.Property<int>("SurveyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<byte?>("AnswerType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("int");

                    b.Property<string>("VisitCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VisitName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("VisitName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("VisitTypeId")
                        .HasColumnType("int");

                    b.HasKey("SurveyId");

                    b.HasIndex("VisitTypeId");

                    b.ToTable("CRM_Survey");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmSurveyMemberJoin", b =>
                {
                    b.Property<int>("SurveyVisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SurveyId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamMemberId")
                        .HasColumnType("int");

                    b.HasKey("SurveyVisitId");

                    b.ToTable("CRM_SurveyMemberJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmTeamMembers", b =>
                {
                    b.Property<int>("TeamMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("DefaultTarget")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTeamLeader")
                        .HasColumnType("bit");

                    b.Property<string>("MemberCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MemberName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MemberName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("TeamMemberId");

                    b.HasIndex("TeamId");

                    b.ToTable("CRM_TeamMembers");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmTeams", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("Capacaty")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("DefaultTarget")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TeamCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TeamName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TeamName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("TeamId");

                    b.ToTable("CRM_Teams");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmVisitSurveys", b =>
                {
                    b.Property<int>("VisitSurveyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Answer2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Answer3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Answer4")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool?>("AnswerYorN")
                        .HasColumnType("bit");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("SurveyId")
                        .HasColumnType("int");

                    b.Property<int?>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("VisitSurveyId");

                    b.HasIndex("VisitId");

                    b.ToTable("CRM_VisitSurveys");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmVisitTypes", b =>
                {
                    b.Property<int>("VisitTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("VisitCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VisitName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("VisitName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("VisitPeriority")
                        .HasColumnType("tinyint");

                    b.HasKey("VisitTypeId");

                    b.ToTable("CRM_VisitTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmVisits", b =>
                {
                    b.Property<int>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BounusDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("LeadGetBounus")
                        .HasColumnType("bit");

                    b.Property<int?>("LeadId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("TeamMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VisitTypeId")
                        .HasColumnType("int");

                    b.HasKey("VisitId");

                    b.HasIndex("VisitTypeId");

                    b.ToTable("CRM_Visits");
                });

            modelBuilder.Entity("HR.Tables.Tables.GPrintLog", b =>
                {
                    b.Property<int>("PrintLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DocName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("PrintTime")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("PrintLogId");

                    b.ToTable("G_PrintLog");
                });

            modelBuilder.Entity("HR.Tables.Tables.GUserGroups", b =>
                {
                    b.Property<int>("UserGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ParentUserGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("UserGroupCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserGroupName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UserGroupName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("UserGroupId");

                    b.ToTable("G_UserGroups");
                });

            modelBuilder.Entity("HR.Tables.Tables.GUserModule", b =>
                {
                    b.Property<int>("UserModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CanCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("CanOpen")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPost")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPreView")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPrint")
                        .HasColumnType("bit");

                    b.Property<bool>("Custom1")
                        .HasColumnName("CUSTOM1")
                        .HasColumnType("bit");

                    b.Property<string>("DefaultReport")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ModuleDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("PrintCopies")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("PrintWithSave")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserModuleId");

                    b.HasIndex("UserId");

                    b.ToTable("G_USER_MODULE");
                });

            modelBuilder.Entity("HR.Tables.Tables.GUserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField10")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField8")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField9")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RoleCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RoleName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RoleName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UserRoleId");

                    b.ToTable("G_UserRole");
                });

            modelBuilder.Entity("HR.Tables.Tables.GUserRolePermissions", b =>
                {
                    b.Property<int>("UserRolePermId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CanCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("CanOpen")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPost")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPreView")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPrint")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ModuleDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("ModuleType")
                        .HasColumnType("tinyint")
                        .HasComment("1 screen, 2 TabPage,3 Label");

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("UserRolePermId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("G_UserRolePermissions");
                });

            modelBuilder.Entity("HR.Tables.Tables.GUserScreenFields", b =>
                {
                    b.Property<int>("ScreenFieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("AuthenticatedBy")
                        .HasColumnType("int");

                    b.Property<bool?>("Authinticated")
                        .HasColumnType("bit");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("UserGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserModuleId")
                        .HasColumnType("int");

                    b.HasKey("ScreenFieldId");

                    b.ToTable("G_UserScreenFields");
                });

            modelBuilder.Entity("HR.Tables.Tables.GUsers", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Custom1")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Custom2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Custom3")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Custom4")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Custom5")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MacAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("UserGroupId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("int");

                    b.Property<byte?>("UserType")
                        .HasColumnType("tinyint")
                        .HasComment("0 User , 1 superUser , 2 admin");

                    b.HasKey("UserId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("G_Users");
                });

            modelBuilder.Entity("HR.Tables.Tables.HR.HrMobileSetting", b =>
                {
                    b.Property<int>("HrMobSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DefLoanReqBookId")
                        .HasColumnType("int");

                    b.Property<int>("DefPermReqBookId")
                        .HasColumnType("int");

                    b.Property<int>("DefVacReqBookId")
                        .HasColumnType("int");

                    b.Property<int>("TermId")
                        .HasColumnType("int");

                    b.HasKey("HrMobSetId");

                    b.ToTable("HR_MobileSetting");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrActivityDetailElements", b =>
                {
                    b.Property<int>("ActivityElementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttendElementId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpActivityDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpElementId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("ActivityElementId");

                    b.HasIndex("EmpActivityDetailId");

                    b.ToTable("Hr_ActivityDetailElements");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrAttendDocDetails", b =>
                {
                    b.Property<int>("AttendDocDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AttenDelayByDays")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("AttenDelayByHours")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("AttenDelayByMinutes")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("AttendDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("AttendDocId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DismissDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("EarlyAttendByDays")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("EarlyAttendByHours")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("EarlyAttendByMinutes")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("EarlyLeaveByDays")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("EarlyLeaveByHours")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("EarlyLeaveByMinutes")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FirstShftFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FirstShftTo")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("LeavPermisionId1")
                        .HasColumnType("int");

                    b.Property<int?>("LeavPermisionId2")
                        .HasColumnType("int");

                    b.Property<int?>("LeavPermisionId3")
                        .HasColumnType("int");

                    b.Property<int?>("LeavPermisionId4")
                        .HasColumnType("int");

                    b.Property<int?>("LeavPermisionId5")
                        .HasColumnType("int");

                    b.Property<int?>("LeavPermisionId6")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetTimeByDays")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NetTimeByHours")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NetTimeByMinutes")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("OverTimeByDays")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("OverTimeByHours")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("OverTimeByMinutes")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("SecondShftFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("SecondShftTo")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThirdShftFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ThirdShftTo")
                        .HasColumnType("smalldatetime");

                    b.HasKey("AttendDocDetailsId");

                    b.HasIndex("AttendDocId");

                    b.ToTable("Hr_AttendDocDetails");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrAttendDocFactElements", b =>
                {
                    b.Property<int>("FactAttendId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttendDocId")
                        .HasColumnType("int");

                    b.Property<byte?>("EarlyAttendCount")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("EarlyAttendDays")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("EarlyAttendHours")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("EarlyAttendMinutes")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("EarlyLeaveCount")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("EarlyLeaveDays")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("EarlyLeaveHours")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("EarlyLeaveMinutes")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<byte?>("LateArrivalCount")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LateArrivalDays")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LateArrivalHours")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LateArrivalMinutes")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Shift1NoShow")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Shift1Show")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Shift2NoShow")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Shift2Show")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Shift3NoShow")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Shift3Show")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalWorkDaysPeriod")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalWorkHoursPeriod")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("VacationOvertimeCount")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("VacationOvertimeDays")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("VacationOvertimeHours")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("VacationOvertimeMinutes")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("VacationWorkDays")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("VacationWorkHours")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("VacationWorkMinutes")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("VacationWorkShow")
                        .HasColumnType("int");

                    b.Property<decimal?>("WeekEndWorkDays")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WeekEndWorkHours")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WeekEndWorkMinutes")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("WeekEndWorkShow")
                        .HasColumnType("int");

                    b.Property<byte?>("WeekendOvertimeCount")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("WeekendOvertimeDays")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WeekendOvertimeHours")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WeekendOvertimeMinutes")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WorkDayNoShow")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WorkDayShow")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("WorkdayOvertimeCount")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("WorkdayOvertimeDays")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WorkdayOvertimeHours")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WorkdayOvertimeMinutes")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("FactAttendId");

                    b.ToTable("Hr_AttendDocFactElements");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrAttendElementTrans", b =>
                {
                    b.Property<int>("ElementTransId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttendElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ElementValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPlus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("OriginalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<string>("TableCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("TableId")
                        .HasColumnType("int");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 number,2 minutes,3 hours,4 days");

                    b.HasKey("ElementTransId");

                    b.ToTable("Hr_AttendElementTrans");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrAttendanceDoc", b =>
                {
                    b.Property<int>("AttendDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AttendDocId");

                    b.ToTable("Hr_AttendanceDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrAttendanceElements", b =>
                {
                    b.Property<int>("AttendElementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ElementCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("ElementUsage")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("EnablEditOnEmpActivity")
                        .HasColumnType("bit");

                    b.Property<decimal?>("FixedValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("VacationEffect")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("ValueType")
                        .HasColumnType("tinyint");

                    b.HasKey("AttendElementId");

                    b.ToTable("Hr_AttendanceElements");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrDepartments", b =>
                {
                    b.Property<int>("DepartMentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DepartCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DepartName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DepartName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DepartTask")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("DepartMentId");

                    b.HasIndex("ParentId");

                    b.ToTable("Hr_Departments");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEducation", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EducationCode")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("EducationDesc")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("EducationName1")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("EducationName2")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Qualification")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("EducationId");

                    b.ToTable("Hr_Education");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpActivity", b =>
                {
                    b.Property<int>("EmpActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("EmpActivityId");

                    b.ToTable("Hr_EmpActivity");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpActivityDetail", b =>
                {
                    b.Property<int>("EmpActivityDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.HasKey("EmpActivityDetailId");

                    b.HasIndex("EmpActivityId");

                    b.ToTable("Hr_EmpActivityDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpDocTypes", b =>
                {
                    b.Property<int>("EmpDocTypId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("EmpDocTypId");

                    b.ToTable("Hr_EmpDocTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpDocuments", b =>
                {
                    b.Property<int>("EmpDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpApprovedById")
                        .HasColumnType("int");

                    b.Property<int?>("EmpDocTypId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("IssuePlace")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("EmpDocId");

                    b.HasIndex("EmpDocTypId");

                    b.ToTable("Hr_EmpDocuments");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpElementPeriodBalance", b =>
                {
                    b.Property<int>("EmpElementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttendElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ElementValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 minute,2 hour,3 day, 4 number");

                    b.HasKey("EmpElementId");

                    b.ToTable("Hr_EmpElementPeriodBalance");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpGroups", b =>
                {
                    b.Property<int>("HrempGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HREmpGroupId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("GroupCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("GroupType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("HrempGroupId");

                    b.HasIndex("ParentId");

                    b.ToTable("Hr_EmpGroups");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpKPIS", b =>
                {
                    b.Property<int>("EmpKPIId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int>("KPIId")
                        .HasColumnType("int");

                    b.Property<decimal?>("KpiPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpKPIId");

                    b.HasIndex("EmpId");

                    b.HasIndex("KPIId");

                    b.ToTable("Hr_EmpKPIS");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpLoanRequest", b =>
                {
                    b.Property<int>("EmpLoanReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EmpLoanBalance")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InstallmentValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("Installments")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("LastInstallmentValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LoanValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RequestImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("EmpLoanReqId");

                    b.ToTable("Hr_EmpLoanRequest");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpLoans", b =>
                {
                    b.Property<int>("EmpLoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpLoanReqId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InstallmentValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("Installments")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInstallmentStopped")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("LastInstallmentValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("LastPayDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("LoanBalance")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("LoanCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("LoanValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("PaidInstallmentCount")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("SalaryTypId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartPayDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalExemption")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("EmpLoanId");

                    b.ToTable("Hr_EmpLoans");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpLocations", b =>
                {
                    b.Property<int>("EmpLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("EmpLocationId");

                    b.HasIndex("EmpId");

                    b.HasIndex("LocationId");

                    b.ToTable("Hr_EmpLocations");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpMovePromotDetail", b =>
                {
                    b.Property<int>("EmpMoveDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpMoveId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OldSalaryValu")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("SalaryTypId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SalaryValu")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("EmpMoveDetailId");

                    b.HasIndex("EmpMoveId");

                    b.ToTable("Hr_EmpMovePromotDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpMovePromotion", b =>
                {
                    b.Property<int>("EmpMoveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpApprovedById")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("NewDepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("NewJobId")
                        .HasColumnType("int");

                    b.Property<int?>("NewStoreId")
                        .HasColumnType("int");

                    b.Property<string>("NewTitle")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("EmpMoveId")
                        .HasName("PK_Hr_MoveAndPromotion");

                    b.ToTable("Hr_EmpMovePromotion");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpSalaryDistribution", b =>
                {
                    b.Property<int>("SalaryDistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SalaryPercent")
                        .HasColumnType("numeric(18, 5)");

                    b.HasKey("SalaryDistId");

                    b.ToTable("Hr_EmpSalaryDistribution");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpSalaryTypes", b =>
                {
                    b.Property<int>("EmpSalaryTypesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreditAccId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditCostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditEmpAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitCostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitEmpAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("SalaryTypId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SalaryValu")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("EmpSalaryTypesId");

                    b.HasIndex("EmpId");

                    b.HasIndex("SalaryTypId");

                    b.ToTable("Hr_EmpSalaryTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpShift", b =>
                {
                    b.Property<int>("EmpShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.HasKey("EmpShiftId");

                    b.HasIndex("EmpId");

                    b.HasIndex("ShiftId");

                    b.ToTable("Hr_EmpShifts");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpStore", b =>
                {
                    b.Property<int>("EmpStoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("EmpStoreId");

                    b.HasIndex("EmpId");

                    b.HasIndex("StoreId");

                    b.ToTable("Hr_EmpStores");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpVacation", b =>
                {
                    b.Property<int>("EmpVacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("EmpVacId");

                    b.ToTable("Hr_EmpVacation");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpVacationsDetails", b =>
                {
                    b.Property<int>("EmpVacDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("AnnualBalance")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AnnualVacs")
                        .HasColumnType("tinyint");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpVacId")
                        .HasColumnType("int");

                    b.Property<byte?>("OldAnnualBalance")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("OldAnnualVacs")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("OldReservedVacs")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("OldReservedVacsBalance")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("ReservedVacs")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("ReservedVacsBalance")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("EmpVacDetailId")
                        .HasName("PK_EmpVacationsDetails");

                    b.HasIndex("EmpVacId");

                    b.ToTable("Hr_EmpVacationsDetails");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmployees", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<byte?>("AnnualVacs")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AnnualVacsBalance")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Attendance")
                        .HasColumnType("bit")
                        .HasComment("true full Time,false Part time");

                    b.Property<bool?>("AutosalaryIssue")
                        .HasColumnType("bit");

                    b.Property<string>("BankAccNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Car")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("CommisionCollectionPerc")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CommisionPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("ContractEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ContractSrtDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("ContractType")
                        .HasColumnType("bit")
                        .HasComment("true limited, false unlimited");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DailyCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<string>("DeviceEmpCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("DistributeSalary")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DrivingExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DrivingIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DrivingLicense")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DrivingRenewalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("EmpImage")
                        .HasColumnType("image");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("HealthInsEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("HealthInsId")
                        .HasColumnName("HealthInsID")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<decimal?>("HourlyCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("HourlyCostRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("HrempGroupId")
                        .HasColumnName("HREmpGroupId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IdexpiryDate")
                        .HasColumnName("IDExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("IdissueDate")
                        .HasColumnName("IDIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Idno")
                        .HasColumnName("IDNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsCommissionAfterDisc")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMoneyCollector")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSales")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTechnician")
                        .HasColumnType("bit");

                    b.Property<bool?>("IssueSalary")
                        .HasColumnType("bit");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<byte?>("KidsNo")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("LastVacsUpdate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<byte?>("MaritalStatus")
                        .HasColumnType("tinyint")
                        .HasComment("0 single,1 married,2 married and have kids");

                    b.Property<byte?>("MaxVacsBalance")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("MilitaryService")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("Nationality")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("PassportExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PassportIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PassportNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<string>("Phone1")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Phone3")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<byte?>("Religion")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<byte?>("ReservedVacs")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("ReservedVacsBalance")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("SocialSecurityId")
                        .HasColumnName("SocialSecurityID")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Syndicate")
                        .HasColumnName("syndicate")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("SyndicateId")
                        .HasColumnName("syndicateID")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<decimal?>("TotalDailyCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalHourlyCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("WorkStartDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("EmpId");

                    b.HasIndex("DepartMentId");

                    b.HasIndex("HrempGroupId");

                    b.HasIndex("JobId");

                    b.HasIndex("PeriodTableId");

                    b.HasIndex("ShiftId");

                    b.ToTable("Hr_Employees");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpsSalaryTemp", b =>
                {
                    b.Property<int>("EmpsSalaryTempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreditAccId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditCostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditEmpAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitCostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitEmpAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("HrempGroupId")
                        .HasColumnName("HREmpGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<int?>("SalaryTypId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SalaryValu")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("EmpsSalaryTempId");

                    b.HasIndex("SalaryTypId");

                    b.ToTable("Hr_EmpsSalaryTemp");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrJobs", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Add1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<string>("Jcode")
                        .HasColumnName("JCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Jdesc")
                        .HasColumnName("JDesc")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Jduties")
                        .HasColumnName("JDuties")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Jname1")
                        .HasColumnName("JName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Jname2")
                        .HasColumnName("JName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Jqualifications")
                        .HasColumnName("JQualifications")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Jresponsibilities")
                        .HasColumnName("JResponsibilities")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("NumberAvailable")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal?>("StandardDailyWage")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("StandardDailyWorkHours")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<byte?>("StandardHolyDays")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("StandardHourlyWage")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("StandardMonthlyWage")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("JobId");

                    b.ToTable("Hr_Jobs");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrKPIS", b =>
                {
                    b.Property<int>("KPIId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("KpiPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KPIId");

                    b.ToTable("Hr_KPIS");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrLeavPermissionRequest", b =>
                {
                    b.Property<int>("LeavPermReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DayCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("HoursCount")
                        .HasColumnType("numeric(18, 5)");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RequestImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LeavPermReqId");

                    b.ToTable("Hr_LeavPermissionRequest");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrLeavePermision", b =>
                {
                    b.Property<int>("LeavPermisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("AttendElementId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DayCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpApprovedById")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("HoursCount")
                        .HasColumnType("numeric(18, 5)");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMission")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("LeavPermReqId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("MissionDesc")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ShiftDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LeavPermisionId");

                    b.ToTable("Hr_LeavePermision");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrLocation", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Hr_Location");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrPeriodTableDetail", b =>
                {
                    b.Property<int>("PeriodTablDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("PayDayDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PeriodEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PeriodStrtDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<string>("SubPeriodCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("TotalVacsDays")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalVacsHours")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalWorkDays")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalWorkHours")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("PeriodTablDetailId");

                    b.HasIndex("PeriodTableId");

                    b.ToTable("Hr_PeriodTableDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrPeriodTablePolicy", b =>
                {
                    b.Property<int>("PeriodPolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Approximate")
                        .HasColumnType("numeric(10, 3)");

                    b.Property<int?>("AttendElementId")
                        .HasColumnType("int");

                    b.Property<byte?>("AttendUnit")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Minimum")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.HasKey("PeriodPolicyId");

                    b.HasIndex("PeriodTableId");

                    b.ToTable("Hr_PeriodTablePolicy");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrPeriodTableVacations", b =>
                {
                    b.Property<int>("PeriodVacatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VacationDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("PeriodVacatId");

                    b.HasIndex("PeriodTableId");

                    b.ToTable("Hr_PeriodTableVacations");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrPeriodsTables", b =>
                {
                    b.Property<int>("PeriodTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AcceptShftBeforDismis")
                        .HasColumnType("bit")
                        .HasComment("احتساب الورديه فى حالة خروج الموظف و رجوعه قبل ميعاد الانصراف مع تجاهل عدد الساعات المحققه");

                    b.Property<bool?>("AcceptShiftHours")
                        .HasColumnType("bit")
                        .HasComment("اعتبار تحقيق الورديه بمجرد تحقيق عدد ساعات الورديه بغض النظر عن توقيت الحضور و الانصراف");

                    b.Property<bool?>("AcceptShiftVacs")
                        .HasColumnType("bit")
                        .HasComment("قبول تعويض الورديات فى أيام الأجازات");

                    b.Property<bool?>("AttendanceMachin")
                        .HasColumnType("bit");

                    b.Property<bool?>("CalcEarlyLeaveVacation")
                        .HasColumnType("bit");

                    b.Property<bool?>("CalcEarlyLeaveWeekEnd")
                        .HasColumnType("bit");

                    b.Property<bool?>("CalcLateAttendVacation")
                        .HasColumnType("bit");

                    b.Property<bool?>("CalcLateAttendWeekEnd")
                        .HasColumnType("bit");

                    b.Property<bool?>("CancelEarlyLeave")
                        .HasColumnType("bit")
                        .HasComment("الغاء الانصراف المبكر فى حالة تسجيل حضور ثانى فى نفس اليوم");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("CutLateTimFromOverTime")
                        .HasColumnType("bit")
                        .HasComment("خصم التأخير و الانصراف المبكر من الوقت الاضافى لنفس اليوم");

                    b.Property<byte?>("DailyWorkHours")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EarlyAttendElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EarlyAttendMinVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("EarlyAttendRound")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("EarlyAttendUnit")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EarlyLeaveElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EarlyLeaveMinVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("EarlyLeaveRound")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("EarlyLeaveUnit")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("FirstDayWork")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("LateArrivalElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LateArrivalMinVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LateArrivalRound")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("LateArrivalUnit")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PeriodCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("PeriodType")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PeriodWorkDays")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PeriodsNum")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("RoundingMethod")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Shift1NoShowElementId")
                        .HasColumnType("int");

                    b.Property<int?>("Shift1ShowElementId")
                        .HasColumnType("int");

                    b.Property<int?>("Shift2NoShowElementId")
                        .HasColumnType("int");

                    b.Property<int?>("Shift2ShowElementId")
                        .HasColumnType("int");

                    b.Property<int?>("Shift3NoShowElementId")
                        .HasColumnType("int");

                    b.Property<int?>("Shift3ShowElementId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<bool?>("ShiftNotAcheived")
                        .HasColumnType("bit")
                        .HasComment("عدم احتساب الورديه فى حالة خروج الموظف فى منتصف اليوم قبل ميعاد الانصراف");

                    b.Property<decimal?>("SubPeriodCount")
                        .HasColumnType("numeric(5, 2)");

                    b.Property<byte?>("SubPeriodType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TableEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TableStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("VacOvrTimAftrDismis")
                        .HasColumnType("tinyint");

                    b.Property<int?>("VacationOvertimeElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("VacationOvertimeMinVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("VacationOvertimeRound")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("VacationOvertimeUnit")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VacationWorkDayElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("VacationWorkMinVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("VacationWorkRound")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("VacationWorkUnit")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("WeekEndOvrTimAftrDismis")
                        .HasColumnType("tinyint");

                    b.Property<int?>("WeekEndWorkDayElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("WeekEndWorkMinVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WeekEndWorkRound")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("WeekEndWorkUnit")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("WeekendOvertimeElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("WeekendOvertimeMinVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WeekendOvertimeRound")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("WeekendOvertimeUnit")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("WorkDayNoShowElementId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkDayShowElementId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkdayOvertimeElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("WorkdayOvertimeMinVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WorkdayOvertimeRound")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("WorkdayOvertimeUnit")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("WrkOvrTimAfterDismis")
                        .HasColumnType("tinyint");

                    b.HasKey("PeriodTableId");

                    b.ToTable("Hr_PeriodsTables");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrRewardAndPenalty", b =>
                {
                    b.Property<int>("RewardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpApprovedById")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExecutDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMoral")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsReward")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("SalaryTypId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitCount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("UnitDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("UnitValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("RewardId");

                    b.ToTable("Hr_RewardAndPenalty");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrSalaryCalcMethod", b =>
                {
                    b.Property<int>("SalaryCalcMethod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CalcMethodCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("SalaryCalcMethod");

                    b.ToTable("Hr_SalaryCalcMethod");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrSalaryIssueDetails", b =>
                {
                    b.Property<int>("SalaryIssuDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AddValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditCostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditEmpAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitCostcenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitEmpAccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DeductValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ElementCount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("ElementCountDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("ElementUnitValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("OtherValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("SalaryIssuDocId")
                        .HasColumnType("int");

                    b.Property<int?>("SalaryTypId")
                        .HasColumnType("int");

                    b.HasKey("SalaryIssuDetailId");

                    b.HasIndex("SalaryIssuDocId");

                    b.ToTable("Hr_SalaryIssueDetails");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrSalaryIssueDistribution", b =>
                {
                    b.Property<int>("SalaryIssuDistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SalaryDays")
                        .HasColumnType("numeric(18, 5)");

                    b.Property<decimal?>("SalaryHours")
                        .HasColumnType("numeric(18, 5)");

                    b.Property<int?>("SalaryIssuDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SalaryPercent")
                        .HasColumnType("numeric(18, 5)");

                    b.Property<decimal?>("ValueShare")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("SalaryIssuDistId");

                    b.HasIndex("SalaryIssuDocId");

                    b.ToTable("Hr_SalaryIssueDistribution");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrSalaryIssueDoc", b =>
                {
                    b.Property<int>("SalaryIssuDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAddValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalDeduction")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalOtherValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("SalaryIssuDocId");

                    b.ToTable("Hr_SalaryIssueDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrSalaryTypes", b =>
                {
                    b.Property<int>("SalaryTypId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("AffectType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("AnnualPeriods")
                        .HasColumnType("int");

                    b.Property<byte?>("Approximation")
                        .HasColumnType("tinyint");

                    b.Property<int?>("AttendElementId")
                        .HasColumnType("int");

                    b.Property<bool?>("AutoIssue")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanDelet")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("CreditAccFilter")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CreditAccId")
                        .HasColumnType("int");

                    b.Property<byte?>("CreditCostCenterFilter")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CreditCostCenterId")
                        .HasColumnType("int");

                    b.Property<byte?>("DebitAccFilter")
                        .HasColumnType("tinyint");

                    b.Property<int?>("DebitAccId")
                        .HasColumnType("int");

                    b.Property<byte?>("DebitCostCenterFilter")
                        .HasColumnType("tinyint");

                    b.Property<int?>("DebitCostCenterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Devide")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Distributable")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ElementCount")
                        .HasColumnType("numeric(18, 5)");

                    b.Property<string>("ElementCountDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Equation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("ImplementScale")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Indmnity")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("IsAnnualSegment")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBasicsalary")
                        .HasColumnType("bit");

                    b.Property<bool?>("LargerThanZero")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MaximumVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MinimumVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Multiply")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParentRelation")
                        .HasColumnType("int");

                    b.Property<byte?>("SalaryCalcMethod")
                        .HasColumnType("tinyint");

                    b.Property<string>("SalaryCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("SalaryValu")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("SocialSecurity")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Taxation")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("UseElementOrUnit")
                        .HasColumnType("bit");

                    b.Property<byte?>("UseType")
                        .HasColumnType("tinyint");

                    b.HasKey("SalaryTypId");

                    b.ToTable("Hr_SalaryTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrSegments", b =>
                {
                    b.Property<int>("SegmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("FromSegmant")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("SalaryTypId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SegmantPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("SegmentSerial")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("ToSegmant")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("SegmentId");

                    b.HasIndex("SalaryTypId");

                    b.ToTable("Hr_Segments");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrShifts", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Day1Name1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Day1Name2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Day1Type")
                        .HasColumnType("bit");

                    b.Property<string>("Day2Name1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Day2Name2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Day2Type")
                        .HasColumnType("bit");

                    b.Property<string>("Day3Name1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Day3Name2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Day3Type")
                        .HasColumnType("bit");

                    b.Property<string>("Day4Name1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Day4Name2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Day4Type")
                        .HasColumnType("bit");

                    b.Property<string>("Day5Name1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Day5Name2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Day5Type")
                        .HasColumnType("bit");

                    b.Property<string>("Day6Name1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Day6Name2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Day6Type")
                        .HasColumnType("bit");

                    b.Property<string>("Day7Name1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Day7Name2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Day7Type")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("FirstShfDay1tFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FirstShftDay1To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FirstShftDay2From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FirstShftDay2To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FirstShftDay3From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FirstShftDay3To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FirstShftDay4From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FirstShftDay4To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FirstShftDay5From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FirstShftDay5To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FirstShftDay6From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FirstShftDay6To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FirstShftDay7From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FirstShftDay7To")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("SecondShftDay1From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("SecondShftDay1To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("SecondShftDay2From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("SecondShftDay2To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("SecondShftDay3From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("SecondShftDay3To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("SecondShftDay4From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("SecondShftDay4To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("SecondShftDay5From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("SecondShftDay5To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("SecondShftDay6From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("SecondShftDay6To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("SecondShftDay7From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("SecondShftDay7To")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ShiftCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ThirdShftDay1From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ThirdShftDay1To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ThirdShftDay2From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ThirdShftDay2To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ThirdShftDay3From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ThirdShftDay3To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ThirdShftDay4From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ThirdShftDay4To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ThirdShftDay5From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ThirdShftDay5To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ThirdShftDay6From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ThirdShftDay6To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ThirdShftDay7From")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ThirdShftDay7To")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ShiftId");

                    b.ToTable("Hr_Shifts");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrTermination", b =>
                {
                    b.Property<int>("TerminateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpApprovedById")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ServiceEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<byte?>("TerminateType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("ValueDeserve")
                        .HasColumnType("tinyint");

                    b.HasKey("TerminateId");

                    b.ToTable("Hr_Termination");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrVacationDoc", b =>
                {
                    b.Property<int>("VacationDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("AnnualVacsBalance")
                        .HasColumnType("int");

                    b.Property<int?>("AttendElementId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DayCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpApprovedById")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("NetDaysCount")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ReservedVacsBalance")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VacRequestId")
                        .HasColumnType("int");

                    b.Property<byte?>("VacationType")
                        .HasColumnType("tinyint");

                    b.HasKey("VacationDocId");

                    b.ToTable("Hr_VacationDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrVacationEdit", b =>
                {
                    b.Property<int>("VacationEditDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("AnnualVacsBalance")
                        .HasColumnType("int");

                    b.Property<int?>("AttendElementId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DayCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpApprovedById")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("NetDaysCount")
                        .HasColumnType("int");

                    b.Property<int?>("NewDayCount")
                        .HasColumnType("int");

                    b.Property<int?>("NewNetDaysCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NewReturnDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ReservedVacsBalance")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VacationDocId")
                        .HasColumnType("int");

                    b.Property<byte?>("VacationType")
                        .HasColumnType("tinyint");

                    b.HasKey("VacationEditDocId");

                    b.ToTable("Hr_VacationEdit");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrVacationRequest", b =>
                {
                    b.Property<int>("VacRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("AnnualVacsBalance")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DayCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("NetDaysCount")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RequestImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReservedVacsBalance")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("VacationType")
                        .HasColumnType("tinyint");

                    b.HasKey("VacRequestId");

                    b.ToTable("Hr_VacationRequest");
                });

            modelBuilder.Entity("HR.Tables.Tables.LaLands", b =>
                {
                    b.Property<int>("LandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BasicMemeber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsResidential")
                        .HasColumnType("bit");

                    b.Property<int?>("LandInternalNo")
                        .HasColumnType("int");

                    b.Property<int?>("LandMainNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("LandSize")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<bool?>("RightLeft")
                        .HasColumnType("bit");

                    b.Property<int?>("StreetNo")
                        .HasColumnType("int");

                    b.HasKey("LandId");

                    b.HasIndex("CustomerId");

                    b.ToTable("La_Lands");
                });

            modelBuilder.Entity("HR.Tables.Tables.LaPropSerial", b =>
                {
                    b.Property<int>("PropId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustMain")
                        .HasColumnType("int");

                    b.Property<int?>("CustProp")
                        .HasColumnType("int");

                    b.Property<int?>("LandId")
                        .HasColumnType("int");

                    b.HasKey("PropId");

                    b.HasIndex("CustMain");

                    b.ToTable("La_PropSerial");
                });

            modelBuilder.Entity("HR.Tables.Tables.Mobile_Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Distance")
                        .HasColumnType("float");

                    b.Property<int?>("Emp_Id")
                        .HasColumnType("int");

                    b.Property<bool?>("In")
                        .HasColumnType("bit");

                    b.Property<bool?>("Out")
                        .HasColumnType("bit");

                    b.Property<string>("Qr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShftId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AttendanceId");

                    b.HasIndex("Emp_Id");

                    b.HasIndex("ShftId");

                    b.HasIndex("StoreId");

                    b.ToTable("Mobile_Attendance");
                });

            modelBuilder.Entity("HR.Tables.Tables.Mobile_Message", b =>
                {
                    b.Property<int>("TSuppId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Emp_Id")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TSuppId");

                    b.ToTable("Mobile_Messages");
                });

            modelBuilder.Entity("HR.Tables.Tables.Mobile_TechnicalSupport", b =>
                {
                    b.Property<int>("TSuppId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Emp_Id")
                        .HasColumnType("int");

                    b.Property<string>("Problem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TSuppId");

                    b.ToTable("Mobile_TechnicalSupport");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsAdjustMents", b =>
                {
                    b.Property<int>("AdjustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AdjSourcType")
                        .HasColumnType("bit")
                        .HasComment("1 customer, 2 vendor");

                    b.Property<int?>("AdjSourcTypeId")
                        .HasColumnType("int")
                        .HasComment("customer or vendor id");

                    b.Property<bool?>("AdjType")
                        .HasColumnType("bit")
                        .HasComment("1 debit, 2 credit");

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("CurrencyId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("DifferenceInvoices")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("DocBookId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaidInvoices")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("ResourceBalance")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("RetPurchId")
                        .HasColumnType("int");

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCheques")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalInvoices")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("AdjustId");

                    b.ToTable("Ms_AdjustMents");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsAttachments", b =>
                {
                    b.Property<int>("AttachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachDesc1")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AttachDesc2")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AttachPath")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("AttachPath2")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("AttachSerial")
                        .HasColumnType("int");

                    b.Property<string>("AttachType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Encrypted")
                        .HasColumnType("bit");

                    b.Property<string>("EncyptionDesc")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("IssuePlace")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("RenewalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("TableCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("TableEntityId")
                        .HasColumnType("int");

                    b.HasKey("AttachId");

                    b.ToTable("Ms_Attachments");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsBankAccount", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcounntNameA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AcounntNameE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AcountCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("AccountId");

                    b.ToTable("Ms_BankAccount");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsBoxBank", b =>
                {
                    b.Property<int>("BoxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("0 Box ,1  Bank")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("BankFax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("BankMobile")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("BankResposableName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BankTel")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("BoxCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CheckPrintId")
                        .HasColumnName("CheckPrintID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Desca")
                        .HasColumnName("DESCA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Desce")
                        .HasColumnName("DESCE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("ForAdjustOnly")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsBank")
                        .HasColumnType("bit")
                        .HasComment("0 Box ; 1 Bank");

                    b.Property<string>("KeeperName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BoxId");

                    b.ToTable("MS_BoxBank");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsBoxCurrency", b =>
                {
                    b.Property<int>("BoxCurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountChrtId")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BankExpensAccId")
                        .HasColumnType("int");

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.Property<int?>("ChequndercollectId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("RetAccountId")
                        .HasColumnType("int");

                    b.HasKey("BoxCurrencyId");

                    b.HasIndex("AccountId");

                    b.HasIndex("BoxId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("MS_BoxCurrency");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsBoxTransferDetail", b =>
                {
                    b.Property<int>("BoxTranDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BoxFrom")
                        .HasColumnType("int");

                    b.Property<int?>("BoxTo")
                        .HasColumnType("int");

                    b.Property<int?>("BoxTranId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Valu")
                        .HasColumnName("valu")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("BoxTranDetailId")
                        .HasName("PK_BoxTransferDetail");

                    b.HasIndex("BoxTranId");

                    b.ToTable("MS_BoxTransferDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsBoxTransferNote", b =>
                {
                    b.Property<int>("BoxTranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBox")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StrCustm1")
                        .HasColumnName("strCustm1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("StrCustm2")
                        .HasColumnName("strCustm2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("StrCustm3")
                        .HasColumnName("strCustm3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BoxTranId");

                    b.ToTable("MS_BoxTransferNote");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsBoxUsers", b =>
                {
                    b.Property<int>("BoxUsersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BoxUsersId");

                    b.HasIndex("BoxId");

                    b.HasIndex("UserId");

                    b.ToTable("Ms_BoxUsers");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsBusinessPartnerCategory", b =>
                {
                    b.Property<int>("BsPartnerCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CustomerCatLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("CustomerCatType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ParentCustomerCatId")
                        .HasColumnType("int");

                    b.Property<string>("PartnerCatCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PartnerCatDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PartnerCatDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BsPartnerCatId");

                    b.ToTable("Ms_BusinessPartnerCategory");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsBusinessPartnerType", b =>
                {
                    b.Property<int>("BsPartnerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PartnerTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PartnerTypeDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PartnerTypeDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("PartnerTypeLevel")
                        .HasColumnType("int");

                    b.Property<int?>("PartnerTypeParent")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BsPartnerTypeId");

                    b.ToTable("Ms_BusinessPartnerType");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsBusinessPartners", b =>
                {
                    b.Property<int>("BspartnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BSPartnerId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<byte?>("Barcode")
                        .HasColumnType("tinyint");

                    b.Property<int?>("BsPartnerCatId")
                        .HasColumnType("int");

                    b.Property<int?>("BsPartnerTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CarLicenseExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("CarLicenseIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CarLicenseIssuePlace")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CarLicenseNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("CreditLimit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CreditLimitAllowed")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CreditPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustId")
                        .HasColumnName("CustID")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CustJob")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("DefaultDisc")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("DiscPercentOrVal")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DtReg")
                        .HasColumnName("dtReg")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DtRegRenew")
                        .HasColumnName("dtRegRenew")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("ForAdjustOnly")
                        .HasColumnType("bit");

                    b.Property<string>("HomePage")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<bool?>("InternationalLicense")
                        .HasColumnType("bit");

                    b.Property<byte?>("InvoiceCopies")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCreditEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDiscountByItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPricIncludTax")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTaxExempted")
                        .HasColumnType("bit");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PartnerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PartnerDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PartnerDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("PassPortExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PassPortIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PassPortIssuePlace")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PassPortNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("PeriodType")
                        .HasColumnType("tinyint")
                        .HasComment("1 day, 2 month, 3 year");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("PrePaidPercent")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("ReportDiscValu")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("SalPrice")
                        .HasColumnType("tinyint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TaxExemptionNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TaxRefNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel3")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel4")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel5")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BspartnerId");

                    b.HasIndex("BsPartnerCatId");

                    b.HasIndex("BsPartnerTypeId");

                    b.ToTable("Ms_BusinessPartners");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCashTransactionDetail", b =>
                {
                    b.Property<int>("PaidDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdjustId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("JurnalId")
                        .HasColumnType("int");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaidBeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Paid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PaidBeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PaidByDoc")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PaidByDocBeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TableCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("TableId")
                        .HasColumnType("int");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("TrNoDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("PaidDocId");

                    b.HasIndex("AdjustId");

                    b.HasIndex("JurnalId");

                    b.HasIndex("PayId");

                    b.HasIndex("RectId");

                    b.ToTable("MS_CashTransactionDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCheqBooks", b =>
                {
                    b.Property<int>("CheqBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CheqBookCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CheqBookNamAr")
                        .HasColumnName("CheqBookNamAR")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CheqBookNamEn")
                        .HasColumnName("CheqBookNamEN")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CheqNum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrentNum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("EmpDefaultBook")
                        .HasColumnType("bit");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("StartAt")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CheqBookId")
                        .HasName("PK_Ms_Books");

                    b.HasIndex("EmpId");

                    b.ToTable("Ms_CheqBooks");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsChequeTransfer", b =>
                {
                    b.Property<int>("ChequTranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ChequTranId");

                    b.ToTable("Ms_ChequeTransfer");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsChequeTransferDetail", b =>
                {
                    b.Property<int>("ChequTranDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BalanceAfter")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("ChequTranDetailId");

                    b.ToTable("Ms_ChequeTransferDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsChequesOpenning", b =>
                {
                    b.Property<int>("ChequeOpenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BeneficiaryAccId")
                        .HasColumnName("beneficiaryAccId")
                        .HasColumnType("int");

                    b.Property<int?>("BoxCurrencyId")
                        .HasColumnType("int")
                        .HasComment("if Paper In [bank account and chartof account], if PaperOut [should be from book] and book is related to bank account which is related to account in chart of accounts");

                    b.Property<byte?>("CheckType")
                        .HasColumnType("tinyint");

                    b.Property<string>("ChequeNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("HelpTableName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("InOrOut")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHelpingAccount")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsKembiala")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(28, 7)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(28, 7)");

                    b.Property<decimal?>("ValueBeforeRate")
                        .HasColumnType("numeric(28, 7)");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("ChequeOpenId");

                    b.ToTable("Ms_ChequesOpenning");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCommission", b =>
                {
                    b.Property<int>("CommissionDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("CalcMethod")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("CommissionPercent")
                        .HasColumnType("numeric(10, 4)");

                    b.Property<decimal?>("CommissionValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FromBookId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<int?>("ToBookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.HasKey("CommissionDocId");

                    b.ToTable("Ms_Commission");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCompany", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<long?>("Code")
                        .HasColumnName("code")
                        .HasColumnType("bigint");

                    b.Property<string>("CompNameA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CompNameE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CompShortNameA")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CompShortNameE")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DateOfEstablishment")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Fax1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Fax2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Fax3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Fax4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LegalEntity")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<byte[]>("Logo")
                        .HasColumnType("image");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailBox")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Mobile1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Mobile2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Mobile3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Tel1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Tel2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Tel3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Tel4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Website1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Website2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Website3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("YearEndTo")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("YearStartfrom")
                        .HasColumnType("smalldatetime");

                    b.HasKey("CompanyId")
                        .HasName("PK_Cal_Company");

                    b.ToTable("MS_Company");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCurrency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnType("int");

                    b.Property<string>("CollectionCurrencyFractionName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CollectionCurrencyFractionName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CollectionCurrencyName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CollectionCurrencyName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CollectionCurrencyTempName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CurrancyNameFractionOverthree")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CurrancyNameFractionOverthree2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CurrancyNameOverthree")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CurrancyNameOverthree2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CurrancyNameTempOver3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CurrenctType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CurrencyCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CurrencyDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CurrencyDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CurrencySymbol")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("DecimalPlaces")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("DefualtCurrency")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DoubleCurencyFractionname")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DoubleCurencyFractionname2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DoubleCurencyTempname")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DoubleCurencyname")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DoubleCurencyname2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("EquivalentConversionPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("FractionalUnit")
                        .HasColumnName("fractionalUnit")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastModify")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("SingleCurencyFractionname")
                        .HasColumnName("singleCurencyFractionname")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SingleCurencyFractionname2")
                        .HasColumnName("singleCurencyFractionname2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SingleCurencyTempname")
                        .HasColumnName("singleCurencyTempname")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SingleCurencyname")
                        .HasColumnName("singleCurencyname")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SingleCurencyname2")
                        .HasColumnName("singleCurencyname2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CurrencyId");

                    b.ToTable("MS_Currency");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCurrencyCategory", b =>
                {
                    b.Property<int>("CurrencyCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnName("code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CurrencyCategoryNameA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CurrencyCategoryNameE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("CurrencyCategoryId");

                    b.ToTable("MS_CurrencyCategory");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCurrencyCategoryJoin", b =>
                {
                    b.Property<int>("CurrencyCatJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CurrencyCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<byte?>("CurrencyType")
                        .HasColumnType("tinyint");

                    b.HasKey("CurrencyCatJoinId");

                    b.HasIndex("CurrencyCategoryId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Ms_CurrencyCategoryJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCurrencyRate", b =>
                {
                    b.Property<int>("EqualCurrencyPriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("EquivalentCurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModify")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("EqualCurrencyPriceId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Ms_CurrencyRate");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCusromerUsers", b =>
                {
                    b.Property<int>("CustUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CustUserId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UserId");

                    b.ToTable("Ms_CusromerUsers");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCustImgs", b =>
                {
                    b.Property<int>("CustImgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<string>("ImgDesc1")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("ImgDesc2")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("CustImgId")
                        .HasName("PK_CustImgs");

                    b.HasIndex("CustomerId");

                    b.ToTable("Ms_CustImgs");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCustomer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<byte?>("Barcode")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("CarLicenseExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("CarLicenseIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CarLicenseIssuePlace")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CarLicenseNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("CreditLimit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CreditLimitAllowed")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CreditPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustId")
                        .HasColumnName("CustID")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CustJob")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CustomerCatId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CustomerDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CustomerDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("DefaultDisc")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("DiscPercentOrVal")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DtReg")
                        .HasColumnName("dtReg")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DtRegRenew")
                        .HasColumnName("dtRegRenew")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("ForAdjustOnly")
                        .HasColumnType("bit");

                    b.Property<string>("HomePage")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<bool?>("InternationalLicense")
                        .HasColumnType("bit");

                    b.Property<byte?>("InvoiceCopies")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCreditEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDiscountByItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPricIncludTax")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTaxExempted")
                        .HasColumnType("bit");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("PassPortExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PassPortIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PassPortIssuePlace")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PassPortNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("PeriodType")
                        .HasColumnType("tinyint")
                        .HasComment("1 day, 2 month, 3 year");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("PrePaidPercent")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("ReportDiscValu")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("SalPrice")
                        .HasColumnType("tinyint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TaxExemptionNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TaxRefNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel3")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel4")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel5")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CustomerId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerCatId");

                    b.HasIndex("CustomerTypeId");

                    b.ToTable("MS_Customer");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCustomerBranches", b =>
                {
                    b.Property<int>("CustBranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("CityId")
                        .HasColumnName("CityID")
                        .HasColumnType("int");

                    b.Property<string>("CustBranchCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CustBranchName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CustBranchName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("CustBranchId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Ms_CustomerBranches");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCustomerCategory", b =>
                {
                    b.Property<int>("CustomerCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CatDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CatDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CustomerCatLevel")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerCatParent")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ParentCustomerCatId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CustomerCatId");

                    b.ToTable("MS_CustomerCategory");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCustomerContacts", b =>
                {
                    b.Property<int>("CustContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId1")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId2")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId3")
                        .HasColumnType("int");

                    b.Property<string>("Bank1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Bank2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Bank3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BankAccNo1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BankAccNo2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BankAccNo3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ContactAddress1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactAddress2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactAddress3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ContactEmail1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactEmail2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactEmail3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactPhone1")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ContactPhone2")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ContactPhone3")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ContactPhone4")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ContactPhone5")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Idno")
                        .HasColumnName("IDNo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Isprimary")
                        .HasColumnType("bit");

                    b.Property<string>("PassPortNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Remark1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remark2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("CustContactId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Ms_CustomerContacts");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCustomerTypes", b =>
                {
                    b.Property<int>("CustomerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CustomerTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CustomerTypeDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CustomerTypeDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CustomerTypeLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("CustomerTypeLevelType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CustomerTypeParent")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CustomerTypeId");

                    b.ToTable("Ms_CustomerTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsDeliverItemCard", b =>
                {
                    b.Property<int>("DelivItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("DeliverId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobMaterialId")
                        .HasColumnName("jobMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpensAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpense")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpenseAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpenseUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("Satus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("DelivItemCardId")
                        .HasName("PK_DeliverItemCard");

                    b.HasIndex("DeliverId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("UnitId");

                    b.ToTable("Ms_DeliverItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsDeliverSalesInvoice", b =>
                {
                    b.Property<int>("DeliverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("DeliverQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DeliverQtyOut")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit")
                        .HasComment("True Closed ;  False  Not Closed");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetPricFromInvBeforCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NetPriceFromInv")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("RetPurchId")
                        .HasColumnType("int");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint")
                        .HasComment("0 Invoice ; 1 Customer ; 2 Return");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<string>("StrCustm4")
                        .HasColumnName("strCustm4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("StrCustm5")
                        .HasColumnName("strCustm5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCostAveragBeforCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalCostAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalLastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalLastCostBeforCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("DeliverId");

                    b.ToTable("Ms_DeliverSalesInvoice");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsDeliverSalesInvoiceExpenses", b =>
                {
                    b.Property<int>("DeliverIdExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliverId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("ValueAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ValueCurrency")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("DeliverIdExpenseId");

                    b.HasIndex("DeliverId");

                    b.ToTable("Ms_DeliverSalesInvoiceExpenses");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsDescription", b =>
                {
                    b.Property<int>("DescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("DescriptionId");

                    b.ToTable("Ms_Description");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsExpenses", b =>
                {
                    b.Property<int>("ExpensesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ExpensesCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ExpensesDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ExpensesDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("ExpensesType")
                        .HasColumnType("tinyint")
                        .HasComment("0 Sales , 1 Purchase , 2 Others");

                    b.Property<decimal?>("ExpensesValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ExpensesId");

                    b.ToTable("MS_Expenses");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsGaCapacity", b =>
                {
                    b.Property<int>("CapcityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CapcityCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CapcityDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CapcityDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CapcityId")
                        .HasName("PK_Ms_Capacity");

                    b.ToTable("MsGA_Capacity");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsGaLetterExport", b =>
                {
                    b.Property<int>("LetterExportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomsNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DeliverId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LetterExportId");

                    b.ToTable("MsGA_LetterExport");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsGaLetterExportDetail", b =>
                {
                    b.Property<int>("LetExpDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("BuyerAddress")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BuyerName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("ColLetterPrinted")
                        .HasColumnName("colLetterPrinted")
                        .HasColumnType("bit");

                    b.Property<bool?>("ColQutPrinted")
                        .HasColumnName("colQutPrinted")
                        .HasColumnType("bit");

                    b.Property<bool?>("ColSalePrinted")
                        .HasColumnName("colSalePrinted")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<bool?>("IsCurrentBuyer")
                        .HasColumnType("bit");

                    b.Property<int?>("LetterExportId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("LetExpDetailId");

                    b.HasIndex("LetterExportId");

                    b.ToTable("MsGA_LetterExportDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsGaLetterFayum", b =>
                {
                    b.Property<int>("LetterFayumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LetterFayumId");

                    b.ToTable("MsGA_LetterFayum");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsGaLetterFayumDetail", b =>
                {
                    b.Property<int>("LetFayumDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("BuyerAddress")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BuyerName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("ColLetterPrinted")
                        .HasColumnName("colLetterPrinted")
                        .HasColumnType("bit");

                    b.Property<bool?>("ColQutPrinted")
                        .HasColumnName("colQutPrinted")
                        .HasColumnType("bit");

                    b.Property<bool?>("ColSalePrinted")
                        .HasColumnName("colSalePrinted")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<bool?>("IsCurrentBuyer")
                        .HasColumnType("bit");

                    b.Property<int?>("LetterFayumId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("LetFayumDetailId");

                    b.HasIndex("LetterFayumId");

                    b.ToTable("MsGA_LetterFayumDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsGaLetterNormal", b =>
                {
                    b.Property<int>("LetterNormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LetterNormId");

                    b.ToTable("MsGA_LetterNormal");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsGaLetterNormalDetail", b =>
                {
                    b.Property<int>("LetNormDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("BuyerAddress")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BuyerName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("ColLetterPrinted")
                        .HasColumnName("colLetterPrinted")
                        .HasColumnType("bit");

                    b.Property<bool?>("ColQutPrinted")
                        .HasColumnName("colQutPrinted")
                        .HasColumnType("bit");

                    b.Property<bool?>("ColSalePrinted")
                        .HasColumnName("colSalePrinted")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<bool?>("IsCurrentBuyer")
                        .HasColumnType("bit");

                    b.Property<int?>("LetterNormId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("LetNormDetailId");

                    b.HasIndex("LetterNormId");

                    b.ToTable("MsGA_LetterNormalDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsGaMachineType", b =>
                {
                    b.Property<int>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MachineID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("MachineCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("MachineId")
                        .HasName("PK_Ms_type");

                    b.ToTable("MsGA_MachineType");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsGaMoror", b =>
                {
                    b.Property<int>("MororId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MororID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("MoroCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MororName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("MororId")
                        .HasName("PK_GAV_Moror");

                    b.ToTable("MsGA_Moror");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsGaMotorSn", b =>
                {
                    b.Property<int>("MotorDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DeliverId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("MotorDocId");

                    b.ToTable("MsGA_MotorSN");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsGaMotorSndetail", b =>
                {
                    b.Property<int>("MotorSearialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MotorSearialID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("BasicSaleType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((0))")
                        .HasComment("0 Cash ; 1 Installment");

                    b.Property<string>("BodySn")
                        .HasColumnName("BodySN")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("CapcityId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnName("CityID")
                        .HasColumnType("int");

                    b.Property<int?>("LetterFayumId")
                        .HasColumnType("int");

                    b.Property<int?>("LetterNormId")
                        .HasColumnType("int");

                    b.Property<bool?>("LetterType")
                        .HasColumnType("bit");

                    b.Property<int?>("MachineId")
                        .HasColumnName("MachineID")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("MororId")
                        .HasColumnName("MororID")
                        .HasColumnType("int");

                    b.Property<int?>("MotorDocId")
                        .HasColumnType("int");

                    b.Property<string>("MotorSn")
                        .HasColumnName("MotorSN")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("MotorSearialId")
                        .HasName("PK_Ms_MotorSearial");

                    b.HasIndex("LetterFayumId");

                    b.HasIndex("LetterNormId");

                    b.HasIndex("MotorDocId");

                    b.ToTable("MsGA_MotorSNDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsGaShipment", b =>
                {
                    b.Property<int>("ShipMentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ShipMentId");

                    b.ToTable("MsGA_Shipment");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsGaShipmentDetail", b =>
                {
                    b.Property<int>("ShipMentDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("BasicSaleType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((0))")
                        .HasComment("0 Cash ; 1 Installment");

                    b.Property<string>("BodySn")
                        .HasColumnName("BodySN")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("CapcityId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnName("CityID")
                        .HasColumnType("int");

                    b.Property<int?>("LetterExportId")
                        .HasColumnType("int");

                    b.Property<int?>("MachineId")
                        .HasColumnName("MachineID")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("MororId")
                        .HasColumnName("MororID")
                        .HasColumnType("int");

                    b.Property<string>("MotorSn")
                        .HasColumnName("MotorSN")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("Serial")
                        .HasColumnType("int");

                    b.Property<int>("ShipMentId")
                        .HasColumnType("int");

                    b.HasKey("ShipMentDetailId");

                    b.HasIndex("LetterExportId");

                    b.HasIndex("ShipMentId");

                    b.ToTable("MsGA_ShipmentDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemAlternatives", b =>
                {
                    b.Property<int>("AlterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlterItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("AlterId");

                    b.HasIndex("ItemCardId");

                    b.ToTable("MS_ItemAlternatives");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemCard", b =>
                {
                    b.Property<int>("ItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField10")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField8")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField9")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("AllPatchesSamePrice")
                        .HasColumnType("bit");

                    b.Property<bool?>("AutoSuggestBatches")
                        .HasColumnType("bit");

                    b.Property<int?>("BasUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BeforLastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CommisionEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("CostWithDimension")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("DimensionSalesPrice")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ExpirPeriod")
                        .HasColumnType("int");

                    b.Property<decimal?>("FirstPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FirstQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("InOffer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAttributeItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCommisionPercent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDimension")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDiscountPercent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExpir")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOfferDiscount")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOuterItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSerialItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTempItem")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ItemColor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ItemDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("ItemLimit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ItemMax")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("ItemSize")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint")
                        .HasComment("1  Finished product,2 Material,3 non stock Item,4 Manufactured,5 vehicle");

                    b.Property<decimal?>("LargePrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LargeQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostManual")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("LastPurchDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("LastSalePrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("LeastProfitMargin")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LeastSalesPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Length")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("ManualPurchasePrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("OfferDesc")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("1 day, 2 month, 3 year")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("OfferFromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("OfferToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<byte?>("PeriodType")
                        .HasColumnType("tinyint")
                        .HasComment("1 day, 2 month, 3 year");

                    b.Property<decimal?>("Price10")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price5")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price6")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price7")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price8")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price9")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ProductionItemUnit")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("QtyInBox")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyInNotebook")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyPartiation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Quantity5")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<decimal?>("SecandPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("SecandQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("SerialNoPrefix")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("SpecialItemExeclud")
                        .HasColumnType("bit");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<string>("StrCustm5")
                        .HasColumnName("strCustm5")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Tax1ForPurch")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tax1ForSale")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint")
                        .HasComment("0 Percent , 1 value , 2 Without");

                    b.Property<bool?>("Tax2ForPurch")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tax2ForSale")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint")
                        .HasComment("0 Percent , 1 value , 2 Without");

                    b.Property<bool?>("Tax3ForPurch")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tax3ForSale")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint")
                        .HasComment("0 Percent , 1 value , 2 Without");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<decimal?>("ThirdPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ThridQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("UseSameItemAsMaterial")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseSomeSubItems")
                        .HasColumnType("bit");

                    b.Property<int?>("WarantyPeriod")
                        .HasColumnType("int");

                    b.Property<byte?>("WarantyPeriodType")
                        .HasColumnType("tinyint")
                        .HasComment("1 day,2 week, 3 month, 4 year");

                    b.Property<decimal?>("Wheight")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Width")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ItemCardId");

                    b.HasIndex("ItemCategoryId");

                    b.ToTable("MS_ItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemCardOffers", b =>
                {
                    b.Property<int>("OfferItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BasicQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("GiftDiscount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("GiftItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("GiftQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("GiftUnitId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDiscountPercent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGiftDiscount")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReplace")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PriceAfterDisc")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("OfferItemId");

                    b.HasIndex("ItemCardId");

                    b.ToTable("Ms_ItemCardOffers");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemCategory", b =>
                {
                    b.Property<int>("ItemCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("CategoryImage")
                        .HasColumnType("image");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ItemCatCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ItemCatDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCatDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCategoryCatLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemCategoryType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ParentItemCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ItemCategoryId");

                    b.ToTable("MS_ItemCategory");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemCollection", b =>
                {
                    b.Property<int>("ItemCollectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("SubItemId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("ItemCollectId");

                    b.HasIndex("ItemCardId");

                    b.ToTable("Ms_ItemCollection");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemCostHistory", b =>
                {
                    b.Property<int>("ItemCostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AffectByTableId")
                        .HasColumnType("int");

                    b.Property<string>("AffectByTableName")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DocCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DocQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ItemLimit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ItemMax")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("LogDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("LogType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurNotReceived")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PurchaseOrder")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyInNotebook")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyInWithoutCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyOutWithoutBalance")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyPartiation")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("RequestedQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ReservedQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("SaleNotDelivered")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("SalesOrder")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<decimal?>("WithoutCost")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("ItemCostId")
                        .HasName("PK_MS_ItemCostLog");

                    b.ToTable("MS_ItemCostHistory");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemImages", b =>
                {
                    b.Property<int>("ImgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<string>("ImgDesc1")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("ImgDesc2")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.HasKey("ImgId");

                    b.HasIndex("ItemCardId");

                    b.ToTable("MS_ItemImages");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemPartition", b =>
                {
                    b.Property<int>("ItemPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ItemLimit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ItemMax")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurNotReceived")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PurchaseNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurchaseOrder")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyInNotebook")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyInWithoutCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyOutWithoutBalance")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyPartiation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("RequestedQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ReservedQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("SaleNotDelivered")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("SalesOrder")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Ttype")
                        .HasColumnName("TType")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasComment("i for inserted, u for updated")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<long?>("Tversion")
                        .HasColumnName("TVersion")
                        .HasColumnType("bigint")
                        .HasComment("number of updates on the table");

                    b.Property<decimal?>("VarianceQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WithoutCost")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("ItemPartId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("StorePartId");

                    b.ToTable("Ms_ItemPartition");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemSerials", b =>
                {
                    b.Property<int>("ItemSerialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DelivItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliverId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<int?>("InvItemCardId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsInOrOut")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderDetailItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<int?>("PurInvItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("RetItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("RetPurchId")
                        .HasColumnType("int");

                    b.Property<int?>("RetPurchItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Srno1")
                        .HasColumnName("SRNo1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Srno2")
                        .HasColumnName("SRNo2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Srno3")
                        .HasColumnName("SRNo3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Srno4")
                        .HasColumnName("SRNo4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Srno5")
                        .HasColumnName("SRNo5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StockAdjustId")
                        .HasColumnType("int");

                    b.Property<int?>("StockAdjustItemId")
                        .HasColumnType("int");

                    b.Property<int?>("StockRecId")
                        .HasColumnType("int");

                    b.Property<int?>("StockRecItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("TrItenCardId")
                        .HasColumnType("int");

                    b.Property<int?>("TranId")
                        .HasColumnType("int");

                    b.Property<int?>("TranReqId")
                        .HasColumnType("int");

                    b.Property<int?>("TranReqItemCardId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("WarrantyEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("WarrantyStrtDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("ItemSerialId")
                        .HasName("PK_MS_ItemSerials_1");

                    b.HasIndex("DelivItemCardId");

                    b.HasIndex("InvItemCardId");

                    b.HasIndex("OrderDetailItemCardId");

                    b.HasIndex("PurInvItemCardId");

                    b.HasIndex("RetItemCardId");

                    b.HasIndex("RetPurchItemCardId");

                    b.HasIndex("StockAdjustItemId");

                    b.HasIndex("StockRecItemCardId");

                    b.HasIndex("TrItenCardId");

                    b.HasIndex("TranReqItemCardId");

                    b.ToTable("MS_ItemSerials");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemSerialsTransactions", b =>
                {
                    b.Property<int>("ItemSerialTranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsInOrOut")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemSerialId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<string>("TableCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("TableEntityId")
                        .HasColumnType("int");

                    b.HasKey("ItemSerialTranId");

                    b.ToTable("MS_ItemSerialsTransactions");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemShortage", b =>
                {
                    b.Property<int>("ItemShortId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RequestedQtyBeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("RequestedQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ItemShortId");

                    b.ToTable("Ms_ItemShortage");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemStartQty", b =>
                {
                    b.Property<int>("StartQtyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyInNotebook")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyPartiation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.HasKey("StartQtyId");

                    b.HasIndex("ItemCardId");

                    b.ToTable("Ms_ItemStartQty");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemStockAdjustment", b =>
                {
                    b.Property<int>("StockAdjustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsReevaluation")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsStockOpenning")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("StockTotalCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("StockAdjustId");

                    b.ToTable("Ms_ItemStockAdjustment");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemStockAdjustmentDetail", b =>
                {
                    b.Property<int>("StockAdjustItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageOld")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageOldUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiffQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiffQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostOld")
                        .HasColumnName("FIFOCostOld")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostOldUnit")
                        .HasColumnName("FIFOCostOldUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostOld")
                        .HasColumnName("LIFOCostOld")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostOldUnit")
                        .HasColumnName("LIFOCostOldUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("NewQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("OldQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRateNew")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRateOld")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StockAdjustId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("StockAdjustItemId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("StockAdjustId");

                    b.ToTable("Ms_ItemStockAdjustmentDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemUnit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode1")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BarCode10")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BarCode11")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BarCode12")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BarCode13")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BarCode14")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BarCode15")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BarCode2")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BarCode3")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BarCode4")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BarCode5")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BarCode6")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BarCode7")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BarCode8")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BarCode9")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<int?>("BasUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BeforLastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("DefaultBarCode")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("IsBasicUnit")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultPurchas")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultSale")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotRegular")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostManual")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastSalePrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LeastProfitMargin")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LeastSalesPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ManualPurchasePrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price10")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price5")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price6")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price7")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price8")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price9")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity5")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("UnitCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UnitNam")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UnitNameE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("UnittRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Wheight")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("X")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Y")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Z")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("UnitId");

                    b.HasIndex("BasUnitId");

                    b.HasIndex("ItemCardId");

                    b.ToTable("Ms_ItemUnit");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemUnitPackingJoin", b =>
                {
                    b.Property<int>("ItemPackSizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MaxQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MaxWheight")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MineQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PackSizeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyInPackage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("RecomendedQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("ItemPackSizeId");

                    b.HasIndex("PackSizeId");

                    b.HasIndex("UnitId");

                    b.ToTable("Ms_ItemUnitPackingJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemVendors", b =>
                {
                    b.Property<int>("ItemVendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("Price1")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Price10")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Price2")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Price3")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Price4")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Price5")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Price6")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Price7")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Price8")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Price9")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Quantity1")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Quantity10")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Quantity2")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Quantity3")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Quantity4")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Quantity5")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Quantity6")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Quantity7")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Quantity8")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Quantity9")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("ItemVendorId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("VendorId");

                    b.ToTable("MS_ItemVendors");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsKeeperBank", b =>
                {
                    b.Property<int>("KeeperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("KeeperNo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCheques")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("KeeperId");

                    b.ToTable("Ms_KeeperBank");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsKeeperBankDetail", b =>
                {
                    b.Property<int>("KeeperDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CollectDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsCollected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTransferred")
                        .HasColumnType("bit");

                    b.Property<int?>("KeeperId")
                        .HasColumnType("int");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TransferredAte")
                        .HasColumnType("smalldatetime");

                    b.HasKey("KeeperDetailId");

                    b.HasIndex("KeeperId");

                    b.ToTable("Ms_KeeperBankDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsLetterOfGuarantee", b =>
                {
                    b.Property<int>("LetOfGrnteeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CashMargin")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Conditions")
                        .HasColumnType("nvarchar(1500)")
                        .HasMaxLength(1500);

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoverPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoverValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnName("DBTableId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasColumnName("DBTableName")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Expenses")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("IsCovered")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LetEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("LetOfGrnteeCatId")
                        .HasColumnType("int");

                    b.Property<int?>("LetOfGrnteeStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("LetOfGrnteeTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("PaperDirection")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("ResourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("ValueBeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("LetOfGrnteeId");

                    b.ToTable("Ms_LetterOfGuarantee");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsLetterOfGuaranteeCategory", b =>
                {
                    b.Property<int>("LetOfGrnteeCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LetOfGrnteeCatId");

                    b.ToTable("Ms_LetterOfGuaranteeCategory");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsLetterOfGuaranteeStatus", b =>
                {
                    b.Property<int>("LetOfGrnteeStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LetOfGrnteeStatusId");

                    b.ToTable("Ms_LetterOfGuaranteeStatus");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsLetterOfGuaranteeTrans", b =>
                {
                    b.Property<int>("LetOfGrnteeTranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CashMargin")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Conditions")
                        .HasColumnType("nvarchar(1500)")
                        .HasMaxLength(1500);

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoverPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoverValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnName("DBTableId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasColumnName("DBTableName")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("Expenses")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCovered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("LetEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("LetOfGrnteeCatId")
                        .HasColumnType("int");

                    b.Property<int?>("LetOfGrnteeId")
                        .HasColumnType("int");

                    b.Property<int?>("LetOfGrnteeStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("LetOfGrnteeStatusId1")
                        .HasColumnType("int");

                    b.Property<int?>("LetOfGrnteeTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("LetrOfGaccountId")
                        .HasColumnName("LetrOfGAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("LetrOfGcommisionAccountId")
                        .HasColumnName("LetrOfGCommisionAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("LetrOfGexpensAccountId")
                        .HasColumnName("LetrOfGExpensAccountId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("PaperDirection")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("ResourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("ValuEffect")
                        .HasColumnType("tinyint")
                        .HasComment("1 Uprais,2 Decreas, else none");

                    b.Property<decimal?>("ValueBeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("LetOfGrnteeTranId");

                    b.HasIndex("LetOfGrnteeId");

                    b.ToTable("Ms_LetterOfGuaranteeTrans");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsLetterOfGuaranteeTypes", b =>
                {
                    b.Property<int>("LetOfGrnteeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LetOfGrnteeTypeId");

                    b.ToTable("Ms_LetterOfGuaranteeTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsLotNumberConfiguration", b =>
                {
                    b.Property<int>("LotNumberConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("LotConfigDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Part1")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Part10")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<byte?>("Part10DateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part10Label")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("Part10type")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Part1DateType")
                        .HasColumnType("tinyint")
                        .HasComment("1 day,2 week,3 month,4 year");

                    b.Property<string>("Part1Label")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("Part1type")
                        .HasColumnType("tinyint")
                        .HasComment("1 fixed,2 manual,3 date");

                    b.Property<string>("Part2")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<byte?>("Part2DateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part2Label")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("Part2type")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part3")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<byte?>("Part3DateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part3Label")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("Part3type")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part4")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<byte?>("Part4DateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part4Label")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("Part4type")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part5")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<byte?>("Part5DateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part5Label")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("Part5type")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part6")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<byte?>("Part6DateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part6Label")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("Part6type")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part7")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<byte?>("Part7DateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part7Label")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("Part7type")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part8")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<byte?>("Part8DateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part8Label")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("Part8type")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part9")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<byte?>("Part9DateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part9Label")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("Part9type")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PartsCount")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LotNumberConfigId");

                    b.ToTable("MS_LotNumberConfiguration");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsLotNumberExpiry", b =>
                {
                    b.Property<int>("LotNumberExpiryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Disabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("FixedPart")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("LotNumberConfigId")
                        .HasColumnType("int");

                    b.Property<string>("LotNumberExpiry")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ManualPart")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ManualPart2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ManualPart3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ManualPart4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ManualPart5")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ManualPart6")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Month")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("Period")
                        .HasColumnType("int");

                    b.Property<byte?>("PeriodType")
                        .HasColumnType("tinyint")
                        .HasComment("1 day, 2 month, 3 year");

                    b.Property<DateTime?>("ProdDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Week")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("LotNumberExpiryId");

                    b.ToTable("MS_LotNumberExpiry");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPartition", b =>
                {
                    b.Property<int>("StorePartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CityId")
                        .HasColumnName("CityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PartCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PartDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PartDescE")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool?>("SharedPartition")
                        .HasColumnType("bit");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StoreKeeper")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("StrCustm2")
                        .HasColumnName("strCustm2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("StrCustm3")
                        .HasColumnName("strCustm3")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("StrCustm4")
                        .HasColumnName("strCustm4")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("StrCustm5")
                        .HasColumnName("strCustm5")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("StrCustm6")
                        .HasColumnName("strCustm6")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("X")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Y")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Z")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("StorePartId");

                    b.HasIndex("StoreId");

                    b.ToTable("MS_Partition");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPaymentNote", b =>
                {
                    b.Property<int>("PayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AccountTableName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<string>("BankAccNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("BankNoticId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.Property<string>("CheckNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("CheckType")
                        .HasColumnType("tinyint")
                        .HasComment("0 Paid ; 1 Back ; 2  Transfer;");

                    b.Property<int?>("CheqBookId")
                        .HasColumnType("int");

                    b.Property<int?>("ChequeOpenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustodyEmpId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnName("DBTableId")
                        .HasColumnType("int");

                    b.Property<string>("DbtableName")
                        .HasColumnName("DBTableName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("DifferenceInvoices")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Equation")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsKembiala")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPettyCash")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaidInvoices")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("NoteNum")
                        .HasColumnType("int");

                    b.Property<string>("OtherSource")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint")
                        .HasComment(" 1  Customer ; 2 vendor ; 3  Other");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("ResourceBalance")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StrCustm1")
                        .HasColumnName("strCustm1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("StrCustm2")
                        .HasColumnName("strCustm2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalInvoices")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItems")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<byte?>("TranType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Cash ; 1  Check");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Value1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value10")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value10BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value1BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value2BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value3BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value4BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value5")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value5BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value6")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value6BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value7")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value7BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value8")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value8BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value9")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value9BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ValueBeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("PayId");

                    b.HasIndex("BoxId");

                    b.HasIndex("PurInvId");

                    b.HasIndex("RetSaleId");

                    b.ToTable("MS_PaymentNote");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPaymentNoteCurrencies", b =>
                {
                    b.Property<int>("PayCurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Count")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CurrencyCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("PayCurId");

                    b.HasIndex("PayId");

                    b.ToTable("Ms_PaymentNoteCurrencies");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPaymentNoteItems", b =>
                {
                    b.Property<int>("PayItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal?>("ExecutedQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("ShipExecuted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("PayItemsId");

                    b.HasIndex("PayId");

                    b.ToTable("Ms_PaymentNoteItems");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPettyCashDetails", b =>
                {
                    b.Property<int>("PettycashDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPurchase")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReturnSales")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsStockRelated")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PettycashId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remark1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remark2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remark3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("PettycashDetailId");

                    b.HasIndex("PettycashId");

                    b.ToTable("MS_PettyCashDetails");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPettyPaymentJoin", b =>
                {
                    b.Property<int>("PetyPayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<int?>("PettycashId")
                        .HasColumnType("int");

                    b.HasKey("PetyPayId");

                    b.HasIndex("PayId");

                    b.HasIndex("PettycashId");

                    b.ToTable("Ms_PettyPaymentJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPettycash", b =>
                {
                    b.Property<int>("PettycashId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint")
                        .HasComment(" 1  Customer ; 2 vendor ; 3  Other");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalFilteredPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalPaidPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VjorderId")
                        .HasColumnName("VJOrderId")
                        .HasColumnType("int");

                    b.HasKey("PettycashId");

                    b.ToTable("MS_Pettycash");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPosItemCategory", b =>
                {
                    b.Property<int>("PosItemCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<bool?>("UseItemBarcode")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseItemCode")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseItemImg")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseItemName")
                        .HasColumnType("bit");

                    b.HasKey("PosItemCategoryId");

                    b.ToTable("Ms_PosItemCategory");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPosPaymentMethods", b =>
                {
                    b.Property<int>("PayMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AddPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Desc1")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Desc2")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool?>("MandatoryFieldData")
                        .HasColumnType("bit");

                    b.Property<byte[]>("MethodImage")
                        .HasColumnType("image");

                    b.Property<string>("UserQuestion")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("PayMethodId");

                    b.ToTable("Ms_PosPaymentMethods");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPosSpecialItems", b =>
                {
                    b.Property<int>("SpecialItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("SpecialItemCardId");

                    b.ToTable("Ms_PosSpecialItems");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPossettings", b =>
                {
                    b.Property<int>("PosSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BasUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BtnItemCatHeight")
                        .HasColumnType("int");

                    b.Property<int?>("BtnItemCatWidth")
                        .HasColumnType("int");

                    b.Property<int?>("BtnItemHeight")
                        .HasColumnType("int");

                    b.Property<int?>("BtnItemWidth")
                        .HasColumnType("int");

                    b.Property<int?>("BtnPayMethodHeight")
                        .HasColumnType("int");

                    b.Property<int?>("BtnPayMethodWidth")
                        .HasColumnType("int");

                    b.Property<int?>("CashTermId")
                        .HasColumnType("int");

                    b.Property<string>("CmdCredit")
                        .HasColumnName("cmdCredit")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdCredit2")
                        .HasColumnName("cmdCredit2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdDelete")
                        .HasColumnName("cmdDelete")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdDelete2")
                        .HasColumnName("cmdDelete2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdDeleteItem")
                        .HasColumnName("cmdDeleteItem")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdDeleteItem2")
                        .HasColumnName("cmdDeleteItem2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdDiscount")
                        .HasColumnName("cmdDiscount")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdDiscount2")
                        .HasColumnName("cmdDiscount2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdDocSearch")
                        .HasColumnName("cmdDocSearch")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdDocSearch2")
                        .HasColumnName("cmdDocSearch2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdEdit")
                        .HasColumnName("cmdEdit")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdEdit2")
                        .HasColumnName("cmdEdit2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdFirst")
                        .HasColumnName("cmdFirst")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdFirst2")
                        .HasColumnName("cmdFirst2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdHold")
                        .HasColumnName("cmdHold")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdHold2")
                        .HasColumnName("cmdHold2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdItemEdit")
                        .HasColumnName("cmdItemEdit")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdItemEdit2")
                        .HasColumnName("cmdItemEdit2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdItemSearch1")
                        .HasColumnName("cmdItemSearch1")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdItemSearch2")
                        .HasColumnName("cmdItemSearch2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdLast")
                        .HasColumnName("cmdLast")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdLast2")
                        .HasColumnName("cmdLast2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdNew")
                        .HasColumnName("cmdNew")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdNew2")
                        .HasColumnName("cmdNew2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdNext")
                        .HasColumnName("cmdNext")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdNext2")
                        .HasColumnName("cmdNext2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdOffer1")
                        .HasColumnName("cmdOffer1")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdOffer2")
                        .HasColumnName("cmdOffer2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdPay")
                        .HasColumnName("cmdPay")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdPay2")
                        .HasColumnName("cmdPay2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdPreview")
                        .HasColumnName("cmdPreview")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdPreview2")
                        .HasColumnName("cmdPreview2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdPrevious")
                        .HasColumnName("cmdPrevious")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdPrevious2")
                        .HasColumnName("cmdPrevious2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdPrint")
                        .HasColumnName("cmdPrint")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdPrint2")
                        .HasColumnName("cmdPrint2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdRetWithInv")
                        .HasColumnName("cmdRetWithInv")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdRetWithInv2")
                        .HasColumnName("cmdRetWithInv2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdRetWithoutInv")
                        .HasColumnName("cmdRetWithoutInv")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdRetWithoutInv2")
                        .HasColumnName("cmdRetWithoutInv2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdSave")
                        .HasColumnName("cmdSave")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdSave2")
                        .HasColumnName("cmdSave2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdShortage")
                        .HasColumnName("cmdShortage")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdShortage2")
                        .HasColumnName("cmdShortage2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdUndo")
                        .HasColumnName("cmdUndo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CmdUndo2")
                        .HasColumnName("cmdUndo2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CreditTermId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DefCustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DefEmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpAccountId")
                        .HasColumnType("int");

                    b.Property<bool?>("MinusNoteQty")
                        .HasColumnType("bit");

                    b.Property<int?>("PayMethodTermId")
                        .HasColumnType("int");

                    b.Property<int?>("RetBookId")
                        .HasColumnType("int");

                    b.Property<int?>("ReturnCashTermId")
                        .HasColumnType("int");

                    b.Property<int?>("ReturnCreditTermId")
                        .HasColumnType("int");

                    b.Property<int?>("ReturnPayMethodTermId")
                        .HasColumnType("int");

                    b.Property<bool?>("UseItemDefStorIfNoQty")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseOffers")
                        .HasColumnType("bit");

                    b.Property<int?>("VendorAccountId")
                        .HasColumnType("int");

                    b.HasKey("PosSetId");

                    b.ToTable("Ms_POSSettings");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPurchInvVehicleJobOrderJoin", b =>
                {
                    b.Property<int>("PurchVehiclJobOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("VjorderId")
                        .HasColumnName("VJOrderId")
                        .HasColumnType("int");

                    b.HasKey("PurchVehiclJobOrderId");

                    b.HasIndex("PurInvId");

                    b.HasIndex("VjorderId");

                    b.ToTable("Ms_PurchInvVehicleJobOrderJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPurchOrderDetail", b =>
                {
                    b.Property<int>("OrderDetailItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisAmountAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("PriceIncludTaxInPurch")
                        .HasColumnType("bit");

                    b.Property<int?>("PurOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyExecuted")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyExecutedBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("OrderDetailItemCardId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("PurOrderId");

                    b.ToTable("MS_PurchOrderDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPurchOrderReqDetail", b =>
                {
                    b.Property<int>("OrderDetailItemReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisAmountAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("PriceIncludTaxInPurch")
                        .HasColumnType("bit");

                    b.Property<int?>("PurOrderReqId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyExecuted")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyExecutedBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("OrderDetailItemReqId");

                    b.HasIndex("PurOrderReqId");

                    b.ToTable("MS_PurchOrderReqDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPurchasInvoice", b =>
                {
                    b.Property<int>("PurInvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("DeliverNoCostExecut")
                        .HasColumnType("bit");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenValueBeforCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenValueWithCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("InvDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("InvDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("InvDueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Cash ; 1  Due ");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int?>("IsNoCostDeliver")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsShippingInv")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NetPriceBeforCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PaidPriceVisa")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PurOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VendBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("PurInvId");

                    b.HasIndex("PurOrderId");

                    b.HasIndex("TaxesId1");

                    b.HasIndex("VendorId");

                    b.ToTable("MS_PurchasInvoice");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPurchasInvoiceCurrencies", b =>
                {
                    b.Property<int>("PurInvCurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Count")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CurrencyCategoryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("PurInvCurId");

                    b.HasIndex("PurInvId");

                    b.ToTable("MS_PurchasInvoiceCurrencies");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPurchasOrder", b =>
                {
                    b.Property<int>("PurOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DeliveryPeriodDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ExpiryPeriodDays")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("InvDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("InvDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("InvDueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Cash ; 1  Due ");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PaidPriceVisa")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PayPeriodDays")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VendBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("PurOrderId");

                    b.ToTable("Ms_PurchasOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPurchasOrderRequest", b =>
                {
                    b.Property<int>("PurOrderReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DeliveryPeriodDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ExpiryPeriodDays")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("InvDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("InvDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("InvDueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Cash ; 1  Due ");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PayPeriodDays")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VendBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("PurOrderReqId");

                    b.ToTable("Ms_PurchasOrderRequest");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPurchaseInvoiceCostReceived", b =>
                {
                    b.Property<int>("PurNoCostStockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StockRecId")
                        .HasColumnType("int");

                    b.HasKey("PurNoCostStockId");

                    b.HasIndex("PurInvId");

                    b.ToTable("Ms_PurchaseInvoiceCostReceived");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPurchaseInvoiceExpenses", b =>
                {
                    b.Property<int>("PurExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("ValueAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ValueCurrency")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("PurExpenseId");

                    b.HasIndex("PurInvId");

                    b.ToTable("MS_PurchaseInvoiceExpenses");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPurchaseInvoiceItemCard", b =>
                {
                    b.Property<int>("InvItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CityIdfrom")
                        .HasColumnName("CityIDFrom")
                        .HasColumnType("int");

                    b.Property<int?>("CityIdto")
                        .HasColumnName("CityIDTo")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("DeliverNoCostExecut")
                        .HasColumnType("bit");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisAmountAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("IsNoCostDeliver")
                        .HasColumnType("int");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpensAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpense")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpenseAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpenseUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("PriceIncludTaxInPurch")
                        .HasColumnType("bit");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyRecievedBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityRecieved")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("ReturnQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ReturnQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("StockRecId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("VjorderId")
                        .HasColumnName("VJOrderId")
                        .HasColumnType("int");

                    b.HasKey("InvItemCardId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("PurInvId");

                    b.HasIndex("UnitId");

                    b.ToTable("MS_PurchaseInvoiceItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsRecPayDocJoin", b =>
                {
                    b.Property<int>("InvRecPayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DocId")
                        .HasColumnType("int");

                    b.Property<byte?>("DocType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Paid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.HasKey("InvRecPayId");

                    b.ToTable("Ms_RecPayDocJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsReceiptNote", b =>
                {
                    b.Property<int>("RectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote")
                        .HasMaxLength(100);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<string>("BankAccNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("BankNoticId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.Property<string>("CheckNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("CheckType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CheqBookId")
                        .HasColumnType("int");

                    b.Property<bool?>("ChequOwnerId")
                        .HasColumnType("bit");

                    b.Property<int?>("ChequeOpenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChequeTran")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ClientAccNo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ClientBankId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CollectorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnName("DBTableId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasColumnName("DBTableName")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("DifferenceInvoices")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Equation")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InstallDates")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsKembiala")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("KeeperId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaidInvoices")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("NoteNum")
                        .HasColumnType("int");

                    b.Property<string>("OtherSource")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("OwnerTranId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ResourceBalance")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("RetPurId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StrCustm1")
                        .HasColumnName("strCustm1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("StrCustm2")
                        .HasColumnName("strCustm2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalInvoices")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<byte?>("TranType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Value1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value10")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value10BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value1BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value2BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value3BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value4BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value5")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value5BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value6")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value6BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value7")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value7BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value8")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value8BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value9")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value9BeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ValueBeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("RectId");

                    b.HasIndex("BoxId");

                    b.HasIndex("InvId");

                    b.HasIndex("RetPurId");

                    b.ToTable("Ms_ReceiptNote");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsReceiptNoteCurrencies", b =>
                {
                    b.Property<int>("RecCurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Count")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CurrencyCategoryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("RecCurId");

                    b.HasIndex("RectId");

                    b.ToTable("Ms_ReceiptNoteCurrencies");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsReturnPurchase", b =>
                {
                    b.Property<int>("RetPurchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0 Cash ; 1 Due ;");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsShippingInv")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PaidPriceVisa")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RetDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RetDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("RetTotal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ReturnQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("ReturnType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((0))")
                        .HasComment("0  Invoice ; 1 customer");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VendBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("RetPurchId");

                    b.ToTable("MS_ReturnPurchase");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsReturnPurchaseCurrencies", b =>
                {
                    b.Property<int>("RetPurchCurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Count")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CurrencyCategoryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("RetPurchId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("RetPurchCurId");

                    b.HasIndex("RetPurchId");

                    b.ToTable("MS_ReturnPurchaseCurrencies");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsReturnPurchaseExpenses", b =>
                {
                    b.Property<int>("RetPurchExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("RetPurchId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValueAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ValueCurrency")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("RetPurchExpenseId");

                    b.HasIndex("RetPurchId");

                    b.ToTable("Ms_ReturnPurchaseExpenses");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsReturnPurchaseItem", b =>
                {
                    b.Property<int>("RetPurchItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlterTo")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpensAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpense")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpenseAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpenseUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("PriceIncludTaxInPurch")
                        .HasColumnType("bit");

                    b.Property<decimal?>("QtyInBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyRecievedBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityIn")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityReceived")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("RetPurchId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ReturnQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ReturnQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("RetPurchItemCardId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("RetPurchId");

                    b.HasIndex("UnitId");

                    b.ToTable("MS_ReturnPurchaseItem");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsReturnSales", b =>
                {
                    b.Property<int>("RetSaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0 Cash ; 1 Due ; Customer Account");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPos")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsShippingInv")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PaidPriceVisa")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PayMethodId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PayMethodPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PayMethodValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RetDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RetDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("RetTotal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ReturnQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("ReturnType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Invoice ; 1  Customer");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemsCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemsProfit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("RetSaleId");

                    b.ToTable("MS_ReturnSales");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsReturnSalesCurrencies", b =>
                {
                    b.Property<int>("RetSaleCurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Count")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CurrencyCategoryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("RetSaleCurId");

                    b.HasIndex("RetSaleId");

                    b.ToTable("MS_ReturnSalesCurrencies");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsReturnSalesExpenses", b =>
                {
                    b.Property<int>("RetSaleExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValueAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ValueCurrency")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("RetSaleExpenseId");

                    b.HasIndex("RetSaleId");

                    b.ToTable("Ms_ReturnSalesExpenses");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsReturnSalesItemCard", b =>
                {
                    b.Property<int>("RetItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CommisionPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CommisionValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("InOffer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<int?>("ItemOfferId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("JobProductId")
                        .HasColumnName("jobProductId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("OfferPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpensAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpense")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpenseAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpenseUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("PriceIncludTaxInSales")
                        .HasColumnType("bit");

                    b.Property<decimal?>("QtyInBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityIn")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ReturnQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ReturnQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("RetItemCardId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("RetSaleId");

                    b.HasIndex("UnitId");

                    b.ToTable("MS_ReturnSalesItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesInvJobOrderJoin", b =>
                {
                    b.Property<int>("SalesInvJobOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("SalesInvJobOrderId");

                    b.HasIndex("InvId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Ms_SalesInvJobOrderJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesInvVehiclJobOrderJoin", b =>
                {
                    b.Property<int>("SalesVehiclJobOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("VjorderId")
                        .HasColumnName("VJOrderId")
                        .HasColumnType("int");

                    b.HasKey("SalesVehiclJobOrderId");

                    b.HasIndex("InvId");

                    b.HasIndex("VjorderId");

                    b.ToTable("Ms_SalesInvVehiclJobOrderJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesInvoice", b =>
                {
                    b.Property<int>("InvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenValueBeforCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenValueWithCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("InvDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("InvDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("InvDueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("InvQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Cash ; 1  Due ");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHold")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPos")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsShippingInv")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ItemCommision")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NetPriceBeforCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PaidPriceVisa")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("PayMethodDatafield")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("PayMethodId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PayMethodPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PayMethodValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("SalesOfferId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemsCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemsProfit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalJobOrders")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("InvId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SalesOfferId");

                    b.HasIndex("StoreId")
                        .HasName("StoreIdIndex");

                    b.ToTable("Ms_SalesInvoice");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesInvoiceCurrencies", b =>
                {
                    b.Property<int>("InvCurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Count")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CurrencyCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("InvCurId");

                    b.HasIndex("InvId");

                    b.ToTable("Ms_SalesInvoiceCurrencies");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesInvoiceExpenses", b =>
                {
                    b.Property<int>("SalesInvExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("ValueAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ValueCurrency")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("SalesInvExpenseId");

                    b.HasIndex("InvId");

                    b.ToTable("Ms_SalesInvoiceExpenses");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesInvoiceItemCard", b =>
                {
                    b.Property<int>("InvItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlterTo")
                        .HasColumnType("int");

                    b.Property<int?>("AlterToItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CityIdfrom")
                        .HasColumnName("CityIDFrom")
                        .HasColumnType("int");

                    b.Property<int?>("CityIdto")
                        .HasColumnName("CityIDTo")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CollectToItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CommisionPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CommisionValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisAmountAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("InOffer")
                        .HasColumnType("bit");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCommisionPercent")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<int?>("ItemOfferId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("JobProductId")
                        .HasColumnName("jobProductId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("OfferPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpensAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpense")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpenseAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpenseUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("PriceIncludTaxInSales")
                        .HasColumnType("bit");

                    b.Property<byte?>("PriceList")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("ReturnQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ReturnQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("VjorderId")
                        .HasColumnName("VJOrderId")
                        .HasColumnType("int");

                    b.HasKey("InvItemCardId")
                        .HasName("PK_InvoiceItemCard");

                    b.HasIndex("InvId")
                        .HasName("Inv");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("UnitId");

                    b.ToTable("Ms_SalesInvoiceItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesInvoiceItemCardDeleted", b =>
                {
                    b.Property<int>("DelInvItemcardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AddOrEditMode")
                        .HasColumnType("bit")
                        .HasComment("1 Add, 0 Edit");

                    b.Property<int?>("AlterTo")
                        .HasColumnType("int");

                    b.Property<int?>("AlterToItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CollectToItemCardId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<bool?>("DeletedOrChanged")
                        .HasColumnType("bit")
                        .HasComment("1Deleted,0 changed");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisAmountAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<int>("InvItemCardId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("LotNumberExpiry")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("ReturnQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ReturnQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("DelInvItemcardId");

                    b.ToTable("MS_SalesInvoiceItemCard_Deleted");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesInvoiceQualityDeliveryDocs", b =>
                {
                    b.Property<int>("QualitySaleDelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemDeliverId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("QualitySaleDelId");

                    b.HasIndex("InvId");

                    b.ToTable("Ms_SalesInvoiceQualityDeliveryDocs");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesInvoiceQualityMissedItems", b =>
                {
                    b.Property<int>("QualitySaleDelMissedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("EmpId")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemDeliverId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("QualitySaleDelMissedId");

                    b.HasIndex("InvId");

                    b.ToTable("Ms_SalesInvoiceQualityMissedItems");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesItemsOffers", b =>
                {
                    b.Property<int>("PromoOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField10")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField8")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField9")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsActiveOffer")
                        .HasColumnType("bit");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("PromoOfferId")
                        .HasName("PK_Ms_SalesItemsOffers_1");

                    b.ToTable("Ms_SalesItemsOffers");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesItemsOffersDetails", b =>
                {
                    b.Property<int>("ItemOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BaseDiscount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("BaseItemUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BaseItemUnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BaseQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BaseQtyBeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscForTotalPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsSeasonal")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("OfferedItemId")
                        .HasColumnType("int");

                    b.Property<int?>("OfferedItemUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OfferedItemUnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("OfferedQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("OfferedQtyBeforeRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("PriceIncludTaxInSales")
                        .HasColumnType("bit");

                    b.Property<int?>("PromoOfferId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("ItemOfferId")
                        .HasName("PK_Ms_SalesItemsOffers");

                    b.HasIndex("PromoOfferId");

                    b.ToTable("Ms_SalesItemsOffersDetails");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesOffer", b =>
                {
                    b.Property<int>("SalesOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DeliveryPeriodDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ExpiryPeriodDays")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("InvDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("InvDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("InvDueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("InvQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Cash ; 1  Due ");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsShippingInv")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PaidPriceVisa")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PayPeriodDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("SalesOfferId");

                    b.ToTable("Ms_SalesOffer");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesOfferItemCard", b =>
                {
                    b.Property<int>("SalesOffertemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlterTo")
                        .HasColumnType("int");

                    b.Property<int?>("AlterToItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CollectToItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisAmountAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExecuteQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExecuteQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("PriceIncludTaxInSales")
                        .HasColumnType("bit");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("SalesOfferId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("SalesOffertemCardId")
                        .HasName("PK_Table_1");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("SalesOfferId");

                    b.ToTable("Ms_SalesOfferItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesOfferItemRequest", b =>
                {
                    b.Property<int>("SalesOffertemCardReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlterTo")
                        .HasColumnType("int");

                    b.Property<int?>("AlterToItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CollectToItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisAmountAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExecuteQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExecuteQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("PriceIncludTaxInSales")
                        .HasColumnType("bit");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("SalesOfferReqId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("SalesOffertemCardReqId");

                    b.HasIndex("SalesOfferReqId");

                    b.ToTable("Ms_SalesOfferItemRequest");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesOfferRequest", b =>
                {
                    b.Property<int>("SalesOfferReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DeliveryPeriodDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ExpiryPeriodDays")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("InvDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("InvDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("InvDueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("InvQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Cash ; 1  Due ");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PayPeriodDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("SalesOfferReqId");

                    b.ToTable("Ms_SalesOfferRequest");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesOrder", b =>
                {
                    b.Property<int>("SalesOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("InvDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("InvDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("InvDueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("InvQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Cash ; 1  Due ");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsShippingInv")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PaidPriceVisa")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PurOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("SalesOfferId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("SalesOrderId");

                    b.ToTable("Ms_SalesOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesOrderItemCard", b =>
                {
                    b.Property<int>("SalesOrdertemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlterTo")
                        .HasColumnType("int");

                    b.Property<int?>("AlterToItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CollectToItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisAmountAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExecuteQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExecuteQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("PriceIncludTaxInSales")
                        .HasColumnType("bit");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("SalesOrdertemCardId");

                    b.HasIndex("SalesOrderId");

                    b.ToTable("Ms_SalesOrderItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSettings", b =>
                {
                    b.Property<int>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("AccountsDecimals")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("AlertCustCredit")
                        .HasColumnType("bit");

                    b.Property<int?>("AlertTimeOut")
                        .HasColumnType("int");

                    b.Property<bool?>("AlertVendCredit")
                        .HasColumnType("bit");

                    b.Property<byte?>("AskForAttachMove")
                        .HasColumnType("tinyint")
                        .HasComment("1 always copy, 2 always move,3 never copy or move,4 ask to move");

                    b.Property<string>("AttachmentPath")
                        .HasColumnType("nvarchar(2500)")
                        .HasMaxLength(2500);

                    b.Property<bool?>("ChekAlert")
                        .HasColumnName("chekAlert")
                        .HasColumnType("bit");

                    b.Property<byte?>("CostDicimals")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("CustCodOrNam")
                        .HasColumnType("bit");

                    b.Property<byte?>("DimensionDicimals")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("DistDiscOnJobOrderItems")
                        .HasColumnType("bit");

                    b.Property<int?>("ExpPeriod")
                        .HasColumnType("int");

                    b.Property<bool?>("ExpUseColor")
                        .HasColumnType("bit");

                    b.Property<bool?>("HideCurrency")
                        .HasColumnType("bit");

                    b.Property<bool?>("HideCustBranch")
                        .HasColumnType("bit");

                    b.Property<bool?>("HideDeletedDocs")
                        .HasColumnType("bit");

                    b.Property<bool?>("HideMoneyCollector")
                        .HasColumnType("bit");

                    b.Property<bool?>("HideSalesMan")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCostAffectDoc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ItemDefTax")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemIssueCostMethod")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("ItemIssueWhichCost")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("ItemLimitAlert")
                        .HasColumnType("bit");

                    b.Property<bool?>("ItemMaxAlert")
                        .HasColumnType("bit");

                    b.Property<byte?>("NoOfItemRemarksFields")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("PartCodOrNam")
                        .HasColumnType("bit");

                    b.Property<byte?>("PercentDicimals")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PriceDicimals")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("PriceIncludTaxInPurch")
                        .HasColumnType("bit");

                    b.Property<bool?>("PriceIncludTaxInSales")
                        .HasColumnType("bit");

                    b.Property<string>("PurchReturnItemCost")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte?>("QuantityDicimals")
                        .HasColumnType("tinyint");

                    b.Property<string>("SalesReturnItemCost")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ScaleAppPath")
                        .HasColumnType("nvarchar(2500)")
                        .HasMaxLength(2500);

                    b.Property<bool?>("ScaleAutoRead")
                        .HasColumnType("bit");

                    b.Property<string>("ScaleDataPath")
                        .HasColumnType("nvarchar(2500)")
                        .HasMaxLength(2500);

                    b.Property<bool?>("SearchItemWithQtySales")
                        .HasColumnType("bit");

                    b.Property<string>("SysDateFormat")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<byte?>("TimeDecimals")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("UseAlterItems")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseAnalyticalCode")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseAttributes")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseBarCodes")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseBasicOrAlterBarcod")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseBrancheCodeColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseBrancheNameColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseComposItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseCurrency")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseExpiryDateColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseExpirySystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseFinancialQtyOnly")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseHightColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseHijiryDate")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseItemTaxInPurch")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseItemTaxInSales")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseLengthColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseLotNumberColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UsePartitionCodeColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UsePartitionNameColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseProducDateColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseSalesJobOrders")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseSerialNumber")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseShipping")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseSimpleExpirySystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseUnitColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseVehicles")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseWeightCardSystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseWidthColumn")
                        .HasColumnType("bit");

                    b.Property<byte?>("ValuesDicimals")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("VendCodOrNam")
                        .HasColumnType("bit");

                    b.HasKey("SettingId");

                    b.ToTable("MS_Settings");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsStockReceiptItemCard", b =>
                {
                    b.Property<int>("StockRecItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("DeliverNoCostExecut")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool>("FireTriger")
                        .HasColumnType("bit");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<int?>("InvItemCardId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("IsNoCostDeliver")
                        .HasColumnType("int");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobGoStockId")
                        .HasColumnName("jobGoStockId")
                        .HasColumnType("int");

                    b.Property<int?>("JobProductId")
                        .HasColumnName("jobProductId")
                        .HasColumnType("int");

                    b.Property<int?>("JobScrapId")
                        .HasColumnName("jobScrapId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpensAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpense")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpenseAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpenseUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyInBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityIn")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("RetPurchItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("Satus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("StockRecId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("StockRecItemCardId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("StockRecId");

                    b.HasIndex("UnitId");

                    b.ToTable("MS_StockReceiptItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsStockRecript", b =>
                {
                    b.Property<int>("StockRecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<bool?>("CostExecuted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("ExpenValueBeforCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenValueWithCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit")
                        .HasComment("True Closed ;  False  Not Closed");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .HasColumnType("bit");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NetPriceBeforCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<int?>("PurOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("PurOrderReqId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurchaseInvQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ReceiptrQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("RetPurchId")
                        .HasColumnType("int");

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((0))")
                        .HasComment("0 Invoice ; 1 Return ; 2  Vendor ");

                    b.Property<string>("StockRecDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("StockRecDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("StockRecId");

                    b.ToTable("MS_StockRecript");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsStockRecriptExpenses", b =>
                {
                    b.Property<int>("StockRecExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StockRecId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValueAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ValueCurrency")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("StockRecExpenseId");

                    b.HasIndex("StockRecId");

                    b.ToTable("MS_StockRecriptExpenses");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsStockTranItemCard", b =>
                {
                    b.Property<int>("TrItenCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<int?>("PartFrom")
                        .HasColumnType("int");

                    b.Property<int?>("PartTo")
                        .HasColumnType("int");

                    b.Property<decimal?>("PriceAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpensAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpense")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpenseAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpenseUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("TranId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ValueRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("TrItenCardId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("TranId");

                    b.HasIndex("UnitId");

                    b.ToTable("MS_StockTranItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsStockTranItemCardReq", b =>
                {
                    b.Property<int>("TranReqItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenseShareUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<int?>("PartFrom")
                        .HasColumnType("int");

                    b.Property<int?>("PartTo")
                        .HasColumnType("int");

                    b.Property<decimal?>("PriceAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpensAfterCurrUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpense")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpenseAfterCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterExpenseUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("TranReqId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ValueRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("TranReqItemCardId");

                    b.HasIndex("TranReqId");

                    b.ToTable("Ms_StockTranItemCardReq");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsStockTransferNote", b =>
                {
                    b.Property<int>("TranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("StockTranDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("StockTranDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<int?>("TranReqId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("TranId");

                    b.ToTable("MS_StockTransferNote");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsStockTransferNoteRequest", b =>
                {
                    b.Property<int>("TranReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("StockTranDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("StockTranDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("TranReqId");

                    b.ToTable("Ms_StockTransferNoteRequest");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsStores", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.Property<byte[]>("BranchLogo")
                        .HasColumnType("image");

                    b.Property<int?>("CityId")
                        .HasColumnName("CityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Lat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrintField1Font")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PrintField1FontColor")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("PrintField1FontSize")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PrintField1FontStyle")
                        .HasColumnType("tinyint");

                    b.Property<string>("PrintField2Font")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PrintField2FontColor")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("PrintField2FontSize")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PrintField2FontStyle")
                        .HasColumnType("tinyint");

                    b.Property<string>("PrintField3Font")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PrintField3FontColor")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("PrintField3FontSize")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PrintField3FontStyle")
                        .HasColumnType("tinyint");

                    b.Property<string>("PrintField4Font")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PrintField4FontColor")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("PrintField4FontSize")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PrintField4FontStyle")
                        .HasColumnType("tinyint");

                    b.Property<string>("PrintField5Font")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PrintField5FontColor")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("PrintField5FontSize")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PrintField5FontStyle")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("StoreCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("StoreDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("StoreDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("StoreKeeper")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("StorePosition")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("StoreType")
                        .HasColumnType("bit")
                        .HasComment("true MainBranch , False Sub Branch");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("UserGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StoreId");

                    b.HasIndex("BoxId");

                    b.ToTable("MS_Stores");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsTaxes", b =>
                {
                    b.Property<int>("TaxesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<bool?>("PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TaxNameA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TaxNameE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("TaxRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("TaxStyle")
                        .HasColumnType("tinyint")
                        .HasComment("0 Percent , 1 value , 2 Without");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("TaxesId");

                    b.ToTable("MS_Taxes");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsTerms", b =>
                {
                    b.Property<int>("TermId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<bool?>("CashOrCredit")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("InventoryBookId")
                        .HasColumnType("int");

                    b.Property<int?>("InventoryTermId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDefaultTerm")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOpenningTerm")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsStopped")
                        .HasColumnType("bit");

                    b.Property<int?>("JournalEntryBookId")
                        .HasColumnType("int");

                    b.Property<int?>("JournalEntryTermId")
                        .HasColumnType("int");

                    b.Property<bool?>("SystemIssuedOnly")
                        .HasColumnType("bit");

                    b.Property<string>("TermCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TermName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("UseItemTax")
                        .HasColumnType("tinyint");

                    b.HasKey("TermId");

                    b.ToTable("Ms_Terms");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsTermsCostCenter", b =>
                {
                    b.Property<int>("TermCostCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AddCenter1DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddCenter2DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddCenter3DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddCenter4DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddCenter5DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddCostCenter1IsFixed")
                        .HasColumnType("bit");

                    b.Property<int?>("AddCostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("AddCostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("AddCostCenterId3")
                        .HasColumnType("int");

                    b.Property<int?>("AddCostCenterId4")
                        .HasColumnType("int");

                    b.Property<int?>("AddCostCenterId5")
                        .HasColumnType("int");

                    b.Property<bool?>("AddCostCenterIsFixed2")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddCostCenterIsFixed3")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddCostCenterIsFixed4")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddCostCenterIsFixed5")
                        .HasColumnType("bit");

                    b.Property<bool?>("CenterCashDebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("CenterDiscDebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("CenterTaxDebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("CostCenterCashIsFixed")
                        .HasColumnType("bit");

                    b.Property<int?>("CostCenterCredit")
                        .HasColumnType("int");

                    b.Property<bool?>("CostCenterCreditFixed")
                        .HasColumnType("bit");

                    b.Property<bool?>("CostCenterDebitFixed")
                        .HasColumnType("bit");

                    b.Property<bool?>("CostCenterDiscIsFixed")
                        .HasColumnType("bit");

                    b.Property<int?>("CostCenterIdCash")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterIdDebit")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterIdDisc")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterIdTax")
                        .HasColumnType("int");

                    b.Property<bool?>("CostCenterTaxIsFixed")
                        .HasColumnType("bit");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("ValuAddCostCenter1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValuAddCostCenter2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValuAddCostCenter3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValuAddCostCenter4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValuAddCostCenter5")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValuCostCenterCash")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValuCostCenterCredit")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValuCostCenterDebit")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValuCostCenterDisc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValuCostCenterTax")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("TermCostCenterId");

                    b.HasIndex("TermId");

                    b.ToTable("Ms_TermsCostCenter");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsTermsDetails", b =>
                {
                    b.Property<int>("TermDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AccCashDebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AccDiscDebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AccTaxDebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<byte?>("AccountCashIsFixed")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AccountCreditFixed")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AccountDebitFixed")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AccountDiscIsFixed")
                        .HasColumnType("tinyint");

                    b.Property<int?>("AccountIdCash")
                        .HasColumnType("int");

                    b.Property<int?>("AccountIdCredit")
                        .HasColumnType("int");

                    b.Property<int?>("AccountIdDebit")
                        .HasColumnType("int");

                    b.Property<int?>("AccountIdDisc")
                        .HasColumnType("int");

                    b.Property<int?>("AccountIdTax")
                        .HasColumnType("int");

                    b.Property<byte?>("AccountTaxIsFixed")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("AddAcc1DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddAcc2DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddAcc3DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddAcc4DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddAcc5DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<byte?>("AddAccount1IsFixed")
                        .HasColumnType("tinyint");

                    b.Property<int?>("AddAccountId1")
                        .HasColumnType("int");

                    b.Property<int?>("AddAccountId2")
                        .HasColumnType("int");

                    b.Property<int?>("AddAccountId3")
                        .HasColumnType("int");

                    b.Property<int?>("AddAccountId4")
                        .HasColumnType("int");

                    b.Property<int?>("AddAccountId5")
                        .HasColumnType("int");

                    b.Property<byte?>("AddAccountIsFixed2")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AddAccountIsFixed3")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AddAccountIsFixed4")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AddAccountIsFixed5")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AddCostCenter1IsFixed")
                        .HasColumnType("tinyint");

                    b.Property<int?>("AddCostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("AddCostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("AddCostCenterId3")
                        .HasColumnType("int");

                    b.Property<int?>("AddCostCenterId4")
                        .HasColumnType("int");

                    b.Property<int?>("AddCostCenterId5")
                        .HasColumnType("int");

                    b.Property<byte?>("AddCostCenterIsFixed2")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AddCostCenterIsFixed3")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AddCostCenterIsFixed4")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AddCostCenterIsFixed5")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("AnalaticalCodeMust")
                        .HasColumnType("bit");

                    b.Property<byte?>("CostCenterCashIsFixed")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("CostCenterCreditFixed")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("CostCenterDebitFixed")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("CostCenterDiscIsFixed")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CostCenterIdCash")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterIdCredit")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterIdDebit")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterIdDisc")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterIdTax")
                        .HasColumnType("int");

                    b.Property<byte?>("CostCenterTaxIsFixed")
                        .HasColumnType("tinyint");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("ValuAccountCash")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValuAccountCredit")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValuAccountDebit")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValuAccountDisc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValuAccountTax")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValuAddAccount1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValuAddAccount2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValuAddAccount3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValuAddAccount4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValuAddAccount5")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("TermDetailId");

                    b.HasIndex("TermId");

                    b.ToTable("Ms_TermsDetails");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsUserAuthentications", b =>
                {
                    b.Property<int>("AuthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("AuthDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AuthName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("AuthenticatedBy")
                        .HasColumnType("int")
                        .HasComment("the Id of the user who athurized to give this authentication");

                    b.Property<bool?>("Authinticated")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AuthId");

                    b.ToTable("MS_UserAuthentications");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsVendImgs", b =>
                {
                    b.Property<int>("VendImgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<string>("ImgDesc1")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("ImgDesc2")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("VendImgId");

                    b.HasIndex("VendorId");

                    b.ToTable("Ms_VendImgs");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsVendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("Barcode")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("CreditLimit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CreditPeriod")
                        .HasColumnType("int");

                    b.Property<byte?>("CreditPeriodType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DtReg")
                        .HasColumnName("dtReg")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DtRegRenew")
                        .HasColumnName("dtRegRenew")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("ForAdjustOnly")
                        .HasColumnType("bit");

                    b.Property<string>("HomePage")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<byte?>("InvoiceCopies")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCreditEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPricIncludTax")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTaxExempted")
                        .HasColumnType("bit");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("PrePaidPercent")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TaxExemptionNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TaxRefNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel3")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel4")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel5")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("VendId")
                        .HasColumnName("VendID")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("VendJob")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("VendorCatId")
                        .HasColumnType("int");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VendorDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("VendorDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("VendorTypeId")
                        .HasColumnType("int");

                    b.HasKey("VendorId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("VendorCatId");

                    b.HasIndex("VendorTypeId");

                    b.ToTable("MS_Vendor");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsVendorBranches", b =>
                {
                    b.Property<int>("VendBranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("CityId")
                        .HasColumnName("CityID")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("VendBranchCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VendBranchName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("VendBranchName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("VendBranchId");

                    b.HasIndex("VendorId");

                    b.ToTable("Ms_VendorBranches");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsVendorCategory", b =>
                {
                    b.Property<int>("VendorCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CatDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CatDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ParentVendorCatId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VendorCatLevel")
                        .HasColumnType("int");

                    b.Property<int?>("VendorCatParent")
                        .HasColumnType("int");

                    b.HasKey("VendorCatId");

                    b.ToTable("MS_VendorCategory");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsVendorContacts", b =>
                {
                    b.Property<int>("VendContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId1")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId2")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId3")
                        .HasColumnType("int");

                    b.Property<string>("Bank1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Bank2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Bank3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BankAccNo1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BankAccNo2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BankAccNo3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ContactAddress1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactAddress2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactAddress3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ContactEmail1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactEmail2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactEmail3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactPhone1")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ContactPhone2")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ContactPhone3")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ContactPhone4")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ContactPhone5")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<string>("Idno")
                        .HasColumnName("IDNo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Isprimary")
                        .HasColumnType("bit");

                    b.Property<string>("PassPortNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Remark1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remark2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("VendContactId");

                    b.HasIndex("VendorId");

                    b.ToTable("Ms_VendorContacts");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsVendorTypes", b =>
                {
                    b.Property<int>("VendorTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("VendorTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VendorTypeDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("VendorTypeDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("VendorTypeLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("VendorTypeLevelType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("VendorTypeParent")
                        .HasColumnType("int");

                    b.HasKey("VendorTypeId");

                    b.ToTable("Ms_VendorTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsVendorUsers", b =>
                {
                    b.Property<int>("VendUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("VendUserId");

                    b.HasIndex("UserId");

                    b.HasIndex("VendorId");

                    b.ToTable("Ms_VendorUsers");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsWeightCard", b =>
                {
                    b.Property<int>("ScaleCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnName("CityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<string>("ClosingDoc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ClosingDocId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId1")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId2")
                        .HasColumnType("int");

                    b.Property<int?>("EquipId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("InOrOut")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("SourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Weight1Date")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Weight1Time")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Weight2Date")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Weight2Time")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("WeightQty1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WeightQty2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WeightQtyDiff")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WeightQtyDiscount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WheightDiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("ScaleCardId");

                    b.ToTable("Ms_WeightCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsWeightcardItems", b =>
                {
                    b.Property<int>("WeightItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ScaleQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ScaleQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("WeightItemId");

                    b.HasIndex("ScaleCardId");

                    b.ToTable("Ms_WeightcardItems");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsgaCity", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CityID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SysCityId")
                        .HasColumnName("SysCityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CityId")
                        .HasName("PK_MS_City");

                    b.ToTable("MSGA_City");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdAttributeValue", b =>
                {
                    b.Property<int>("AttribValuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttributId")
                        .HasColumnType("int");

                    b.Property<string>("AttributValuName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AttributValuName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AttributValue")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("HeightCentimeter")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("HeightMeter")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("HeightMillimeters")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LengthCentimeter")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("LengthMeter")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("LengthMillimeters")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("WidthCentimeter")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("WidthMeter")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("WidthMillimeters")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("AttribValuId");

                    b.HasIndex("AttributId");

                    b.ToTable("Prod_AttributeValue");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdBasicUnits", b =>
                {
                    b.Property<int>("BasUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AutoDesc")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ParentUnit")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("UnitCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UnitNam")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UnitNameE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("UnittRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BasUnitId");

                    b.HasIndex("ParentUnit");

                    b.ToTable("Prod_BasicUnits");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdBillOfMaterial", b =>
                {
                    b.Property<int>("BillOfMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Bomcode")
                        .HasColumnName("BOMCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("IsScrapCost")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("OverflowQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("OverflowQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ScrapCostPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ScrapQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ScrapQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BillOfMaterialId");

                    b.ToTable("Prod_BillOfMaterial");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdBillOfMaterialItems", b =>
                {
                    b.Property<int>("BillItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<int>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MaterialProductPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ProductQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ProductQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ProductionUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProductionUnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("ScrapQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ScrapQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("BillItemsId");

                    b.HasIndex("BillOfMaterialId");

                    b.ToTable("Prod_BillOfMaterialItems");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdBillOfMaterialSecondaryItems", b =>
                {
                    b.Property<int>("BillSecondaryItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<int>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProductCostPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ProductQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ProductQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ProductionUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProductionUnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("SecondaryProductPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("BillSecondaryItemsId");

                    b.HasIndex("BillOfMaterialId");

                    b.ToTable("Prod_BillOfMaterialSecondaryItems");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdEquipProfile", b =>
                {
                    b.Property<int>("EquipProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EquipId")
                        .HasColumnType("int");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ProdileDesc")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ProfileCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("EquipProfileId");

                    b.HasIndex("EquipId");

                    b.ToTable("Prod_EquipProfile");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdEquipments", b =>
                {
                    b.Property<int>("EquipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BasUnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EquipCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EquipName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EquipName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("IsScale")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Jdesc")
                        .HasColumnName("JDesc")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal?>("MaxWeight")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MinWeight")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("NumberAvailable")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyPerUnit")
                        .HasColumnType("numeric(25, 4)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal?>("StandardDailyCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("StandardDailyWorkHours")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<byte?>("StandardHolyDays")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("StandardHourlyCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("StandardMonthlyCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TechnicalSpecs")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal?>("TimeRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("EquipId");

                    b.ToTable("Prod_Equipments");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdItemAttributes", b =>
                {
                    b.Property<int>("AttributId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttributCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("AttributName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AttributName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("BasUnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("DataType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("Dimension")
                        .HasColumnType("tinyint")
                        .HasComment("0 without,1 length,2 width,3 Height");

                    b.Property<decimal?>("IncrementalValu")
                        .HasColumnType("decimal(38, 10)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFixedMenuValues")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOptionalWithAlarm")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MaxValu")
                        .HasColumnType("decimal(38, 10)");

                    b.Property<decimal?>("MinValu")
                        .HasColumnType("decimal(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AttributId");

                    b.ToTable("Prod_ItemAttributes");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdItemAttributesBatche", b =>
                {
                    b.Property<int>("ItemAtrribBatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("DiscountValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("HeightCentimeter")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("HeightMeter")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("HeightMillimeters")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool?>("IsOpened")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsScrap")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsStandard")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTempItem")
                        .HasColumnType("bit");

                    b.Property<string>("ItemBatchCode")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("ItemBatchDesc")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ItemBatchName1")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ItemBatchName2")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LengthCentimeter")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("LengthMeter")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("LengthMillimeters")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("MultiplyValues")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("ParentBatchId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("QtyInBox")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("UseBatchPrice")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Wheight")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WidthCentimeter")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("WidthMeter")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("WidthMillimeters")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ItemAtrribBatchId")
                        .HasName("PK_Prod_ItemAttributesBatched");

                    b.ToTable("Prod_ItemAttributesBatche");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdItemAttributesBatchesDetails", b =>
                {
                    b.Property<int>("ItemAtrributBatchValuesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttribValuId")
                        .HasColumnType("int");

                    b.Property<string>("AttribValueDesc")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("AttributId")
                        .HasColumnType("int");

                    b.Property<int>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.HasKey("ItemAtrributBatchValuesId");

                    b.HasIndex("ItemAtrribBatchId");

                    b.ToTable("Prod_ItemAttributesBatchesDetails");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdItemAttributsJoin", b =>
                {
                    b.Property<int>("ProdItemAtrribId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttributId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ProdItemAtrribId")
                        .HasName("PK_Prod_ItemAttributs");

                    b.HasIndex("AttributId");

                    b.HasIndex("ItemCardId");

                    b.ToTable("Prod_ItemAttributsJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdItemBatchPartition", b =>
                {
                    b.Property<int>("ItemPatchPartitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ItemLimit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ItemMax")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurNotReceived")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PurchaseNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurchaseOrder")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyInNotebook")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyInWithoutCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyOutWithoutBalance")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyPartiation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38, 10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("RequestedQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ReservedQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("SalesNotDelivered")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("SalesOrder")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Ttype")
                        .HasColumnName("TType")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasComment("i for inserted, u for updated")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<long?>("Tversion")
                        .HasColumnName("TVersion")
                        .HasColumnType("bigint")
                        .HasComment("number of updates on the table");

                    b.Property<decimal?>("VarianceQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("WithoutCost")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("ItemPatchPartitionId");

                    b.HasIndex("ItemAtrribBatchId");

                    b.ToTable("Prod_ItemBatchPartition");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdItemcardExpenses", b =>
                {
                    b.Property<int>("ProdExpensId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExpenseValu")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("IsPercent")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("PercentOf")
                        .HasColumnType("tinyint");

                    b.HasKey("ProdExpensId");

                    b.HasIndex("ItemCardId");

                    b.ToTable("Prod_ItemcardExpenses");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrder", b =>
                {
                    b.Property<int>("JobOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CustomerCharged")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("InDirectExpensesAccountId")
                        .HasColumnType("int");

                    b.Property<bool?>("Installation")
                        .HasColumnType("bit");

                    b.Property<decimal?>("InstallationPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("IsDeliveredGoStock")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliveredMaterial")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliveredProducts")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliveredScrap")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("JorderTypeId")
                        .HasColumnName("JOrderTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("NetExpenses")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("OrderSource")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("OrderStatus")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("OrderType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<byte?>("Priority")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("ProducedQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<string>("RefOrder")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("TotalEquipCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalEquipCostEstimate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalExpensCostEstimate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalExpensesCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalGoStock")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalGoStockCostEstimate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalJobsCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalJobsCostEstimate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalJpbOrder")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalMaterialCostEstimate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalProducedMeter")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalProductCostEstimate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalProductsPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalPurchInvCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalScrap")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalScrapCostEstimate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalServices")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalTasksCose")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("JobOrderId");

                    b.ToTable("Prod_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderClosing", b =>
                {
                    b.Property<int>("JorderClosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("JOrderClosId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<byte?>("ClosingType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("JorderClosId");

                    b.ToTable("Prod_JobOrderClosing");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderEmpCostDoc", b =>
                {
                    b.Property<int>("JorderEmpDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("JOrderEmpDocId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<byte?>("TimingType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("JorderEmpDocId");

                    b.ToTable("Prod_JobOrderEmpCostDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderEmpCostDocDetail", b =>
                {
                    b.Property<int>("JorderEmpDocDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("JOrderEmpDocDetailId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CostHour")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExecutTime")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("JorderEmpDocId")
                        .HasColumnName("JOrderEmpDocId")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("JorderEmpDocDetailId");

                    b.HasIndex("JorderEmpDocId");

                    b.ToTable("Prod_JobOrderEmpCostDocDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderEquipCostDoc", b =>
                {
                    b.Property<int>("JorderEquipDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("JOrderEquipDocId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<byte?>("TimingType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("JorderEquipDocId");

                    b.ToTable("Prod_JobOrderEquipCostDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderEquipCostDocDetail", b =>
                {
                    b.Property<int>("JorderEquipDocDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("JOrderEquipDocDetailId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CostHour")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("EquipId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExecutTime")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("JorderEquipDocId")
                        .HasColumnName("JOrderEquipDocId")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("JorderEquipDocDetailId");

                    b.HasIndex("JorderEquipDocId");

                    b.ToTable("Prod_JobOrderEquipCostDocDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderEquipment", b =>
                {
                    b.Property<int>("JobEquipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("EquipId")
                        .HasColumnType("int");

                    b.Property<int?>("EquipProfileId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("JorderEquipDocDetailId")
                        .HasColumnName("JOrderEquipDocDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("JorderEquipDocId")
                        .HasColumnName("JOrderEquipDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("RealNumber")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("RequestedNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("StandardHourlyCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("TaskEquipJoinId")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("JobEquipId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderEquipment");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderExpenses", b =>
                {
                    b.Property<int>("JobExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<bool?>("BitOnClient")
                        .HasColumnName("bitOnClient")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExpensValue")
                        .HasColumnType("decimal(25, 3)");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("JobExpenseId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderExpenses");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderGoStock", b =>
                {
                    b.Property<int>("JobGoStockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("jobGoStockId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRateEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitIdEstimat")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("UnitRateEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("JobGoStockId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderGoStock");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderJobs", b =>
                {
                    b.Property<int>("JobJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("JorderEmpDocDetailId")
                        .HasColumnName("JOrderEmpDocDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("JorderEmpDocId")
                        .HasColumnName("JOrderEmpDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("RealNumber")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("RequestedNumber")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<int?>("TaskJobJoinId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("JobJobId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderJobs");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderMaterials", b =>
                {
                    b.Property<int>("JobMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("jobMaterialId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRateEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("RequestedMeter")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitIdEstimat")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("UnitRateEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("JobMaterialId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderMaterials");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderProducts", b =>
                {
                    b.Property<int>("JobProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("jobProductId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DescriptionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExpensesCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpensesCostInPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsProduced")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ItemCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ItemCostInPrcent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("JobsCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("JobsCostInPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MachineCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MachineCostInPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRateEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("ScrapCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ScrapCostInPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitIdEstimat")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("UnitRateEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("JobProductId");

                    b.HasIndex("ItemAtrribBatchId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderProducts");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderPurchaseInvoices", b =>
                {
                    b.Property<int>("JobPurchasInvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("JobPurchasInvId");

                    b.HasIndex("JobOrderId");

                    b.HasIndex("PurInvId");

                    b.ToTable("Prod_JobOrderPurchaseInvoices");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderScrap", b =>
                {
                    b.Property<int>("JobScrapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("jobScrapId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRateEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitIdEstimat")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("UnitRateEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("JobScrapId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderScrap");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderServices", b =>
                {
                    b.Property<int>("JobServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("JorderEmpDocDetailId")
                        .HasColumnName("JOrderEmpDocDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("JorderEmpDocId")
                        .HasColumnName("JOrderEmpDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("OtherCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal?>("ServiceValue")
                        .HasColumnType("decimal(25, 3)");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("JobServiceId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderServices");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderTasks", b =>
                {
                    b.Property<int>("JobTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("JobTaskId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderTasks");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderType", b =>
                {
                    b.Property<int>("JorderTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("JOrderTypeId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("ExpensesCostInPercent")
                        .HasColumnType("bit");

                    b.Property<int?>("FinishedItemRecBookId")
                        .HasColumnType("int");

                    b.Property<int?>("FinishedItemRecJournalBookId")
                        .HasColumnType("int");

                    b.Property<int?>("FinishedItemRecJournalTermId")
                        .HasColumnType("int");

                    b.Property<int?>("FinishedItemRecTermId")
                        .HasColumnType("int");

                    b.Property<int?>("FinishedItemStorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("GoStockItemRecBookId")
                        .HasColumnType("int");

                    b.Property<int?>("GoStockItemRecJournalBookId")
                        .HasColumnType("int");

                    b.Property<int?>("GoStockItemRecJournalTermId")
                        .HasColumnType("int");

                    b.Property<int?>("GoStockItemRecTermId")
                        .HasColumnType("int");

                    b.Property<int?>("GoStockItemStorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("InDirectExpensesAccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("IndirectCostPrcent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("IndirectJobsCostPrcent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("IndirectMachinesCostPrcent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("IndirectMaterialCostPrcent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("ItemCostInPrcent")
                        .HasColumnType("bit");

                    b.Property<byte?>("JobOrderMadeFor")
                        .HasColumnType("tinyint")
                        .HasComment("0 store, 1 customer");

                    b.Property<bool?>("JobsCostInPercent")
                        .HasColumnType("bit");

                    b.Property<bool?>("MachineCostInPercent")
                        .HasColumnType("bit");

                    b.Property<int?>("MaterialItemDelBookId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemDelJournalBookId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemDelJournalTermId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemDelTermId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemStorePartId")
                        .HasColumnType("int");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("ScrapItemRecBookId")
                        .HasColumnType("int");

                    b.Property<int?>("ScrapItemRecJournalBookId")
                        .HasColumnType("int");

                    b.Property<int?>("ScrapItemRecJournalTermId")
                        .HasColumnType("int");

                    b.Property<int?>("ScrapItemRecTermId")
                        .HasColumnType("int");

                    b.Property<int?>("ScrapItemStorePartId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("JorderTypeId");

                    b.ToTable("Prod_JobOrderType");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderWorkFlow", b =>
                {
                    b.Property<int>("JobOrderDepartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("JobOrderDepartId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderWorkFlow");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJoinTaskEquipments", b =>
                {
                    b.Property<int>("TaskEquipJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EquipId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("RequestedNumber")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("TaskEquipJoinId");

                    b.HasIndex("TaskId");

                    b.ToTable("Prod_JoinTaskEquipments");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJoinTaskJob", b =>
                {
                    b.Property<int>("TaskJobJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("RequestedNumber")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("TaskJobJoinId");

                    b.HasIndex("TaskId");

                    b.ToTable("Prod_JoinTaskJob");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdProductionLine", b =>
                {
                    b.Property<int>("ProLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ProdLinCode")
                        .HasColumnType("int");

                    b.Property<string>("ProdLinDesc")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ProdLinName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ProdLinName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("StandardQty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ProLineId");

                    b.ToTable("Prod_ProductionLine");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdProductionLineDetails", b =>
                {
                    b.Property<int>("ProdLineDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("ProLineId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.HasKey("ProdLineDetailId");

                    b.HasIndex("ProLineId");

                    b.ToTable("Prod_ProductionLineDetails");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdProductionOrder", b =>
                {
                    b.Property<int>("ProductionOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<byte?>("OrderStatus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ProductionOrderId");

                    b.ToTable("Prod_ProductionOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdProductionOrderDetail", b =>
                {
                    b.Property<int>("ProdOrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<int?>("ProLineId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductionOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("RecipeDetaiId")
                        .HasColumnType("int");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("ProdOrderDetailId");

                    b.HasIndex("ProductionOrderId");

                    b.ToTable("Prod_ProductionOrderDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdRecipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RecipeCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("RecipeId");

                    b.ToTable("Prod_Recipe");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdRecipeDetail", b =>
                {
                    b.Property<int>("RecipeDetaiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<int?>("ProLineId")
                        .HasColumnType("int");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("RecipeDetaiId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Prod_RecipeDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdSettings", b =>
                {
                    b.Property<int>("ProdSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccompanyproductsAccId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("CostingAdjustmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("DailyWorkHours")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DirectEquipmentAccId")
                        .HasColumnType("int");

                    b.Property<int?>("DirectServiceAccId")
                        .HasColumnType("int");

                    b.Property<int?>("DirectWorkersAccId")
                        .HasColumnType("int");

                    b.Property<bool?>("EmpDataSource")
                        .HasColumnType("bit")
                        .HasComment("1 production,2 Hr");

                    b.Property<int?>("FinishedProdValAccId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MonthlyStandardWorkDays")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("OtherCostsAccId")
                        .HasColumnType("int");

                    b.Property<int?>("OutSourceCost")
                        .HasColumnType("int");

                    b.Property<int?>("ScrapAccId")
                        .HasColumnType("int");

                    b.Property<byte?>("StandardCostPriority1")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("StandardCostPriority2")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("StandardCostPriority3")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UndercostOperationAccId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ProdSettingId");

                    b.ToTable("Prod_Settings");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdTasks", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("OperationType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("PurOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("TaskCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TaskDesc")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("TaskName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TaskName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("TaskId");

                    b.ToTable("Prod_Tasks");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdWorkOrder", b =>
                {
                    b.Property<int>("WorkOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CustomerCharged")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DocBarCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeliveredMaterial")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliveredProducts")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliveredScrap")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPos")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetExpenses")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PackageCount")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreEmpId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalEquipCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalEquipCostEstimate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalExpensCostEstimate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalExpensesCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalGoStockCostEstimate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalItemCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalJpbOrder")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalMaterialCostEstimate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TotalPieces")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalProductCostEstimate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalScrap")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalScrapCostEstimate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalServices")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("WorkOrderId");

                    b.ToTable("Prod_WorkOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdWorkOrderEquipment", b =>
                {
                    b.Property<int>("WorkOrderEquipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("EquipId")
                        .HasColumnType("int");

                    b.Property<int?>("EquipProfileId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("JorderEquipDocDetailId")
                        .HasColumnName("JOrderEquipDocDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("JorderEquipDocId")
                        .HasColumnName("JOrderEquipDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("RealNumber")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("RequestedNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("StandardHourlyCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("TaskEquipJoinId")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("WorkOrderEquipId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Prod_WorkOrderEquipment");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdWorkOrderExpenses", b =>
                {
                    b.Property<int>("WorkOrderExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<bool?>("BitOnClient")
                        .HasColumnName("bitOnClient")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExpensValue")
                        .HasColumnType("decimal(25, 3)");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("WorkOrderExpenseId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Prod_WorkOrderExpenses");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdWorkOrderItemRecQualityDocs", b =>
                {
                    b.Property<int>("WorkOrderRecQualityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemRecQualityId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("WorkOrderRecQualityId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Prod_WorkOrderItemRecQualityDocs");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdWorkOrderMaterials", b =>
                {
                    b.Property<int>("WorkOrderMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRateEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("RequestedMeter")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitIdEstimat")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("UnitRateEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("WorkOrderMaterialId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Prod_WorkOrderMaterials");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdWorkOrderProdItems", b =>
                {
                    b.Property<int>("WorkOrderProdItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("DoublCheckQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DoublCheckQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DoubleCleanQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExecutedQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExecutedQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemRecQualityDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemRecQualityId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MissedQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MissedQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NormalCleanQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NormalQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NormalQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceDoubleClean")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceNormal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRateEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("RejectedQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("RejectedQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("RequestedMeter")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ReturnQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ReturnQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalDoubleClean")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalNormal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitIdEstimat")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("UnitRateEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("WorkOrderProdItemId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Prod_WorkOrderProdItems");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdWorkOrderScrap", b =>
                {
                    b.Property<int>("WorkOrderScrapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRateEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitIdEstimat")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("UnitRateEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("WorkOrderScrapId");

                    b.ToTable("Prod_WorkOrderScrap");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdWorkOrderServices", b =>
                {
                    b.Property<int>("WorkOrderServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("JorderEmpDocDetailId")
                        .HasColumnName("JOrderEmpDocDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("JorderEmpDocId")
                        .HasColumnName("JOrderEmpDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("OtherCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal?>("ServiceValue")
                        .HasColumnType("decimal(25, 3)");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("WorkOrderServiceId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Prod_WorkOrderServices");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjAccounts", b =>
                {
                    b.Property<int>("ProjectAccId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(25, 2)");

                    b.HasKey("ProjectAccId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_Accounts");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjEstimateItems", b =>
                {
                    b.Property<int>("ProjectEstimateItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttributeCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AttributeName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal?>("EstimateCost")
                        .HasColumnType("numeric(25, 2)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SuggestPrice")
                        .HasColumnType("numeric(25, 2)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("ProjectEstimateItemId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_EstimateItems");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjExpenses", b =>
                {
                    b.Property<int>("ProjectExpensId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("EstimatePercent")
                        .HasColumnType("numeric(10, 4)");

                    b.Property<decimal?>("EstimateValue")
                        .HasColumnType("numeric(25, 2)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RealPercent")
                        .HasColumnType("numeric(10, 4)");

                    b.Property<decimal?>("RealValue")
                        .HasColumnType("numeric(25, 2)");

                    b.HasKey("ProjectExpensId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_Expenses");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjFund", b =>
                {
                    b.Property<int>("ProjectFundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("FundName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FundName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("FundPercent")
                        .HasColumnType("numeric(10, 4)");

                    b.Property<decimal?>("FundValue")
                        .HasColumnType("numeric(25, 2)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("ProjectFundId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_Fund");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjDocuments", b =>
                {
                    b.Property<int>("ProjDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AttachSerial")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<byte[]>("Fdata")
                        .HasColumnName("FData")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("Fsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FSId")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("IssuePlace")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("OwnShipBondId")
                        .HasColumnType("int");

                    b.Property<string>("PaperNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("RenewalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("SearchTags")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("ShelvId")
                        .HasColumnType("int");

                    b.HasKey("ProjDocumentId");

                    b.HasIndex("Fsid")
                        .IsUnique()
                        .HasName("UQ__Proj_Pro__9C4B07173ED718FB");

                    b.HasIndex("OwnShipBondId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_ProjDocuments");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjExploitJoin", b =>
                {
                    b.Property<int>("ProjExploitJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BuildExploitId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ProjExploitJoinId");

                    b.HasIndex("BuildExploitId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_ProjExploitJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjInsurance", b =>
                {
                    b.Property<int>("ProjInsuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BuildInsurStatId")
                        .HasColumnType("int");

                    b.Property<int?>("InsurCovTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InsuranceValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ProjInsuranceId");

                    b.HasIndex("BuildInsurStatId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_ProjInsurance");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjInsuranceUnit", b =>
                {
                    b.Property<int>("ProjInsuranceUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InsurCaseId")
                        .HasColumnType("int");

                    b.Property<int?>("InsurCovTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InsuranceValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitInsurstatId")
                        .HasColumnType("int");

                    b.HasKey("ProjInsuranceUnitId");

                    b.HasIndex("InsurCaseId");

                    b.HasIndex("ProjUnitId");

                    b.HasIndex("UnitInsurstatId");

                    b.ToTable("Proj_ProjInsuranceUnit");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjItemEmpTaskJoin", b =>
                {
                    b.Property<int>("ProjItemEmpTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ActualItemExpenseValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ActualItemPercentExpense")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpectItemPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpectItemValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FinishPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ProjItemEmpId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("ProjItemEmpTaskId");

                    b.HasIndex("ProjItemEmpId");

                    b.HasIndex("TaskId");

                    b.ToTable("Proj_ProjItemEmpTaskJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjOccupTypeJoin", b =>
                {
                    b.Property<int>("ProjOccupTypeJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BuildOccupTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ProjOccupTypeJoinId");

                    b.HasIndex("BuildOccupTypeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_ProjOccupTypeJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjOwnerJoin", b =>
                {
                    b.Property<int>("ProjOwnerJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountDescription")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("HelpAccId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ResourceAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("ResourceType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("SharePercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ShareValue")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("ProjOwnerJoinId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_ProjOwnerJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjParkingJoin", b =>
                {
                    b.Property<int>("ProjParkJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ParkingId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ProjParkJoinId");

                    b.HasIndex("ParkingId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_ProjParkingJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjPermitActivityJoin", b =>
                {
                    b.Property<int>("ProjPermitActivityJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BuildPermitActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ProjPermitActivityJoinId");

                    b.HasIndex("BuildPermitActivityId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_ProjPermitActivityJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjPerspectiveJoin", b =>
                {
                    b.Property<int>("ProjPerspectiveJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuildPerspectiveId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Fdata")
                        .HasColumnName("FData")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("Fsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FSId")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ProjPerspectiveJoinId");

                    b.HasIndex("BuildPerspectiveId");

                    b.HasIndex("Fsid")
                        .IsUnique()
                        .HasName("UQ__Proj_Pro__9C4B07178AD73A3B");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_ProjPerspectiveJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjPicture", b =>
                {
                    b.Property<int>("ProjPictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachPath")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<byte[]>("Fdata")
                        .HasColumnName("FData")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("Fsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FSId")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())")
                        .HasComment("");

                    b.Property<string>("Name1")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Name2")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("ProjPictureId");

                    b.HasIndex("Fsid")
                        .IsUnique()
                        .HasName("UQ__Proj_Pro__9C4B071785FAAD21");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_ProjPicture");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitDocument", b =>
                {
                    b.Property<int>("ProjUnitDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AttachSerial")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<byte[]>("Fdata")
                        .HasColumnName("FData")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("Fsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FSId")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("IssuePlace")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("OwnShipBondId")
                        .HasColumnType("int");

                    b.Property<string>("PaperNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("RenewalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("SearchTags")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("ShelvId")
                        .HasColumnType("int");

                    b.HasKey("ProjUnitDocumentId");

                    b.HasIndex("Fsid")
                        .IsUnique()
                        .HasName("UQ__Proj_Pro__9C4B07170092463A");

                    b.HasIndex("OwnShipBondId");

                    b.HasIndex("ProjUnitId");

                    b.ToTable("Proj_ProjUnitDocument");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitExploitJoin", b =>
                {
                    b.Property<int>("ProjUnitExploitJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("UnitExploitId")
                        .HasColumnType("int");

                    b.HasKey("ProjUnitExploitJoinId");

                    b.HasIndex("ProjUnitId");

                    b.HasIndex("UnitExploitId");

                    b.ToTable("Proj_ProjUnitExploitJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitInstallTemp", b =>
                {
                    b.Property<int>("ProjUnitInstallTempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InstallTempId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.HasKey("ProjUnitInstallTempId");

                    b.HasIndex("InstallTempId");

                    b.HasIndex("ProjUnitId");

                    b.ToTable("Proj_ProjUnitInstallTemp");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitOccupTypeJoin", b =>
                {
                    b.Property<int>("ProjUnitOccupTypeJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("UnitOccuTypeId")
                        .HasColumnType("int");

                    b.HasKey("ProjUnitOccupTypeJoinId");

                    b.HasIndex("ProjUnitId");

                    b.HasIndex("UnitOccuTypeId");

                    b.ToTable("Proj_ProjUnitOccupTypeJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitOwnerJoin", b =>
                {
                    b.Property<int>("ProjUnitOwnerJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountDescription")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("HelpAccId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsMainOwner")
                        .HasColumnType("bit");

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ResourceAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("ResourceType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("SharePercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ShareValue")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("ProjUnitOwnerJoinId");

                    b.HasIndex("ProjUnitId");

                    b.ToTable("Proj_ProjUnitOwnerJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitPermitActivityJoin", b =>
                {
                    b.Property<int>("ProjUnitPermitActivityJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("UnitPermitActivId")
                        .HasColumnType("int");

                    b.HasKey("ProjUnitPermitActivityJoinId");

                    b.HasIndex("ProjUnitId");

                    b.HasIndex("UnitPermitActivId");

                    b.ToTable("Proj_ProjUnitPermitActivityJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitPerspectiveJoin", b =>
                {
                    b.Property<int>("ProjUnitPerspectiveJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Fdata")
                        .HasColumnName("FData")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("Fsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FSId")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("UnitPerspectiveId")
                        .HasColumnType("int");

                    b.HasKey("ProjUnitPerspectiveJoinId");

                    b.HasIndex("Fsid")
                        .IsUnique()
                        .HasName("UQ__Proj_Pro__9C4B07177DDE556F");

                    b.HasIndex("ProjUnitId");

                    b.HasIndex("UnitPerspectiveId");

                    b.ToTable("Proj_ProjUnitPerspectiveJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitPicture", b =>
                {
                    b.Property<int>("ProjUnitPictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Fdata")
                        .HasColumnName("FData")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("Fsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FSId")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.HasKey("ProjUnitPictureId");

                    b.HasIndex("Fsid")
                        .IsUnique()
                        .HasName("UQ__Proj_Pro__9C4B07174432347E");

                    b.HasIndex("ProjUnitId");

                    b.ToTable("Proj_ProjUnitPicture");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitService", b =>
                {
                    b.Property<int>("ProjUnitServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Installed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MeterCount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("PerUnitOrMeter")
                        .HasColumnType("bit");

                    b.Property<byte?>("PeriodRepeat")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PeriodType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ServiceValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalServiceValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("UnitServId")
                        .HasColumnType("int");

                    b.HasKey("ProjUnitServiceId");

                    b.HasIndex("ProjUnitId");

                    b.HasIndex("ReservId");

                    b.HasIndex("UnitServId");

                    b.ToTable("Proj_ProjUnitService");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitSubUnits", b =>
                {
                    b.Property<int>("SubUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("CalcByMeter")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("MeterPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MetersCount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("SubUnittypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("SubUnitId");

                    b.HasIndex("ProjUnitId");

                    b.HasIndex("SubUnittypeId");

                    b.ToTable("Proj_ProjUnitSubUnits");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnits", b =>
                {
                    b.Property<int>("ProjUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BaseMentArea")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BasementMeterPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BuildingArea")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BuildingMeterPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("CalcAllMeters")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanRentUnits")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanSaleUnits")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("CommissionIsPercent")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CommissionValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ContractDocNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<long?>("ElectricityCounter")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("EstimatedUnitArea")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("GardenArea")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("GardenMeterPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("ParkArea")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ParkMeterPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ParkingId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<bool?>("ProjectStopped")
                        .HasColumnType("bit");

                    b.Property<int?>("RentCaseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RentDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("RentDocNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Rented")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReserveDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ReserveDocNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Reserved")
                        .HasColumnType("bit");

                    b.Property<decimal?>("RoofArea")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("RoofMeterPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("RoomCount")
                        .HasColumnType("int");

                    b.Property<bool?>("Sold")
                        .HasColumnType("bit");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("UnFinLevelId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitArea")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("UnitDegreeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UnitExpectedStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnitInsurstatId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitMeterPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UnitStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnitStatId")
                        .HasColumnType("int");

                    b.Property<int?>("UnittypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<long?>("WaterCounter")
                        .HasColumnType("bigint");

                    b.HasKey("ProjUnitId")
                        .HasName("PK_Proj_ProjUnits_1");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_ProjUnits");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjectItemEmpJoin", b =>
                {
                    b.Property<int>("ProjItemEmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjItemsJoinId")
                        .HasColumnType("int");

                    b.HasKey("ProjItemEmpId");

                    b.HasIndex("EmpId");

                    b.HasIndex("ProjItemsJoinId");

                    b.ToTable("Proj_ProjectItemEmpJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjectItems", b =>
                {
                    b.Property<int>("ProjectItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ProjectItemsId");

                    b.ToTable("Proj_ProjectItems");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjectItemsJoin", b =>
                {
                    b.Property<int>("ProjItemsJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ActualItemExpenseValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ActualItemPercentExpense")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpectItemPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpectItemValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FinishPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectItemsId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("ProjItemsJoinId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ProjectItemsId");

                    b.ToTable("Proj_ProjectItemsJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjectItemsVendors", b =>
                {
                    b.Property<int>("ProjectItemsVendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProjectItemsId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.Property<byte?>("VendorRate")
                        .HasColumnType("tinyint");

                    b.HasKey("ProjectItemsVendorId");

                    b.HasIndex("ProjectItemsId");

                    b.HasIndex("VendorId");

                    b.ToTable("Proj_ProjectItemsVendors");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjects", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ActualExpense")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ActualExpensePercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BaseMentArea")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BasementMeterPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("BuildDegreeId")
                        .HasColumnType("int");

                    b.Property<int?>("BuildFinishLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("BuildStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("BuildTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BuildingArea")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BuildingMeterPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("CalcAllMeters")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanRentUnits")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanSaleUnits")
                        .HasColumnType("bit");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<bool?>("CommissionIsPercent")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CommissionValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CompanyShare")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CompanySharePercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Description1")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Description2")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("EastBoundary")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<long?>("ElectricityCounter")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("ExpectedExpense")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FirstFloorUnitCount")
                        .HasColumnType("int");

                    b.Property<int?>("FloorUnitCount")
                        .HasColumnType("int");

                    b.Property<int?>("FloorsCount")
                        .HasColumnType("int");

                    b.Property<byte?>("FundSource")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("GardenArea")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("GardenMeterPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LandId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LandMeterPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("LandNo")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("Landarea")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LastFloorUnitCount")
                        .HasColumnType("int");

                    b.Property<string>("NorthBoundary")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<decimal?>("PaidCapital")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PaidCapitalPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ParentProjectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ParkArea")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ParkMeterPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PostalCodId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ProjectExpectedStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ProjectManagerId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ProjectName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ProjectStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("ProjectStopped")
                        .HasColumnType("bit");

                    b.Property<int?>("ProjectStoppedbyUserId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProjectValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RemainExpense")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("RemainExpensePercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("RentCaseId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RoofArea")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("RoofMeterPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("SouthBoundary")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("StreetNo")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("SubRegionClassId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<long?>("WaterCounter")
                        .HasColumnType("bigint");

                    b.Property<string>("WestBoundary")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("ProjectId");

                    b.ToTable("Proj_Projects");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjReInstallment", b =>
                {
                    b.Property<int>("ReInstallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DepositRectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DepositVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscountVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("InstallTempDetailId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsContract")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDiscount")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("NewEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("NewInstallVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("NewStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalNotPaidInstallVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ReInstallId");

                    b.ToTable("Proj_ReInstallment");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjRealItems", b =>
                {
                    b.Property<int>("ProjectRealItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttributeCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AttributeName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RealCost")
                        .HasColumnType("numeric(25, 2)");

                    b.Property<decimal?>("SuggestPrice")
                        .HasColumnType("numeric(25, 2)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("ProjectRealItemId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_RealItems");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjReservInstallments", b =>
                {
                    b.Property<int>("ReservInstallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DelayDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("DelayFine")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("DeletReason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("InstallTempDetailId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InstallValu")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PaidBankDeposit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PaidCash")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PaidCheques")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("PayTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjUnitServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("ResourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Serial")
                        .HasColumnType("int");

                    b.Property<int?>("UnitServId")
                        .HasColumnType("int");

                    b.HasKey("ReservInstallId");

                    b.HasIndex("ReservId");

                    b.ToTable("Proj_ReservInstallments");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjReserveUnitDocuments", b =>
                {
                    b.Property<int>("ReservDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AttachSerial")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<byte[]>("Fdata")
                        .HasColumnName("FData")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("Fsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FSId")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("IssuePlace")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("OwnShipBondId")
                        .HasColumnType("int");

                    b.Property<string>("PaperNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("RenewalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<string>("SearchTags")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("ShelvId")
                        .HasColumnType("int");

                    b.HasKey("ReservDocId");

                    b.HasIndex("Fsid")
                        .IsUnique()
                        .HasName("UQ__Proj_Res__9C4B0717908FFF11");

                    b.HasIndex("ReservId");

                    b.ToTable("Proj_ReserveUnitDocuments");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjReserveUnitOwners", b =>
                {
                    b.Property<int>("ReservOwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountDescription")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ConcessionDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ConcessionDocNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("HelpAccId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsConcession")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMainOwner")
                        .HasColumnType("bit");

                    b.Property<int?>("OriginalResourceAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("OriginalResourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("OriginalResourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("ResourceType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("SharePercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ShareValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("UnitConcessionId")
                        .HasColumnType("int");

                    b.HasKey("ReservOwnerId");

                    b.HasIndex("ReservId");

                    b.ToTable("Proj_ReserveUnitOwners");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjReserveUnitSellers", b =>
                {
                    b.Property<int>("ReservSellerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountDescription")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("HelpAccId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsMainOwner")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("ResourceType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("SharePercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ShareValue")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("ReservSellerId");

                    b.HasIndex("ReservId");

                    b.ToTable("Proj_ReserveUnitSellers");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjUnitConcession", b =>
                {
                    b.Property<int>("UnitConcessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ActualSalesPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commission")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ConcessionFee")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("InstallTempDetailId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaidInstallments")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PaidBeforeConcession")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UnitConcessionId");

                    b.ToTable("Proj_UnitConcession");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjUnitHistoryLog", b =>
                {
                    b.Property<int>("ProjUnitHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LogActionDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("TableCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long?>("TableEntityId")
                        .HasColumnType("bigint");

                    b.Property<string>("TableEntityIdName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("ProjUnitHistoryId");

                    b.ToTable("Proj_UnitHistoryLog");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjUnitReplacement", b =>
                {
                    b.Property<int>("UnitReplacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ActualSalesPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DepositRectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DepositVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("InstallTempDetailId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("NewInstallVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("OldActualSalesPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("OldProjUnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalNotPaidInstallVal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UnitReplacId");

                    b.ToTable("Proj_UnitReplacement");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjUnitReservation", b =>
                {
                    b.Property<int>("ReservId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ActualSalesPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("CommissionPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CommissionValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ContractBookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ContractTrNo")
                        .HasColumnType("int");

                    b.Property<int?>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CustomerBalace")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FeesPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FeesValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<decimal?>("FinishMeterPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FinishValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("InstallId")
                        .HasColumnType("int");

                    b.Property<int?>("InstallTempId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsContract")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCustBalancInstall")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LeavePercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LeaveValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaidInstallments")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("PaidInCash")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PayStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<byte?>("RoundType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((0))")
                        .HasComment("0 without,1=10,2=100,3=1000,4=10000");

                    b.Property<int?>("SalesEmpId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalInstallments")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalServices")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalUnitArea")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("UnitArea")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("UnitMeterPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ReservId");

                    b.ToTable("Proj_UnitReservation");
                });

            modelBuilder.Entity("HR.Tables.Tables.QualityCategories", b =>
                {
                    b.Property<int>("QualityCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("DamagDegree")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("QualityCatId")
                        .HasName("PK_Prod_QualityCategory");

                    b.ToTable("Quality_Categories");
                });

            modelBuilder.Entity("HR.Tables.Tables.QualityItemDeliverDetails", b =>
                {
                    b.Property<int>("ItemDeliverDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal?>("DoublCheckQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DoublCheckQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DoubleCleanQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExecutedQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExecutedQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemDeliverId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemRecQualityDetailId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("MissedMachinQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MissedMachinQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MissedQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MissedQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NormalCleanQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NormalQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NormalQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceDoubleClean")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceNormal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ProdItemRecDetailId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("QualityCatId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("RejectedQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("RejectedQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("ReturnQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ReturnQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalDoubleClean")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalNormal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("ItemDeliverDetailId");

                    b.HasIndex("ItemDeliverId");

                    b.ToTable("Quality_ItemDeliverDetails");
                });

            modelBuilder.Entity("HR.Tables.Tables.QualityItemDelivery", b =>
                {
                    b.Property<int>("ItemDeliverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<bool?>("Approved")
                        .HasColumnType("bit");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DocBarCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPos")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ItemRecQualityId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("NotificationSent")
                        .HasColumnType("bit");

                    b.Property<int?>("PackageCount")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreEmpId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalPieces")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("ItemDeliverId");

                    b.ToTable("Quality_ItemDelivery");
                });

            modelBuilder.Entity("HR.Tables.Tables.QualityItemDeliveryPackages", b =>
                {
                    b.Property<int>("ItemDeliceryPackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AlterSerial")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ItemDeliverId")
                        .HasColumnType("int");

                    b.Property<int?>("PackageSerial")
                        .HasColumnType("int");

                    b.HasKey("ItemDeliceryPackId");

                    b.HasIndex("ItemDeliverId");

                    b.ToTable("Quality_ItemDeliveryPackages");
                });

            modelBuilder.Entity("HR.Tables.Tables.QualityItemRecCheck", b =>
                {
                    b.Property<int>("ItemRecQualityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<bool?>("Approved")
                        .HasColumnType("bit");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DocBarCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPos")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("NotificationSent")
                        .HasColumnType("bit");

                    b.Property<int?>("PackageCount")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ProdItemRecId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreEmpId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalPieces")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ItemRecQualityId")
                        .HasName("PK_prod_ItemRecQualityCheck");

                    b.ToTable("Quality_ItemRecCheck");
                });

            modelBuilder.Entity("HR.Tables.Tables.QualityItemRecCheckDetail", b =>
                {
                    b.Property<int>("ItemRecQualityDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal?>("DoublCheckQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DoublCheckQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExecutedQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExecutedQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemRecQualityId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("MissedQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MissedQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NormalQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NormalQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceDoubleClean")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceNormal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("QualityCatId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("RejectedQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("RejectedQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("TotalDoubleClean")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalNormal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("ItemRecQualityDetailId");

                    b.HasIndex("ItemRecQualityId");

                    b.ToTable("Quality_ItemRecCheckDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.QualityItemRecPackages", b =>
                {
                    b.Property<int>("ItemRecPackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AlterSerial")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ItemRecQualityId")
                        .HasColumnType("int");

                    b.Property<int?>("PackageSerial")
                        .HasColumnType("int");

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("ItemRecPackId");

                    b.HasIndex("ItemRecQualityId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Quality_ItemRecPackages");
                });

            modelBuilder.Entity("HR.Tables.Tables.QualityItemReceivTypes", b =>
                {
                    b.Property<int>("ItemRecTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ItemRecTypeId")
                        .HasName("PK_Prod_ItemReceivTypes");

                    b.ToTable("Quality_ItemReceivTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.QualityItemRecieve", b =>
                {
                    b.Property<int>("ProdItemRecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<bool?>("Approved")
                        .HasColumnType("bit");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPos")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ItemRecTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<bool?>("NotificationSent")
                        .HasColumnType("bit");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalPieces")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ProdItemRecId")
                        .HasName("PK_Prod_ItemRecieve");

                    b.ToTable("Quality_ItemRecieve");
                });

            modelBuilder.Entity("HR.Tables.Tables.QualityItemRecieveDetails", b =>
                {
                    b.Property<int>("ProdItemRecDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal?>("ExecutedQty")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExecutedQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("ItemCardDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCardDescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("MissedQtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("MissedQuantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ProdItemRecId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("ProdItemRecDetailId")
                        .HasName("PK_Prod_ItemRecieveDetails");

                    b.HasIndex("ProdItemRecId");

                    b.ToTable("Quality_ItemRecieveDetails");
                });

            modelBuilder.Entity("HR.Tables.Tables.RepairJobOrder", b =>
                {
                    b.Property<int>("RepairId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AddAccountId")
                        .HasColumnType("int");

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<int?>("ContainerTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EquipId")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit")
                        .HasComment("True Closed ;  False  Not Closed");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Supervisor")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel3")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel4")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel5")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeToLeav")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int")
                        .HasComment("ItemCardId");

                    b.HasKey("RepairId");

                    b.ToTable("Repair_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.RepairJobOrderComments", b =>
                {
                    b.Property<int>("RepairCommentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("EmpIdComBy")
                        .HasColumnType("int");

                    b.Property<int?>("RepairId")
                        .HasColumnType("int");

                    b.HasKey("RepairCommentsId");

                    b.HasIndex("RepairId");

                    b.ToTable("Repair_JobOrderComments");
                });

            modelBuilder.Entity("HR.Tables.Tables.RepairJobOrderEmps", b =>
                {
                    b.Property<int>("RepairEmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("OtherCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("RepairId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ServiceValue")
                        .HasColumnType("decimal(25, 3)");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("RepairEmpId");

                    b.HasIndex("RepairId");

                    b.ToTable("Repair_JobOrderEmps");
                });

            modelBuilder.Entity("HR.Tables.Tables.RepairJobOrderItems", b =>
                {
                    b.Property<int>("RepairItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRateEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("RepairId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RequestedMeter")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitIdEstimat")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("UnitRateEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("RepairItemsId");

                    b.HasIndex("RepairId");

                    b.ToTable("Repair_JobOrderItems");
                });

            modelBuilder.Entity("HR.Tables.Tables.RepairJobOrderScrapItems", b =>
                {
                    b.Property<int>("RepairScrapItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Fifocost")
                        .HasColumnName("FIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnName("FIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnName("LIFOCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnName("LIFOCostUnit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PriceEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyBeforRateEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("RepairId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitIdEstimat")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("UnitRateEstimat")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("RepairScrapItemId");

                    b.HasIndex("RepairId");

                    b.ToTable("Repair_JobOrderScrapItems");
                });

            modelBuilder.Entity("HR.Tables.Tables.RepairJobOrederExpenses", b =>
                {
                    b.Property<int>("RepairExpensesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<bool?>("BitOnClient")
                        .HasColumnName("bitOnClient")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExpensValue")
                        .HasColumnType("decimal(25, 3)");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("RepairId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("RepairExpensesId");

                    b.HasIndex("RepairId");

                    b.ToTable("Repair_JobOrederExpenses");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrAccomodation", b =>
                {
                    b.Property<int>("AccomodationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("AccomodationType")
                        .HasColumnType("tinyint")
                        .HasComment("1 RO,2 BB,3 HB,4 FB");

                    b.Property<int?>("CityId")
                        .HasColumnName("CityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.HasKey("AccomodationId");

                    b.HasIndex("HotelId");

                    b.HasIndex("TripId");

                    b.ToTable("Sr_Accomodation");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrComplaints", b =>
                {
                    b.Property<int>("ComId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ComID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Add1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ComCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ComDesc")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ComName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ComName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ComSolution")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ComId");

                    b.ToTable("Sr_Complaints");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrContainerTypes", b =>
                {
                    b.Property<int>("ContainerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContainerCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Height")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Length")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("UseDesc")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("VehicleShapeId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleTypId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("ContainerTypeId");

                    b.ToTable("Sr_ContainerTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrDrivers", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DriverCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DriverLicense")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("LicenseDescription")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LicenseIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("LicenseLegalPlace")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("LicenseRenewalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PassPort")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("TrafficLineId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("DriverId");

                    b.ToTable("Sr_Drivers");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrEmpServicTypes", b =>
                {
                    b.Property<int>("SrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SR_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("SrTypId")
                        .HasColumnName("SrTypID")
                        .HasColumnType("int");

                    b.HasKey("SrId");

                    b.HasIndex("EmpId");

                    b.HasIndex("SrTypId");

                    b.ToTable("Sr_EmpServicTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrExtension", b =>
                {
                    b.Property<int>("ExtensionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityId")
                        .HasColumnName("CityID")
                        .HasColumnType("int");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<byte?>("Number")
                        .HasColumnType("tinyint")
                        .HasComment("single, double, Trible");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.HasKey("ExtensionId");

                    b.HasIndex("CityId");

                    b.HasIndex("HotelId");

                    b.HasIndex("TripId");

                    b.ToTable("Sr_Extension");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrFlight", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Arrival")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("CityIdfrom")
                        .HasColumnName("CityIDFrom")
                        .HasColumnType("int");

                    b.Property<int?>("CityIdto")
                        .HasColumnName("CityIDTo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Departure")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("FlightCompany")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PlaceFrom")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PlaceTo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("TrafficLineId")
                        .HasColumnType("int");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.HasKey("FlightId");

                    b.HasIndex("TripId");

                    b.ToTable("Sr_Flight");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrGarage", b =>
                {
                    b.Property<int>("GarageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("GarageCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("GarageId");

                    b.ToTable("Sr_Garage");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrHarbors", b =>
                {
                    b.Property<int>("HarborId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityId")
                        .HasColumnName("CityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("HarborCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("HarborId");

                    b.ToTable("Sr_Harbors");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrHotels", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("Bbcost")
                        .HasColumnName("BBCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CityId")
                        .HasColumnName("CityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("DoubleRoomCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("DoubleRoomCount")
                        .HasColumnType("int");

                    b.Property<int?>("ElevatorNum")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Fbcost")
                        .HasColumnName("FBCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Hbcost")
                        .HasColumnName("HBCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("HotelCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("QuadRoomCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("QuadRoomCount")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<decimal?>("RoomSingleCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("RoomSingleCount")
                        .HasColumnType("int");

                    b.Property<bool?>("RoomsWithWc")
                        .HasColumnName("RoomsWithWC")
                        .HasColumnType("bit");

                    b.Property<decimal?>("SpecialRoomCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("SpecialRoomCount")
                        .HasColumnType("int");

                    b.Property<byte?>("Stars")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("SuitRoomCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("SuitRoomCount")
                        .HasColumnType("int");

                    b.Property<bool?>("SupportBb")
                        .HasColumnName("SupportBB")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportFb")
                        .HasColumnName("SupportFB")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportHb")
                        .HasColumnName("SupportHB")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportRo")
                        .HasColumnName("SupportRO")
                        .HasColumnType("bit");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel3")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel4")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel5")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("TribleRoomCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TribleRoomCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("HotelId")
                        .HasName("PK_Sr_Hoterls");

                    b.HasIndex("CityId");

                    b.ToTable("Sr_Hotels");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrJobAdditionalCost", b =>
                {
                    b.Property<int>("AddCostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AdCostValue")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("AddCostDesc")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("JorderId")
                        .HasColumnType("int");

                    b.HasKey("AddCostId");

                    b.HasIndex("JorderId");

                    b.ToTable("Sr_JobAdditionalCost");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrJobComments", b =>
                {
                    b.Property<int>("JobComentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("EmpIdComBy")
                        .HasColumnType("int");

                    b.Property<int?>("JorderId")
                        .HasColumnType("int");

                    b.HasKey("JobComentId");

                    b.HasIndex("JorderId");

                    b.ToTable("Sr_JobComments");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrJobExtrnalExpens", b =>
                {
                    b.Property<int>("JobExpensId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmpCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Expdescription")
                        .HasColumnName("EXPDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal?>("Expvalue")
                        .HasColumnName("EXPValue")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("JorderId")
                        .HasColumnType("int");

                    b.Property<int?>("ResponsibleEmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalHours")
                        .HasColumnType("numeric(18, 2)");

                    b.HasKey("JobExpensId");

                    b.HasIndex("JorderId");

                    b.ToTable("Sr_JobExtrnalExpens");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrJobFiles", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Binary")
                        .HasColumnName("binary")
                        .HasColumnType("binary(4000)")
                        .IsFixedLength(true)
                        .HasMaxLength(4000);

                    b.Property<string>("FileDesc")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<int?>("JorderId")
                        .HasColumnType("int");

                    b.HasKey("FileId");

                    b.HasIndex("JorderId");

                    b.ToTable("Sr_JobFiles");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrJobOrder", b =>
                {
                    b.Property<int>("JorderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AddAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustId")
                        .HasColumnType("int");

                    b.Property<bool?>("CustSatisfy")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("ExitDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Expense")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("FreeService")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("NetValue")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("OtherCosts")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("ReciptionId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal?>("SparePrts")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("SrTypId")
                        .HasColumnName("SrTypID")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Wages")
                        .HasColumnType("numeric(18, 2)");

                    b.HasKey("JorderId");

                    b.HasIndex("ReciptionId");

                    b.HasIndex("SrTypId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Sr_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrJobSparts", b =>
                {
                    b.Property<int>("JobSpareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemDescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("JorderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Spdescription")
                        .HasColumnName("SPDescription")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<decimal?>("Spvalue")
                        .HasColumnName("SPValue")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.HasKey("JobSpareId");

                    b.HasIndex("JorderId");

                    b.ToTable("Sr_JobSparts");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrJobSwages", b =>
                {
                    b.Property<int>("JobStechId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("JobSTechId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmpCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmpName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("HourlyCostRate")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("JorderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalHours")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Wdescription")
                        .HasColumnName("WDescription")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<decimal?>("Wvalue")
                        .HasColumnName("WValue")
                        .HasColumnType("numeric(18, 2)");

                    b.HasKey("JobStechId");

                    b.HasIndex("JorderId");

                    b.ToTable("Sr_JobSWages");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrPrograms", b =>
                {
                    b.Property<int>("ProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Days")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Mtscruze")
                        .HasColumnName("MTSCruze")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("Number")
                        .HasColumnType("tinyint")
                        .HasComment("single, double, Trible");

                    b.Property<string>("ProgramCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ProgramId");

                    b.ToTable("Sr_Programs");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrReceptionImages", b =>
                {
                    b.Property<int>("RecImgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<string>("ImgDesc")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("ReciptionId")
                        .HasColumnType("int");

                    b.HasKey("RecImgId");

                    b.HasIndex("ReciptionId");

                    b.ToTable("Sr_ReceptionImages");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrReciption", b =>
                {
                    b.Property<int>("ReciptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CustId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MileAge")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("RecevedBy")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Vid")
                        .HasColumnName("VID")
                        .HasColumnType("int");

                    b.HasKey("ReciptionId");

                    b.ToTable("Sr_Reciption");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrReciptionDetail", b =>
                {
                    b.Property<int>("RecipDetlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ComId")
                        .HasColumnName("ComID")
                        .HasColumnType("int");

                    b.Property<string>("CustRequest")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("ReciptionId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<byte?>("Serial")
                        .HasColumnType("tinyint");

                    b.HasKey("RecipDetlId");

                    b.HasIndex("ComId");

                    b.HasIndex("ReciptionId");

                    b.ToTable("Sr_ReciptionDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrReqOfQoutation", b =>
                {
                    b.Property<int>("RoqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField10")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField8")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField9")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commodity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Equipment")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PortOfDischarge")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PortOfLoading")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Recommendation")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Shipper")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TargetRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("TruckingFrom")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TruckingTo")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ValidityDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("RoqId");

                    b.ToTable("Sr_ReqOfQoutation");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrServiceTypes", b =>
                {
                    b.Property<int>("SrTypId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SrTypID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("SrCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SrDesc")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("SrName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SrName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("SrTypId");

                    b.ToTable("Sr_ServiceTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrShippingDeclaration", b =>
                {
                    b.Property<int>("ShipDeclarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<string>("BillOfLading")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<string>("Consignee")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ContainersDry")
                        .HasColumnName("ContainersDRY")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("FreightPayableAt")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("GrossWeightTons")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("MarksAndNumbers")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("NetWeightTons")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Notify")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PortOfDischarge")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PortOfLoading")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int?>("RoqId")
                        .HasColumnType("int");

                    b.Property<string>("Shipper")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ValidityDays")
                        .HasColumnType("int");

                    b.Property<string>("VesselName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("ShipDeclarId");

                    b.ToTable("Sr_ShippingDeclaration");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrTaskEmp", b =>
                {
                    b.Property<int>("TskTech")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmpRole")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("TskTech");

                    b.HasIndex("EmpId");

                    b.HasIndex("TaskId");

                    b.ToTable("Sr_TaskEmp");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrTaskItem", b =>
                {
                    b.Property<int>("TskItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HowUse")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("TskItemId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("TaskId");

                    b.ToTable("Sr_TaskItem");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrTasks", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ComId")
                        .HasColumnName("ComID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("TaskCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TaskDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("TaskName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TaskName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("TaskId");

                    b.HasIndex("ComId");

                    b.ToTable("Sr_Tasks");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrTrafficLinePriceList", b =>
                {
                    b.Property<int>("TrafficLineVeiclId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContainerTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price1")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price10")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price5")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price6")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price7")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price8")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Price9")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("TrafficLineId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("TrafficLineVeiclId");

                    b.HasIndex("ContainerTypeId");

                    b.HasIndex("TrafficLineId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Sr_TrafficLinePriceList");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrTrafficLines", b =>
                {
                    b.Property<int>("TrafficLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityIdfrom")
                        .HasColumnName("CityIDFrom")
                        .HasColumnType("int");

                    b.Property<int?>("CityIdto")
                        .HasColumnName("CityIDTo")
                        .HasColumnType("int");

                    b.Property<bool?>("CostbyContainer")
                        .HasColumnType("bit");

                    b.Property<bool?>("CostbyVehicl")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("EstimatCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FromHarborId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Km")
                        .HasColumnName("KM")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("PricebyContainer")
                        .HasColumnType("bit");

                    b.Property<bool?>("PricebyVehicl")
                        .HasColumnType("bit");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("ToHarborId")
                        .HasColumnType("int");

                    b.Property<string>("TrafficCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TrafficFrom")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TrafficTo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("TrafficLineId");

                    b.ToTable("Sr_TrafficLines");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrTransportation", b =>
                {
                    b.Property<int>("TransPortId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Arrival")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("CityIdfrom")
                        .HasColumnName("CityIDFrom")
                        .HasColumnType("int");

                    b.Property<int?>("CityIdto")
                        .HasColumnName("CityIDTo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Departure")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PlaceFrom")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PlaceTo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("TrafficLineId")
                        .HasColumnType("int");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("TransPortId");

                    b.HasIndex("TripId");

                    b.ToTable("Sr_Transportation");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrTripAccomDetail", b =>
                {
                    b.Property<int>("TripAccomDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccomodationId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PassPortNo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("PersonCount")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RoomNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("TripAccomDetailId");

                    b.HasIndex("AccomodationId");

                    b.ToTable("Sr_TripAccomDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrTripProgramJoin", b =>
                {
                    b.Property<int>("TripProgramJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Days")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Mtscruze")
                        .HasColumnName("MTSCruze")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("Number")
                        .HasColumnType("tinyint")
                        .HasComment("single, double, Trible");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.HasKey("TripProgramJoinId");

                    b.HasIndex("ProgramId");

                    b.HasIndex("TripId");

                    b.ToTable("Sr_TripProgramJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrTrips", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Agent")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ApprovedByEmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("Approver")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ArrivalTime")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ArrivedBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnName("CityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeparturDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DeparturTime")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DepartureBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("Guid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Names")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OperatorName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Others")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<byte?>("PersonsCount")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Program")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel3")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel4")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel5")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<int?>("TourGuideEmpId")
                        .HasColumnType("int");

                    b.Property<string>("TourGuideName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("TourLeaderEmpId")
                        .HasColumnType("int");

                    b.Property<string>("TourLeaderName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Visa")
                        .HasColumnType("bit");

                    b.HasKey("TripId")
                        .HasName("PK_St_Trips");

                    b.ToTable("Sr_Trips");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicleItemCard", b =>
                {
                    b.Property<int>("VehclItemPart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardIdIsVehicl")
                        .HasColumnType("int");

                    b.HasKey("VehclItemPart");

                    b.HasIndex("ItemCardId");

                    b.ToTable("Sr_VehicleItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicleJobOrder", b =>
                {
                    b.Property<int>("VjorderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VJOrderId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AddAccountId")
                        .HasColumnType("int");

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<string>("ContainerNo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ContainerTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ContainersCount")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId21")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<long?>("EndCounter")
                        .HasColumnType("bigint");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("GarageId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit")
                        .HasComment("True Closed ;  False  Not Closed");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("ItemNewName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool?>("ShipExecuted")
                        .HasColumnType("bit");

                    b.Property<long?>("StartCounter")
                        .HasColumnType("bigint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Supervisor")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel3")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel4")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel5")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeToLeav")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int")
                        .HasComment("ItemCardId");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.Property<int?>("VorderTypeId")
                        .HasColumnName("VOrderTypeId")
                        .HasColumnType("int");

                    b.HasKey("VjorderId");

                    b.HasIndex("VehicleId");

                    b.HasIndex("VorderTypeId");

                    b.ToTable("Sr_VehicleJobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicleJobOrderDetail", b =>
                {
                    b.Property<int>("VjorderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VJOrderDetailId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ContainerTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ContainerWeight")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("ContainersCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DamadeDesc")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDamade")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Km")
                        .HasColumnName("KM")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("PersonsCount")
                        .HasColumnType("int");

                    b.Property<string>("PlaceToEnd")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PlaceToStart")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Representative")
                        .HasColumnName("representative")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("TimeEnd")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TimeStart")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrafficLineId")
                        .HasColumnType("int");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.Property<int?>("VjorderId")
                        .HasColumnName("VJOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("WaitTime")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("VjorderDetailId");

                    b.HasIndex("DriverId");

                    b.HasIndex("VjorderId");

                    b.ToTable("Sr_VehicleJobOrderDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicleRenalContract", b =>
                {
                    b.Property<int>("VrentContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VRentContractId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<long?>("AllowanceCounter")
                        .HasColumnType("bigint");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<long?>("ConsumedCounter")
                        .HasColumnType("bigint");

                    b.Property<int?>("ContractDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<long?>("DailyCounter")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DayPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("DeliveryCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Deposit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("DriverCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("DriverId1")
                        .HasColumnType("int");

                    b.Property<int?>("DriverId2")
                        .HasColumnType("int");

                    b.Property<int?>("DriverId3")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("EndCounter")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ExpectedStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenValueBeforCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("ExpenValueWithCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<long?>("ExtraCounter")
                        .HasColumnType("bigint");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<decimal?>("FuelCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("FuelIn")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("FuelOut")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<DateTime?>("GetOutDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("HotelRoom")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("InsuranceValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("InsuranceValue2")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("MaintenanceCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal?>("NetDue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NetPriceBeforCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<byte?>("PaymentMethod")
                        .HasColumnType("tinyint");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Profit")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("RealStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Repaid")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<long?>("StartCounter")
                        .HasColumnType("bigint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel3")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel4")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tel5")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalCostBeforeCurr")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalPaidReciept")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalPayment")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalPurchInv")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalSalesInv")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Vat")
                        .HasColumnName("VAT")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int")
                        .HasComment("ItemCardId");

                    b.Property<decimal?>("VisaAmount")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<bool?>("VisaApproved")
                        .HasColumnType("bit");

                    b.Property<string>("VisaCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("VisaExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("VisaNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("VrentContractId");

                    b.ToTable("Sr_VehicleRenalContract");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicleRentPayJoin", b =>
                {
                    b.Property<int>("RentPayJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VrentContractId")
                        .HasColumnName("VRentContractId")
                        .HasColumnType("int");

                    b.HasKey("RentPayJoinId");

                    b.HasIndex("PayId");

                    b.HasIndex("VrentContractId");

                    b.ToTable("Sr_VehicleRentPayJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicleRentPurchJoin", b =>
                {
                    b.Property<int>("RentPurchJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VrentContractId")
                        .HasColumnName("VRentContractId")
                        .HasColumnType("int");

                    b.HasKey("RentPurchJoinId");

                    b.HasIndex("PurInvId");

                    b.HasIndex("VrentContractId");

                    b.ToTable("Sr_VehicleRentPurchJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicleRentRecJoin", b =>
                {
                    b.Property<int>("RentRecJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VrentContractId")
                        .HasColumnName("VRentContractId")
                        .HasColumnType("int");

                    b.HasKey("RentRecJoinId");

                    b.HasIndex("RectId");

                    b.HasIndex("VrentContractId");

                    b.ToTable("Sr_VehicleRentRecJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicleRentSalesInvJoin", b =>
                {
                    b.Property<int>("RentSaleJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VrentContractId")
                        .HasColumnName("VRentContractId")
                        .HasColumnType("int");

                    b.HasKey("RentSaleJoinId");

                    b.HasIndex("InvId");

                    b.HasIndex("VrentContractId");

                    b.ToTable("Sr_VehicleRentSalesInvJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicleShapes", b =>
                {
                    b.Property<int>("VehicleShapeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ShapeCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("VehicleShapeId");

                    b.ToTable("Sr_VehicleShapes");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicleTypes", b =>
                {
                    b.Property<int>("VehicleTypId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("TypeCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("VehicleTypId");

                    b.ToTable("Sr_VehicleTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicles", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("ItemCardId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BodyNo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<long?>("CounterNo")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DriverId1")
                        .HasColumnType("int");

                    b.Property<int?>("DriverId2")
                        .HasColumnType("int");

                    b.Property<int?>("GarageId")
                        .HasColumnType("int");

                    b.Property<bool?>("InWarranty")
                        .HasColumnType("bit");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<int?>("InvItemCardId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCompanyCar")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("MotorNo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OwnerAddress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("RegNo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<long?>("StartCounterNo")
                        .HasColumnType("bigint");

                    b.Property<int?>("TrafficLineId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("VehicleCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("VehicleShapeId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleTypId")
                        .HasColumnType("int");

                    b.Property<int?>("Wid")
                        .HasColumnName("WId")
                        .HasColumnType("int");

                    b.Property<int?>("YearModel")
                        .HasColumnType("int");

                    b.HasKey("VehicleId")
                        .HasName("PK_Sr_Vehicles_1");

                    b.HasIndex("GarageId");

                    b.HasIndex("VehicleShapeId");

                    b.HasIndex("VehicleTypId");

                    b.HasIndex("Wid");

                    b.ToTable("Sr_Vehicles");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVheicleJobOrderType", b =>
                {
                    b.Property<int>("VorderTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VOrderTypeId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AddAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("GetAccountIdFromAn")
                        .HasColumnName("GetAccountIdFromAN")
                        .HasColumnType("bit");

                    b.Property<bool?>("GetCostCenterIdFromAn")
                        .HasColumnName("GetCostCenterIdFromAN")
                        .HasColumnType("bit");

                    b.Property<bool?>("GetCustomerFromAn")
                        .HasColumnType("bit");

                    b.Property<bool?>("GetItemFromAn")
                        .HasColumnType("bit");

                    b.Property<bool?>("GetVendorFromAn")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAncodeMandatory")
                        .HasColumnName("IsANCOdeMandatory")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCustomerMandatory")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDriverMandatory")
                        .HasColumnType("bit");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("VorderTypeCode")
                        .HasColumnName("VOrderTypeCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("VorderTypeId");

                    b.ToTable("Sr_VheicleJobOrderType");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrWarranty", b =>
                {
                    b.Property<int>("Wid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Exemption")
                        .HasColumnType("bit");

                    b.Property<byte?>("ExemptionPercnt")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Wcode")
                        .HasColumnName("WCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Wconditions")
                        .HasColumnName("WConditions")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("Wdistance")
                        .HasColumnName("WDistance")
                        .HasColumnType("int");

                    b.Property<byte?>("Wmethod")
                        .HasColumnName("WMethod")
                        .HasColumnType("tinyint")
                        .HasComment("0 periodic,1 distance, 2 both");

                    b.Property<string>("Wname1")
                        .HasColumnName("WName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Wname2")
                        .HasColumnName("WName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("WperiodMonths")
                        .HasColumnName("WPeriodMonths")
                        .HasColumnType("int");

                    b.Property<bool?>("Wuse")
                        .HasColumnName("WUse")
                        .HasColumnType("bit");

                    b.HasKey("Wid");

                    b.ToTable("Sr_Warranty");
                });

            modelBuilder.Entity("HR.Tables.Tables.SysAnalyticalCodeUpdateTypes", b =>
                {
                    b.Property<int>("AnUpdateTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AnUpdateTypeId");

                    b.ToTable("sys_AnalyticalCodeUpdateTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.SysAnalyticalCodeUpdates", b =>
                {
                    b.Property<int>("AnupdateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ANUpdateId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField10")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField8")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddField9")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<int?>("AnUpdateTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commodity")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Equipment")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PortOfDischarge")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PortOfLoading")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Recommendation")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Shipper")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TargetRate")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("TruckingFrom")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TruckingTo")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ValidityDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("numeric(38, 10)");

                    b.HasKey("AnupdateId");

                    b.HasIndex("Aid");

                    b.ToTable("sys_AnalyticalCodeUpdates");
                });

            modelBuilder.Entity("HR.Tables.Tables.SysAnalyticalCodes", b =>
                {
                    b.Property<int>("Aid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccomulatAid")
                        .HasColumnName("AccomulatAId")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AddField1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField10")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField11")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField12")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField13")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField14")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField15")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField16")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField17")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField18")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField19")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField20")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField21")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField22")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField23")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField24")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField25")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField7")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField8")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddField9")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("BspartnerId")
                        .HasColumnName("BSPartnerId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CodeLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("CodeLevelType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DescA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentAid")
                        .HasColumnName("ParentAId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("Stopped")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Aid");

                    b.ToTable("Sys_AnalyticalCodes");
                });

            modelBuilder.Entity("HR.Tables.Tables.SysBasket", b =>
                {
                    b.Property<int>("BasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<string>("DocName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DocTrNo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("FromUser")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TableCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("TableEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("WachDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("BasketId");

                    b.ToTable("Sys_Basket");
                });

            modelBuilder.Entity("HR.Tables.Tables.SysBooks", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AutoSerial")
                        .HasColumnType("bit");

                    b.Property<string>("BookNameAr")
                        .HasColumnName("BookNameAR")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BookNameEn")
                        .HasColumnName("BookNameEN")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EndNum")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<byte?>("PostType")
                        .HasColumnType("tinyint");

                    b.Property<string>("PrefixCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("StartNum")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<bool?>("SystemIssuedOnly")
                        .HasColumnType("bit");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.ToTable("Sys_Books");
                });

            modelBuilder.Entity("HR.Tables.Tables.SysCity", b =>
                {
                    b.Property<int>("SysCityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SysCityID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnName("cityName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Latitude")
                        .HasColumnName("latitude")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Longitude")
                        .HasColumnName("longitude")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("SysCityId");

                    b.ToTable("Sys_City");
                });

            modelBuilder.Entity("HR.Tables.Tables.SysCounter", b =>
                {
                    b.Property<int>("CounterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("Counter")
                        .HasColumnType("int");

                    b.Property<string>("TrIdName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CounterId");

                    b.ToTable("Sys_Counter");
                });

            modelBuilder.Entity("HR.Tables.Tables.SysCountries", b =>
                {
                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Latitude")
                        .HasColumnName("latitude")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Longitude")
                        .HasColumnName("longitude")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("CountryCode");

                    b.ToTable("Sys_Countries");
                });

            modelBuilder.Entity("HR.Tables.Tables.SysFinancialIntervals", b =>
                {
                    b.Property<int>("FinancialIntervalsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EndToHijri")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("EndingDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("FinancialIntervalCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInUse")
                        .HasColumnType("bit");

                    b.Property<string>("MonthNameA")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MonthNameE")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("StartingFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("StartingFromHijri")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("StopReason")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("StoppedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("FinancialIntervalsId");

                    b.HasIndex("FinancialYearId");

                    b.ToTable("Sys_FinancialIntervals");
                });

            modelBuilder.Entity("HR.Tables.Tables.SysFinancialYears", b =>
                {
                    b.Property<int>("FinancialYearsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ClosingDateHijri")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("EndTo")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("EndToHijri")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("FinancialYearNameA")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FinancialYearNameE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("FinancialYearsCode")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<int?>("NoOfIntervals")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartingFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("StartingFromHijri")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("StopReason")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("StoppedByUserId")
                        .HasColumnType("int");

                    b.Property<byte?>("SubPeriodsType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("YearState")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool?>("YearType")
                        .HasColumnType("bit");

                    b.HasKey("FinancialYearsId");

                    b.ToTable("Sys_FinancialYears");
                });

            modelBuilder.Entity("HR.Tables.Tables.SysFinancialYearsClosing", b =>
                {
                    b.Property<int>("ClosingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClosingAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ClosingCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ClosingDateHejri")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CurrentYear")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("FinancialYearsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTransfer")
                        .HasColumnType("bit");

                    b.Property<string>("RemarksA")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("RemarksE")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ClosingId");

                    b.ToTable("Sys_FinancialYearsClosing");
                });

            modelBuilder.Entity("HR.Tables.Tables.SysFlexLists", b =>
                {
                    b.Property<int>("FlexListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AllLanguages")
                        .HasColumnType("bit");

                    b.Property<string>("Culture")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("FieldCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FlexCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FlexName1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FlexName2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("NamingId")
                        .HasColumnType("int");

                    b.Property<string>("TableCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Value1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Value2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Value3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Value4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Value5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("FlexListId");

                    b.ToTable("sys_FlexLists");
                });

            modelBuilder.Entity("HR.Tables.Tables.SysNaming", b =>
                {
                    b.Property<int>("NamingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CtrlLocationX")
                        .HasColumnType("int");

                    b.Property<int?>("CtrlLocationY")
                        .HasColumnType("int");

                    b.Property<string>("CtrlName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CtrlNewText")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("CtrlOriginalText")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("CtrlParent")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool?>("CtrlParentIsTpl")
                        .HasColumnName("CtrlParentIsTPL")
                        .HasColumnType("bit");

                    b.Property<string>("CtrlParentType")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CtrlTextBefore")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("CtrlType")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Culture")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FlexMasterCardTable")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("HasFlexFields")
                        .HasColumnType("bit");

                    b.Property<bool?>("Hidden")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAllUsers")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDropDown")
                        .HasColumnType("bit");

                    b.Property<bool?>("MustSelect")
                        .HasColumnType("bit");

                    b.Property<string>("Screen")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SelectedField")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NamingId");

                    b.ToTable("Sys_Naming");
                });

            modelBuilder.Entity("HR.Tables.Tables.TrOpenningBalance", b =>
                {
                    b.Property<int>("TrOpenningBalanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tr_OpenningBalanceId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Aid")
                        .HasColumnName("AId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("numeric(38, 1)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ExplainId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCreditor")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("TotalDebitor")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("TrOpenningBalanceId");

                    b.ToTable("Tr_OpenningBalance");
                });

            modelBuilder.Entity("HR.Tables.Tables.TrOpenningBalanceDetails", b =>
                {
                    b.Property<int>("OpeningBalanceDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Creditor")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<decimal?>("Debitor")
                        .HasColumnType("numeric(38, 10)");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<int?>("TrOpenningBalanceId")
                        .HasColumnName("Tr_OpenningBalanceId")
                        .HasColumnType("int");

                    b.HasKey("OpeningBalanceDetailsId");

                    b.HasIndex("TrOpenningBalanceId");

                    b.ToTable("Tr_OpenningBalanceDetails");
                });

            modelBuilder.Entity("HR.Tables.Tables.YearMonthes", b =>
                {
                    b.Property<int>("YearMonthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomField")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("FinancialYearsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActual")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNonActual")
                        .HasColumnType("bit");

                    b.Property<int?>("MonthDayes")
                        .HasColumnType("int");

                    b.Property<string>("MontnName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("YearMonthId");

                    b.ToTable("YearMonthes");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetAddDocDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.AssetAssetAddDoc", "AssetAdd")
                        .WithMany("AssetAssetAddDocDetail")
                        .HasForeignKey("AssetAddId")
                        .HasConstraintName("FK_Asset_AssetAddDocDetail_Asset_AssetAddDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetCard", b =>
                {
                    b.HasOne("HR.Tables.Tables.AssetAssetCategory", "AssetCat")
                        .WithMany("AssetAssetCard")
                        .HasForeignKey("AssetCatId")
                        .HasConstraintName("FK_Asset_AssetCard_Asset_AssetCategory");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetCategory", b =>
                {
                    b.HasOne("HR.Tables.Tables.AssetAssetCategory", "ParentAssetCat")
                        .WithMany("InverseParentAssetCat")
                        .HasForeignKey("ParentAssetCatId")
                        .HasConstraintName("FK_Asset_AssetCategory_Asset_AssetCategory");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetContacts", b =>
                {
                    b.HasOne("HR.Tables.Tables.AssetAssetCard", "Asset")
                        .WithMany("AssetAssetContacts")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK_Asset_AssetContacts_Asset_AssetCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetDeductDocDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.AssetAssetDeductDoc", "AssetDeduct")
                        .WithMany("AssetAssetDeductDocDetail")
                        .HasForeignKey("AssetDeductId")
                        .HasConstraintName("FK_Asset_AssetDeductDocDetail_Asset_AssetDeductDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetDeliverDocDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.AssetAssetDeliverDoc", "DeliverAsset")
                        .WithMany("AssetAssetDeliverDocDetail")
                        .HasForeignKey("DeliverAssetId")
                        .HasConstraintName("FK_Asset_AssetDeliverDocDetail_Asset_AssetDeliverDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetFixDocDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.AssetAssetFixDoc", "FixAsset")
                        .WithMany("AssetAssetFixDocDetail")
                        .HasForeignKey("FixAssetId")
                        .HasConstraintName("FK_Asset_AssetFixDocDetail_Asset_AssetFixDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetMoveDocDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.AssetAssetMoveDoc", "AssetMov")
                        .WithMany("AssetAssetMoveDocDetail")
                        .HasForeignKey("AssetMovId")
                        .HasConstraintName("FK_Asset_AssetMoveDocDetail_Asset_AssetMoveDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetReceiveDocDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.AssetAssetReceiveDoc", "ReceiveAsset")
                        .WithMany("AssetAssetReceiveDocDetail")
                        .HasForeignKey("ReceiveAssetId")
                        .HasConstraintName("FK_Asset_AssetReceiveDocDetail_Asset_AssetReceiveDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetAssetSettingDetails", b =>
                {
                    b.HasOne("HR.Tables.Tables.AssetAssetSettings", "AssetSet")
                        .WithMany("AssetAssetSettingDetails")
                        .HasForeignKey("AssetSetId")
                        .HasConstraintName("FK_Asset_AssetSettingDetails_Asset_AssetSettings");
                });

            modelBuilder.Entity("HR.Tables.Tables.AssetDepreciationDocDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.AssetDepreciationDoc", "DeprDoc")
                        .WithMany("AssetDepreciationDocDetail")
                        .HasForeignKey("DeprDocId")
                        .HasConstraintName("FK_Asset_DepreciationDocDetail_Asset_DepreciationDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.BnkBankNoticeDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.BnkBankNotice", "BankNotic")
                        .WithMany("BnkBankNoticeDetail")
                        .HasForeignKey("BankNoticId")
                        .HasConstraintName("FK_BNK_BankNoticeDetail_BNk_BankNotice");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalAccChrtDailyAssist", b =>
                {
                    b.HasOne("HR.Tables.Tables.CalAccountChart", "Account")
                        .WithMany("CalAccChrtDailyAssist")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Cal_AccChrtDailyAssist_Cal_AccountChart");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalAccountChart", b =>
                {
                    b.HasOne("HR.Tables.Tables.SysAnalyticalCodes", "A")
                        .WithMany("CalAccountChart")
                        .HasForeignKey("Aid")
                        .HasConstraintName("FK_Cal_AccountChart_Sys_AnalyticalCodes");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalAccountClaasiJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.CalAccountChart", "Account")
                        .WithMany("CalAccountClaasiJoin")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Cal_AccountClaasiJoin_Cal_AccountChart");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalAccountUsers", b =>
                {
                    b.HasOne("HR.Tables.Tables.CalAccountChart", "Account")
                        .WithMany("CalAccountUsers")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Cal_AccountUsers_Cal_AccountChart");

                    b.HasOne("HR.Tables.Tables.GUsers", "User")
                        .WithMany("CalAccountUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Cal_AccountUsers_G_Users");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalAssetAccounts", b =>
                {
                    b.HasOne("HR.Tables.Tables.AssetAssetCard", "Asset")
                        .WithMany("CalAssetAccounts")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK_Cal_AssetAccounts_Asset_AssetCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalBudgetDetails", b =>
                {
                    b.HasOne("HR.Tables.Tables.CalBudget", "Budget")
                        .WithMany("CalBudgetDetails")
                        .HasForeignKey("BudgetId")
                        .HasConstraintName("FK_Cal_BudgetDetails_Cal_Budget");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalBusinessPartnerAccounts", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsBusinessPartners", "Bspartner")
                        .WithMany("CalBusinessPartnerAccounts")
                        .HasForeignKey("BspartnerId")
                        .HasConstraintName("FK_Cal_BusinessPartnerAccounts_Ms_BusinessPartners");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalCostCenterAccount", b =>
                {
                    b.HasOne("HR.Tables.Tables.CalAccountChart", "Account")
                        .WithMany("CalCostCenterAccount")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Cal_CostCenterAccount_Cal_AccountChart");

                    b.HasOne("HR.Tables.Tables.CalCostCenters", "CostCenter")
                        .WithMany("CalCostCenterAccount")
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_Cal_CostCenterAccount_Cal_CostCenters");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalCustAccounts", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsCustomer", "Customer")
                        .WithMany("CalCustAccounts")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Cal_CustAccounts_MS_Customer");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalEmpAccounts", b =>
                {
                    b.HasOne("HR.Tables.Tables.CalAccountChart", "Account")
                        .WithMany("CalEmpAccounts")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Cal_EmpAccounts_Cal_AccountChart");

                    b.HasOne("HR.Tables.Tables.HrEmployees", "Emp")
                        .WithMany("CalEmpAccounts")
                        .HasForeignKey("EmpId")
                        .HasConstraintName("FK_Cal_EmpAccounts_Hr_Employees");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalJurnalDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsCurrency", "Currency")
                        .WithMany("CalJurnalDetail")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Cal_JurnalDetail_MS_Currency");

                    b.HasOne("HR.Tables.Tables.CalJurnalEntry", "Jurnal")
                        .WithMany("CalJurnalDetail")
                        .HasForeignKey("JurnalId")
                        .HasConstraintName("FK_Cal_JurnalDetail_Cal_JurnalEntry");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalJurnalEntry", b =>
                {
                    b.HasOne("HR.Tables.Tables.SysAnalyticalCodes", "A")
                        .WithMany("CalJurnalEntry")
                        .HasForeignKey("Aid")
                        .HasConstraintName("FK_Cal_JurnalEntry_Sys_AnalyticalCodes");

                    b.HasOne("HR.Tables.Tables.MsStores", "Stor")
                        .WithMany("CalJurnalEntry")
                        .HasForeignKey("StorId")
                        .HasConstraintName("FK_Cal_JurnalEntry_MS_Stores");
                });

            modelBuilder.Entity("HR.Tables.Tables.CalVendAccounts", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsVendor", "Vendor")
                        .WithMany("CalVendAccounts")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_Cal_VendAccounts_MS_Vendor");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodAccountCategories", b =>
                {
                    b.HasOne("HR.Tables.Tables.SysAnalyticalCodes", "A")
                        .WithMany("CodAccountCategories")
                        .HasForeignKey("Aid")
                        .HasConstraintName("FK_Cod_AccountCategories_Sys_AnalyticalCodes");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodAccountClassification", b =>
                {
                    b.HasOne("HR.Tables.Tables.CodAccountCategories", "AccountCat")
                        .WithMany("CodAccountClassification")
                        .HasForeignKey("AccountCatId")
                        .HasConstraintName("FK_Cod_AccountClassification_Cod_AccountCategories");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodCity", b =>
                {
                    b.HasOne("HR.Tables.Tables.CodRegion", "Region")
                        .WithMany("CodCity")
                        .HasForeignKey("RegionId")
                        .HasConstraintName("FK_Cod_City_Cod_Region");

                    b.HasOne("HR.Tables.Tables.SysCity", "SysCity")
                        .WithMany("CodCity")
                        .HasForeignKey("SysCityId")
                        .HasConstraintName("FK_Cod_City_Sys_City");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodCountry", b =>
                {
                    b.HasOne("HR.Tables.Tables.SysCountries", "CountryCodeNavigation")
                        .WithMany("CodCountry")
                        .HasForeignKey("CountryCode")
                        .HasConstraintName("FK_Cod_Country_Sys_Countries");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodDailyAssistance", b =>
                {
                    b.HasOne("HR.Tables.Tables.CalAccountChart", "Account")
                        .WithMany("CodDailyAssistance")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Cod_DailyAssistance_Cal_AccountChart");

                    b.HasOne("HR.Tables.Tables.SysAnalyticalCodes", "A")
                        .WithMany("CodDailyAssistance")
                        .HasForeignKey("Aid")
                        .HasConstraintName("FK_Cod_DailyAssistance_Sys_AnalyticalCodes");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodInstallmentTempsDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.CodInstallmentTemps", "InstallTemp")
                        .WithMany("CodInstallmentTempsDetail")
                        .HasForeignKey("InstallTempId")
                        .HasConstraintName("FK_Cod_InstallmentTempsDetail_Cod_InstallmentTemps");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodLandPermitActivJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.CodLands", "Land")
                        .WithMany("CodLandPermitActivJoin")
                        .HasForeignKey("LandId")
                        .HasConstraintName("FK_Cod_LandPermitActivJoin_Cod_Lands");

                    b.HasOne("HR.Tables.Tables.CodLandPermtActiv", "LandPermitActiv")
                        .WithMany("CodLandPermitActivJoin")
                        .HasForeignKey("LandPermitActivId")
                        .HasConstraintName("FK_Cod_LandPermitActivJoin_Cod_LandPermtActiv");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodLandPosJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.CodLands", "Land")
                        .WithMany("CodLandPosJoin")
                        .HasForeignKey("LandId")
                        .HasConstraintName("FK_Cod_LandPosJoin_Cod_Lands");

                    b.HasOne("HR.Tables.Tables.CodLandPositions", "LandPos")
                        .WithMany("CodLandPosJoin")
                        .HasForeignKey("LandPosId")
                        .HasConstraintName("FK_Cod_LandPosJoin_Cod_LandPositions");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodLandRetainResJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.CodLands", "Land")
                        .WithMany("CodLandRetainResJoin")
                        .HasForeignKey("LandId")
                        .HasConstraintName("FK_Cod_LandRetainResJoin_Cod_Lands");

                    b.HasOne("HR.Tables.Tables.CodLandRetainRsons", "LandRetainRes")
                        .WithMany("CodLandRetainResJoin")
                        .HasForeignKey("LandRetainResId")
                        .HasConstraintName("FK_Cod_LandRetainResJoin_Cod_LandRetainRsons");
                });

            modelBuilder.Entity("HR.Tables.Tables.CodRegion", b =>
                {
                    b.HasOne("HR.Tables.Tables.CodCountry", "Country")
                        .WithMany("CodRegion")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Cod_Region_Cod_Country");
                });

            modelBuilder.Entity("HR.Tables.Tables.ContrInstallMentDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.ContrInstallMent", "Install")
                        .WithMany("ContrInstallMentDetail")
                        .HasForeignKey("InstallId")
                        .HasConstraintName("FK_Contr_InstallMentDetail_Contr_InstallMent");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmLeads", b =>
                {
                    b.HasOne("HR.Tables.Tables.CrmLeadTypes", "LeadType")
                        .WithMany("CrmLeads")
                        .HasForeignKey("LeadTypeId")
                        .HasConstraintName("FK_CRM_Leads_CRM_LeadTypes");

                    b.HasOne("HR.Tables.Tables.CrmMarketChannels", "MarketChannel")
                        .WithMany("CrmLeads")
                        .HasForeignKey("MarketChannelId")
                        .HasConstraintName("FK_CRM_Leads_CRM_MarketChannels");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmLeadsMembersDetails", b =>
                {
                    b.HasOne("HR.Tables.Tables.CrmLeadsMembers", "LeadMember")
                        .WithMany("CrmLeadsMembersDetails")
                        .HasForeignKey("LeadMemberId")
                        .HasConstraintName("FK_CRM_LeadsMembersDetails_CRM_LeadsMembers");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmLeadsMembersJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.CrmLeads", "Lead")
                        .WithMany("CrmLeadsMembersJoin")
                        .HasForeignKey("LeadId")
                        .HasConstraintName("FK_CRM_LeadsMembersJoin_CRM_Leads");

                    b.HasOne("HR.Tables.Tables.CrmLeadsMembers", "LeadMember")
                        .WithMany("CrmLeadsMembersJoin")
                        .HasForeignKey("LeadMemberId")
                        .HasConstraintName("FK_CRM_LeadsMembersJoin_CRM_LeadsMembers");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmSalesPlanDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.CrmSalesPlan", "SalesPlan")
                        .WithMany("CrmSalesPlanDetail")
                        .HasForeignKey("SalesPlanId")
                        .HasConstraintName("FK_CRM_SalesPlanDetail_CRM_SalesPlan");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmSurvey", b =>
                {
                    b.HasOne("HR.Tables.Tables.CrmVisitTypes", "VisitType")
                        .WithMany("CrmSurvey")
                        .HasForeignKey("VisitTypeId")
                        .HasConstraintName("FK_CRM_Survey_CRM_VisitTypes")
                        .IsRequired();
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmTeamMembers", b =>
                {
                    b.HasOne("HR.Tables.Tables.CrmTeams", "Team")
                        .WithMany("CrmTeamMembers")
                        .HasForeignKey("TeamId")
                        .HasConstraintName("FK_CRM_TeamMembers_CRM_Teams");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmVisitSurveys", b =>
                {
                    b.HasOne("HR.Tables.Tables.CrmVisits", "Visit")
                        .WithMany("CrmVisitSurveys")
                        .HasForeignKey("VisitId")
                        .HasConstraintName("FK_CRM_VisitSurveys_CRM_Visits");
                });

            modelBuilder.Entity("HR.Tables.Tables.CrmVisits", b =>
                {
                    b.HasOne("HR.Tables.Tables.CrmVisitTypes", "VisitType")
                        .WithMany("CrmVisits")
                        .HasForeignKey("VisitTypeId")
                        .HasConstraintName("FK_CRM_Visits_CRM_VisitTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.GUserModule", b =>
                {
                    b.HasOne("HR.Tables.Tables.GUsers", "User")
                        .WithMany("GUserModule")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_G_USER_MODULE_G_Users")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HR.Tables.Tables.GUserRolePermissions", b =>
                {
                    b.HasOne("HR.Tables.Tables.GUserRole", "UserRole")
                        .WithMany("GUserRolePermissions")
                        .HasForeignKey("UserRoleId")
                        .HasConstraintName("FK_G_UserRolePermissions_G_UserRole");
                });

            modelBuilder.Entity("HR.Tables.Tables.GUsers", b =>
                {
                    b.HasOne("HR.Tables.Tables.GUserRole", "UserRole")
                        .WithMany("GUsers")
                        .HasForeignKey("UserRoleId")
                        .HasConstraintName("FK_G_Users_G_UserRole");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrActivityDetailElements", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrEmpActivityDetail", "EmpActivityDetail")
                        .WithMany("HrActivityDetailElements")
                        .HasForeignKey("EmpActivityDetailId")
                        .HasConstraintName("FK_Hr_ActivityDetailElements_Hr_EmpActivityDetail");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrAttendDocDetails", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrAttendanceDoc", "AttendDoc")
                        .WithMany("HrAttendDocDetails")
                        .HasForeignKey("AttendDocId")
                        .HasConstraintName("FK_Hr_AttendDocDetails_Hr_AttendanceDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrDepartments", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrDepartments", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Hr_Departments_Hr_Departments");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpActivityDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrEmpActivity", "EmpActivity")
                        .WithMany("HrEmpActivityDetail")
                        .HasForeignKey("EmpActivityId")
                        .HasConstraintName("FK_Hr_EmpActivityDetail_Hr_EmpActivity");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpDocuments", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrEmpDocTypes", "EmpDocTyp")
                        .WithMany("HrEmpDocuments")
                        .HasForeignKey("EmpDocTypId")
                        .HasConstraintName("FK_Hr_EmpDocuments_Hr_EmpDocTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpGroups", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrEmpGroups", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Hr_EmpGroups_Hr_EmpGroups");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpKPIS", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrEmployees", "HrEmployees")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR.Tables.Tables.HrKPIS", "HrKPIS")
                        .WithMany()
                        .HasForeignKey("KPIId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpLocations", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrEmployees", "HrEmployees")
                        .WithMany("HrEmpLocations")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR.Tables.Tables.HrLocation", "HrLocation")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpMovePromotDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrEmpMovePromotion", "EmpMove")
                        .WithMany("HrEmpMovePromotDetail")
                        .HasForeignKey("EmpMoveId")
                        .HasConstraintName("FK_Hr_EmpMovePromotDetail_Hr_EmpMovePromotion");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpSalaryTypes", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrEmployees", "Emp")
                        .WithMany("HrEmpSalaryTypes")
                        .HasForeignKey("EmpId")
                        .HasConstraintName("FK_Hr_EmpSalaryTypes_Hr_Employees");

                    b.HasOne("HR.Tables.Tables.HrSalaryTypes", "SalaryTyp")
                        .WithMany("HrEmpSalaryTypes")
                        .HasForeignKey("SalaryTypId")
                        .HasConstraintName("FK_Hr_EmpSalaryTypes_Hr_SalaryTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpShift", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrEmployees", "HrEmployees")
                        .WithMany("HrEmpShifts")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR.Tables.Tables.HrShifts", "HrShifts")
                        .WithMany()
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpStore", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrEmployees", "HrEmployees")
                        .WithMany("HrEmpStores")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR.Tables.Tables.MsStores", "Stores")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpVacationsDetails", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrEmpVacation", "EmpVac")
                        .WithMany("HrEmpVacationsDetails")
                        .HasForeignKey("EmpVacId")
                        .HasConstraintName("FK_Hr_EmpVacationsDetails_Hr_EmpVacation");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmployees", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrDepartments", "DepartMent")
                        .WithMany("HrEmployees")
                        .HasForeignKey("DepartMentId")
                        .HasConstraintName("FK_Hr_Employees_Hr_Departments");

                    b.HasOne("HR.Tables.Tables.HrEmpGroups", "HrempGroup")
                        .WithMany("HrEmployees")
                        .HasForeignKey("HrempGroupId")
                        .HasConstraintName("FK_Hr_Employees_Hr_EmpGroups");

                    b.HasOne("HR.Tables.Tables.HrJobs", "Job")
                        .WithMany("HrEmployees")
                        .HasForeignKey("JobId")
                        .HasConstraintName("FK_Hr_Employees_Hr_Jobs");

                    b.HasOne("HR.Tables.Tables.HrPeriodsTables", "PeriodTable")
                        .WithMany("HrEmployees")
                        .HasForeignKey("PeriodTableId")
                        .HasConstraintName("FK_Hr_Employees_Hr_PeriodsTables");

                    b.HasOne("HR.Tables.Tables.HrShifts", "Shift")
                        .WithMany("HrEmployees")
                        .HasForeignKey("ShiftId")
                        .HasConstraintName("FK_Hr_Employees_Hr_Shifts");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrEmpsSalaryTemp", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrSalaryTypes", "SalaryTyp")
                        .WithMany("HrEmpsSalaryTemp")
                        .HasForeignKey("SalaryTypId")
                        .HasConstraintName("FK_Hr_EmpsSalaryTemp_Hr_SalaryTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrPeriodTableDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrPeriodsTables", "PeriodTable")
                        .WithMany("HrPeriodTableDetail")
                        .HasForeignKey("PeriodTableId")
                        .HasConstraintName("FK_Hr_PeriodTableDetail_Hr_PeriodsTables");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrPeriodTablePolicy", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrPeriodsTables", "PeriodTable")
                        .WithMany("HrPeriodTablePolicy")
                        .HasForeignKey("PeriodTableId")
                        .HasConstraintName("FK_Hr_PeriodTablePolicy_Hr_PeriodsTables");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrPeriodTableVacations", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrPeriodsTables", "PeriodTable")
                        .WithMany("HrPeriodTableVacations")
                        .HasForeignKey("PeriodTableId")
                        .HasConstraintName("FK_Hr_PeriodTableVacations_Hr_PeriodsTables");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrSalaryIssueDetails", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrSalaryIssueDoc", "SalaryIssuDoc")
                        .WithMany("HrSalaryIssueDetails")
                        .HasForeignKey("SalaryIssuDocId")
                        .HasConstraintName("FK_Hr_SalaryIssueDetails_Hr_SalaryIssueDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrSalaryIssueDistribution", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrSalaryIssueDoc", "SalaryIssuDoc")
                        .WithMany("HrSalaryIssueDistribution")
                        .HasForeignKey("SalaryIssuDocId")
                        .HasConstraintName("FK_Hr_SalaryIssueDistribution_Hr_SalaryIssueDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.HrSegments", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrSalaryTypes", "SalaryTyp")
                        .WithMany("HrSegments")
                        .HasForeignKey("SalaryTypId")
                        .HasConstraintName("FK_Hr_Segments_Hr_SalaryTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.LaLands", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsCustomer", "Customer")
                        .WithMany("LaLands")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_La_Lands_MS_Customer");
                });

            modelBuilder.Entity("HR.Tables.Tables.LaPropSerial", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsCustomer", "CustMainNavigation")
                        .WithMany("LaPropSerial")
                        .HasForeignKey("CustMain")
                        .HasConstraintName("FK_La_PropSerial_MS_Customer");
                });

            modelBuilder.Entity("HR.Tables.Tables.Mobile_Attendance", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrEmployees", "HrEmployees")
                        .WithMany()
                        .HasForeignKey("Emp_Id");

                    b.HasOne("HR.Tables.Tables.HrShifts", "HrShifts")
                        .WithMany()
                        .HasForeignKey("ShftId");

                    b.HasOne("HR.Tables.Tables.MsStores", "MsStores")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsBoxCurrency", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsBankAccount", "Account")
                        .WithMany("MsBoxCurrency")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_MS_BoxCurrency_Ms_BankAccount");

                    b.HasOne("HR.Tables.Tables.MsBoxBank", "Box")
                        .WithMany("MsBoxCurrency")
                        .HasForeignKey("BoxId")
                        .HasConstraintName("FK_MS_BoxCurrency_MS_BoxBank");

                    b.HasOne("HR.Tables.Tables.MsCurrency", "Currency")
                        .WithMany("MsBoxCurrency")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_MS_BoxCurrency_MS_Currency");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsBoxTransferDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsBoxTransferNote", "BoxTran")
                        .WithMany("MsBoxTransferDetail")
                        .HasForeignKey("BoxTranId")
                        .HasConstraintName("FK_MS_BoxTransferDetail_MS_BoxTransferNote");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsBoxUsers", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsBoxBank", "Box")
                        .WithMany("MsBoxUsers")
                        .HasForeignKey("BoxId")
                        .HasConstraintName("FK_Ms_BoxUsers_MS_BoxBank");

                    b.HasOne("HR.Tables.Tables.GUsers", "User")
                        .WithMany("MsBoxUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Ms_BoxUsers_G_Users");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsBusinessPartners", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsBusinessPartnerCategory", "BsPartnerCat")
                        .WithMany("MsBusinessPartners")
                        .HasForeignKey("BsPartnerCatId")
                        .HasConstraintName("FK_Ms_BusinessPartners_Ms_BusinessPartnerCategory");

                    b.HasOne("HR.Tables.Tables.MsBusinessPartnerType", "BsPartnerType")
                        .WithMany("MsBusinessPartners")
                        .HasForeignKey("BsPartnerTypeId")
                        .HasConstraintName("FK_Ms_BusinessPartners_Ms_BusinessPartnerType");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCashTransactionDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsAdjustMents", "Adjust")
                        .WithMany("MsCashTransactionDetail")
                        .HasForeignKey("AdjustId")
                        .HasConstraintName("FK_MS_CashTransactionDetail_Ms_AdjustMents");

                    b.HasOne("HR.Tables.Tables.CalJurnalEntry", "Jurnal")
                        .WithMany("MsCashTransactionDetail")
                        .HasForeignKey("JurnalId")
                        .HasConstraintName("FK_MS_CashTransactionDetail_Cal_JurnalEntry");

                    b.HasOne("HR.Tables.Tables.MsPaymentNote", "Pay")
                        .WithMany("MsCashTransactionDetail")
                        .HasForeignKey("PayId")
                        .HasConstraintName("FK_MS_CashTransactionDetail_MS_PaymentNote");

                    b.HasOne("HR.Tables.Tables.MsReceiptNote", "Rect")
                        .WithMany("MsCashTransactionDetail")
                        .HasForeignKey("RectId")
                        .HasConstraintName("FK_MS_CashTransactionDetail_Ms_ReceiptNote");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCheqBooks", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrEmployees", "Emp")
                        .WithMany("MsCheqBooks")
                        .HasForeignKey("EmpId")
                        .HasConstraintName("FK_Ms_Books_Hr_Employees");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCurrencyCategoryJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsCurrencyCategory", "CurrencyCategory")
                        .WithMany("MsCurrencyCategoryJoin")
                        .HasForeignKey("CurrencyCategoryId")
                        .HasConstraintName("FK_Ms_CurrencyCategoryJoin_MS_CurrencyCategory");

                    b.HasOne("HR.Tables.Tables.MsCurrency", "Currency")
                        .WithMany("MsCurrencyCategoryJoin")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Ms_CurrencyCategoryJoin_MS_Currency");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCurrencyRate", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsCurrency", "Currency")
                        .WithMany("MsCurrencyRate")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Ms_CurrencyRate_MS_Currency");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCusromerUsers", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsCustomer", "Customer")
                        .WithMany("MsCusromerUsers")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Ms_CusromerUsers_MS_Customer");

                    b.HasOne("HR.Tables.Tables.GUsers", "User")
                        .WithMany("MsCusromerUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Ms_CusromerUsers_G_Users");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCustImgs", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsCustomer", "Customer")
                        .WithMany("MsCustImgs")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Ms_CustImgs_MS_Customer");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCustomer", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsCurrency", "Currency")
                        .WithMany("MsCustomer")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_MS_Customer_MS_Currency");

                    b.HasOne("HR.Tables.Tables.MsCustomerCategory", "CustomerCat")
                        .WithMany("MsCustomer")
                        .HasForeignKey("CustomerCatId")
                        .HasConstraintName("FK_MS_Customer_MS_CustomerCategory");

                    b.HasOne("HR.Tables.Tables.MsCustomerTypes", "CustomerType")
                        .WithMany("MsCustomer")
                        .HasForeignKey("CustomerTypeId")
                        .HasConstraintName("FK_MS_Customer_Ms_CustomerTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCustomerBranches", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsCustomer", "Customer")
                        .WithMany("MsCustomerBranches")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Ms_CustomerBranches_MS_Customer");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsCustomerContacts", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsCustomer", "Customer")
                        .WithMany("MsCustomerContacts")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Ms_CustomerContacts_MS_Customer");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsDeliverItemCard", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsDeliverSalesInvoice", "Deliver")
                        .WithMany("MsDeliverItemCard")
                        .HasForeignKey("DeliverId")
                        .HasConstraintName("FK_Ms_DeliverItemCard_Ms_DeliverSalesInvoice");

                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("MsDeliverItemCard")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Ms_DeliverItemCard_MS_ItemCard");

                    b.HasOne("HR.Tables.Tables.MsItemUnit", "Unit")
                        .WithMany("MsDeliverItemCard")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_Ms_DeliverItemCard_Ms_ItemUnit");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsDeliverSalesInvoiceExpenses", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsDeliverSalesInvoice", "Deliver")
                        .WithMany("MsDeliverSalesInvoiceExpenses")
                        .HasForeignKey("DeliverId")
                        .HasConstraintName("FK_Ms_DeliverSalesInvoiceExpenses_Ms_DeliverSalesInvoice");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsGaLetterExportDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsGaLetterExport", "LetterExport")
                        .WithMany("MsGaLetterExportDetail")
                        .HasForeignKey("LetterExportId")
                        .HasConstraintName("FK_MsGA_LetterExportDetail_MsGA_LetterExport");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsGaLetterFayumDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsGaLetterFayum", "LetterFayum")
                        .WithMany("MsGaLetterFayumDetail")
                        .HasForeignKey("LetterFayumId")
                        .HasConstraintName("FK_MsGA_LetterFayumDetail_MsGA_LetterFayum");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsGaLetterNormalDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsGaLetterNormal", "LetterNorm")
                        .WithMany("MsGaLetterNormalDetail")
                        .HasForeignKey("LetterNormId")
                        .HasConstraintName("FK_MsGA_LetterNormalDetail_MsGA_LetterNormal");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsGaMotorSndetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsGaLetterFayum", "LetterFayum")
                        .WithMany("MsGaMotorSndetail")
                        .HasForeignKey("LetterFayumId")
                        .HasConstraintName("FK_MsGA_MotorSNDetail_MsGA_LetterFayum");

                    b.HasOne("HR.Tables.Tables.MsGaLetterNormal", "LetterNorm")
                        .WithMany("MsGaMotorSndetail")
                        .HasForeignKey("LetterNormId")
                        .HasConstraintName("FK_MsGA_MotorSNDetail_MsGA_LetterNormal");

                    b.HasOne("HR.Tables.Tables.MsGaMotorSn", "MotorDoc")
                        .WithMany("MsGaMotorSndetail")
                        .HasForeignKey("MotorDocId")
                        .HasConstraintName("FK_MsGA_MotorSNDetail_MsGA_MotorSN");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsGaShipmentDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsGaLetterExport", "LetterExport")
                        .WithMany("MsGaShipmentDetail")
                        .HasForeignKey("LetterExportId")
                        .HasConstraintName("FK_MsGA_ShipmentDetail_MsGA_LetterExport");

                    b.HasOne("HR.Tables.Tables.MsGaShipment", "ShipMent")
                        .WithMany("MsGaShipmentDetail")
                        .HasForeignKey("ShipMentId")
                        .HasConstraintName("FK_MsGA_ShipmentDetail_MsGA_Shipment")
                        .IsRequired();
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemAlternatives", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("MsItemAlternatives")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_MS_ItemAlternatives_MS_ItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemCard", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCategory", "ItemCategory")
                        .WithMany("MsItemCard")
                        .HasForeignKey("ItemCategoryId")
                        .HasConstraintName("FK_MS_ItemCard_MS_ItemCategory");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemCardOffers", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("MsItemCardOffers")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Ms_ItemCardOffers_MS_ItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemCollection", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("MsItemCollection")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Ms_ItemCollection_MS_ItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemImages", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("MsItemImages")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_MS_ItemImages_MS_ItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemPartition", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("MsItemPartition")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Ms_ItemPartition_MS_ItemCard");

                    b.HasOne("HR.Tables.Tables.MsPartition", "StorePart")
                        .WithMany("MsItemPartition")
                        .HasForeignKey("StorePartId")
                        .HasConstraintName("FK_Ms_ItemPartition_MS_Partition");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemSerials", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsDeliverItemCard", "DelivItemCard")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("DelivItemCardId")
                        .HasConstraintName("FK_MS_ItemSerials_Ms_DeliverItemCard");

                    b.HasOne("HR.Tables.Tables.MsSalesInvoiceItemCard", "InvItemCard")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("InvItemCardId")
                        .HasConstraintName("FK_MS_ItemSerials_Ms_SalesInvoiceItemCard");

                    b.HasOne("HR.Tables.Tables.MsSalesOrderItemCard", "OrderDetailItemCard")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("OrderDetailItemCardId")
                        .HasConstraintName("FK_MS_ItemSerials_Ms_SalesOrderItemCard");

                    b.HasOne("HR.Tables.Tables.MsPurchaseInvoiceItemCard", "PurInvItemCard")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("PurInvItemCardId")
                        .HasConstraintName("FK_MS_ItemSerials_MS_PurchaseInvoiceItemCard");

                    b.HasOne("HR.Tables.Tables.MsReturnSalesItemCard", "RetItemCard")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("RetItemCardId")
                        .HasConstraintName("FK_MS_ItemSerials_MS_ReturnSalesItemCard");

                    b.HasOne("HR.Tables.Tables.MsReturnPurchaseItem", "RetPurchItemCard")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("RetPurchItemCardId")
                        .HasConstraintName("FK_MS_ItemSerials_MS_ReturnPurchaseItem");

                    b.HasOne("HR.Tables.Tables.MsItemStockAdjustmentDetail", "StockAdjustItem")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("StockAdjustItemId")
                        .HasConstraintName("FK_MS_ItemSerials_Ms_ItemStockAdjustmentDetail");

                    b.HasOne("HR.Tables.Tables.MsStockReceiptItemCard", "StockRecItemCard")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("StockRecItemCardId")
                        .HasConstraintName("FK_MS_ItemSerials_MS_StockReceiptItemCard");

                    b.HasOne("HR.Tables.Tables.MsStockTranItemCard", "TrItenCard")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("TrItenCardId")
                        .HasConstraintName("FK_MS_ItemSerials_MS_StockTranItemCard");

                    b.HasOne("HR.Tables.Tables.MsStockTranItemCardReq", "TranReqItemCard")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("TranReqItemCardId")
                        .HasConstraintName("FK_MS_ItemSerials_Ms_StockTranItemCardReq");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemStartQty", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("MsItemStartQty")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Ms_ItemStartQty_MS_ItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemStockAdjustmentDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("MsItemStockAdjustmentDetail")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Ms_ItemStockAdjustmentDetail_MS_ItemCard");

                    b.HasOne("HR.Tables.Tables.MsItemStockAdjustment", "StockAdjust")
                        .WithMany("MsItemStockAdjustmentDetail")
                        .HasForeignKey("StockAdjustId")
                        .HasConstraintName("FK_Ms_ItemStockAdjustmentDetail_Ms_ItemStockAdjustment");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemUnit", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdBasicUnits", "BasUnit")
                        .WithMany("MsItemUnit")
                        .HasForeignKey("BasUnitId")
                        .HasConstraintName("FK_Ms_ItemUnit_Prod_BasicUnits");

                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("MsItemUnit")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Ms_ItemUnit_MS_ItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemUnitPackingJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.CodPackingSize", "PackSize")
                        .WithMany("MsItemUnitPackingJoin")
                        .HasForeignKey("PackSizeId")
                        .HasConstraintName("FK_Ms_ItemUnitPackingJoin_Cod_PackingSize");

                    b.HasOne("HR.Tables.Tables.MsItemUnit", "Unit")
                        .WithMany("MsItemUnitPackingJoin")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_Ms_ItemUnitPackingJoin_Ms_ItemUnit");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsItemVendors", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("MsItemVendors")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_MS_ItemVendors_MS_ItemCard");

                    b.HasOne("HR.Tables.Tables.MsVendor", "Vendor")
                        .WithMany("MsItemVendors")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_MS_ItemVendors_MS_Vendor");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsKeeperBankDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsKeeperBank", "Keeper")
                        .WithMany("MsKeeperBankDetail")
                        .HasForeignKey("KeeperId")
                        .HasConstraintName("FK_Ms_KeeperBankDetail_Ms_KeeperBank");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsLetterOfGuaranteeTrans", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsLetterOfGuarantee", "LetOfGrntee")
                        .WithMany("MsLetterOfGuaranteeTrans")
                        .HasForeignKey("LetOfGrnteeId")
                        .HasConstraintName("FK_Ms_LetterOfGuaranteeTrans_Ms_LetterOfGuarantee");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPartition", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsStores", "Store")
                        .WithMany("MsPartition")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK_MS_Partition_MS_Stores");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPaymentNote", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsBoxBank", "Box")
                        .WithMany("MsPaymentNote")
                        .HasForeignKey("BoxId")
                        .HasConstraintName("FK_MS_PaymentNote_MS_BoxBank");

                    b.HasOne("HR.Tables.Tables.MsPurchasInvoice", "PurInv")
                        .WithMany("MsPaymentNote")
                        .HasForeignKey("PurInvId")
                        .HasConstraintName("FK_MS_PaymentNote_MS_PurchasInvoice");

                    b.HasOne("HR.Tables.Tables.MsReturnSales", "RetSale")
                        .WithMany("MsPaymentNote")
                        .HasForeignKey("RetSaleId")
                        .HasConstraintName("FK_MS_PaymentNote_MS_ReturnSales");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPaymentNoteCurrencies", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsPaymentNote", "Pay")
                        .WithMany("MsPaymentNoteCurrencies")
                        .HasForeignKey("PayId")
                        .HasConstraintName("FK_Ms_PaymentNoteCurrencies_MS_PaymentNote");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPaymentNoteItems", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsPaymentNote", "Pay")
                        .WithMany("MsPaymentNoteItems")
                        .HasForeignKey("PayId")
                        .HasConstraintName("FK_Ms_PaymentNoteItems_MS_PaymentNote");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPettyCashDetails", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsPettycash", "Pettycash")
                        .WithMany("MsPettyCashDetails")
                        .HasForeignKey("PettycashId")
                        .HasConstraintName("FK_MS_PettyCashDetails_MS_Pettycash");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPettyPaymentJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsPaymentNote", "Pay")
                        .WithMany("MsPettyPaymentJoin")
                        .HasForeignKey("PayId")
                        .HasConstraintName("FK_Ms_PettyPaymentJoin_MS_PaymentNote");

                    b.HasOne("HR.Tables.Tables.MsPettycash", "Pettycash")
                        .WithMany("MsPettyPaymentJoin")
                        .HasForeignKey("PettycashId")
                        .HasConstraintName("FK_Ms_PettyPaymentJoin_MS_Pettycash");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPurchInvVehicleJobOrderJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsPurchasInvoice", "PurInv")
                        .WithMany("MsPurchInvVehicleJobOrderJoin")
                        .HasForeignKey("PurInvId")
                        .HasConstraintName("FK_Ms_PurchInvVehicleJobOrderJoin_MS_PurchasInvoice");

                    b.HasOne("HR.Tables.Tables.SrVehicleJobOrder", "Vjorder")
                        .WithMany("MsPurchInvVehicleJobOrderJoin")
                        .HasForeignKey("VjorderId")
                        .HasConstraintName("FK_Ms_PurchInvVehicleJobOrderJoin_Sr_VehicleJobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPurchOrderDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("MsPurchOrderDetail")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_MS_PurchOrderDetail_MS_ItemCard");

                    b.HasOne("HR.Tables.Tables.MsPurchasOrder", "PurOrder")
                        .WithMany("MsPurchOrderDetail")
                        .HasForeignKey("PurOrderId")
                        .HasConstraintName("FK_MS_PurchOrderDetail_Ms_PurchasOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPurchOrderReqDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsPurchasOrderRequest", "PurOrderReq")
                        .WithMany("MsPurchOrderReqDetail")
                        .HasForeignKey("PurOrderReqId")
                        .HasConstraintName("FK_MS_PurchOrderReqDetail_Ms_PurchasOrderRequest");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPurchasInvoice", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsPurchasOrder", "PurOrder")
                        .WithMany("MsPurchasInvoice")
                        .HasForeignKey("PurOrderId")
                        .HasConstraintName("FK_MS_PurchasInvoice_Ms_PurchasOrder");

                    b.HasOne("HR.Tables.Tables.MsTaxes", "TaxesId1Navigation")
                        .WithMany("MsPurchasInvoice")
                        .HasForeignKey("TaxesId1")
                        .HasConstraintName("FK_MS_PurchasInvoice_MS_Taxes");

                    b.HasOne("HR.Tables.Tables.MsVendor", "Vendor")
                        .WithMany("MsPurchasInvoice")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_MS_PurchasInvoice_MS_Vendor");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPurchasInvoiceCurrencies", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsPurchasInvoice", "PurInv")
                        .WithMany("MsPurchasInvoiceCurrencies")
                        .HasForeignKey("PurInvId")
                        .HasConstraintName("FK_MS_PurchasInvoiceCurrencies_MS_PurchasInvoice");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPurchaseInvoiceCostReceived", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsPurchasInvoice", "PurInv")
                        .WithMany("MsPurchaseInvoiceCostReceived")
                        .HasForeignKey("PurInvId")
                        .HasConstraintName("FK_Ms_PurchaseInvoiceCostReceived_MS_PurchasInvoice");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPurchaseInvoiceExpenses", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsPurchasInvoice", "PurInv")
                        .WithMany("MsPurchaseInvoiceExpenses")
                        .HasForeignKey("PurInvId")
                        .HasConstraintName("FK_MS_PurchaseInvoiceExpenses_MS_PurchasInvoice");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsPurchaseInvoiceItemCard", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("MsPurchaseInvoiceItemCard")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_MS_PurchaseInvoiceItemCard_MS_ItemCard");

                    b.HasOne("HR.Tables.Tables.MsPurchasInvoice", "PurInv")
                        .WithMany("MsPurchaseInvoiceItemCard")
                        .HasForeignKey("PurInvId")
                        .HasConstraintName("FK_MS_PurchaseInvoiceItemCard_MS_PurchasInvoice");

                    b.HasOne("HR.Tables.Tables.MsItemUnit", "Unit")
                        .WithMany("MsPurchaseInvoiceItemCard")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_MS_PurchaseInvoiceItemCard_Ms_ItemUnit");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsReceiptNote", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsBoxBank", "Box")
                        .WithMany("MsReceiptNote")
                        .HasForeignKey("BoxId")
                        .HasConstraintName("FK_Ms_ReceiptNote_MS_BoxBank");

                    b.HasOne("HR.Tables.Tables.MsSalesInvoice", "Inv")
                        .WithMany("MsReceiptNote")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Ms_ReceiptNote_Ms_SalesInvoice");

                    b.HasOne("HR.Tables.Tables.MsReturnPurchase", "RetPur")
                        .WithMany("MsReceiptNote")
                        .HasForeignKey("RetPurId")
                        .HasConstraintName("FK_Ms_ReceiptNote_MS_ReturnPurchase");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsReceiptNoteCurrencies", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsReceiptNote", "Rect")
                        .WithMany("MsReceiptNoteCurrencies")
                        .HasForeignKey("RectId")
                        .HasConstraintName("FK_Ms_ReceiptNoteCurrencies_Ms_ReceiptNote");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsReturnPurchaseCurrencies", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsReturnPurchase", "RetPurch")
                        .WithMany("MsReturnPurchaseCurrencies")
                        .HasForeignKey("RetPurchId")
                        .HasConstraintName("FK_MS_ReturnPurchaseCurrencies_MS_ReturnPurchase");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsReturnPurchaseExpenses", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsReturnPurchase", "RetPurch")
                        .WithMany("MsReturnPurchaseExpenses")
                        .HasForeignKey("RetPurchId")
                        .HasConstraintName("FK_Ms_ReturnPurchaseExpenses_MS_ReturnPurchase");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsReturnPurchaseItem", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("MsReturnPurchaseItem")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_MS_ReturnPurchaseItem_MS_ItemCard");

                    b.HasOne("HR.Tables.Tables.MsReturnPurchase", "RetPurch")
                        .WithMany("MsReturnPurchaseItem")
                        .HasForeignKey("RetPurchId")
                        .HasConstraintName("FK_MS_ReturnPurchaseItem_MS_ReturnPurchase");

                    b.HasOne("HR.Tables.Tables.MsItemUnit", "Unit")
                        .WithMany("MsReturnPurchaseItem")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_MS_ReturnPurchaseItem_Ms_ItemUnit");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsReturnSalesCurrencies", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsReturnSales", "RetSale")
                        .WithMany("MsReturnSalesCurrencies")
                        .HasForeignKey("RetSaleId")
                        .HasConstraintName("FK_MS_ReturnSalesCurrencies_MS_ReturnSales");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsReturnSalesExpenses", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsReturnSales", "RetSale")
                        .WithMany("MsReturnSalesExpenses")
                        .HasForeignKey("RetSaleId")
                        .HasConstraintName("FK_Ms_ReturnSalesExpenses_MS_ReturnSales");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsReturnSalesItemCard", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("MsReturnSalesItemCard")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_MS_ReturnSalesItemCard_MS_ItemCard");

                    b.HasOne("HR.Tables.Tables.MsReturnSales", "RetSale")
                        .WithMany("MsReturnSalesItemCard")
                        .HasForeignKey("RetSaleId")
                        .HasConstraintName("FK_MS_ReturnSalesItemCard_MS_ReturnSales");

                    b.HasOne("HR.Tables.Tables.MsItemUnit", "Unit")
                        .WithMany("MsReturnSalesItemCard")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_MS_ReturnSalesItemCard_Ms_ItemUnit");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesInvJobOrderJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsSalesInvoice", "Inv")
                        .WithMany("MsSalesInvJobOrderJoin")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Ms_SalesInvJobOrderJoin_Ms_SalesInvoice");

                    b.HasOne("HR.Tables.Tables.ProdJobOrder", "JobOrder")
                        .WithMany("MsSalesInvJobOrderJoin")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Ms_SalesInvJobOrderJoin_Prod_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesInvVehiclJobOrderJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsSalesInvoice", "Inv")
                        .WithMany("MsSalesInvVehiclJobOrderJoin")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Ms_SalesInvVehiclJobOrderJoin_Ms_SalesInvoice");

                    b.HasOne("HR.Tables.Tables.SrVehicleJobOrder", "Vjorder")
                        .WithMany("MsSalesInvVehiclJobOrderJoin")
                        .HasForeignKey("VjorderId")
                        .HasConstraintName("FK_Ms_SalesInvVehiclJobOrderJoin_Sr_VehicleJobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesInvoice", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsCustomer", "Customer")
                        .WithMany("MsSalesInvoice")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Ms_SalesInvoice_MS_Customer");

                    b.HasOne("HR.Tables.Tables.MsSalesOffer", "SalesOffer")
                        .WithMany("MsSalesInvoice")
                        .HasForeignKey("SalesOfferId")
                        .HasConstraintName("FK_Ms_SalesInvoice_Ms_SalesOffer");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesInvoiceCurrencies", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsSalesInvoice", "Inv")
                        .WithMany("MsSalesInvoiceCurrencies")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Ms_SalesInvoiceCurrencies_Ms_SalesInvoice");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesInvoiceExpenses", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsSalesInvoice", "Inv")
                        .WithMany("MsSalesInvoiceExpenses")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Ms_SalesInvoiceExpenses_Ms_SalesInvoice");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesInvoiceItemCard", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsSalesInvoice", "Inv")
                        .WithMany("MsSalesInvoiceItemCard")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_InvoiceItemCard_Ms_SalesInvoice");

                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("MsSalesInvoiceItemCard")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_InvoiceItemCard_MS_ItemCard");

                    b.HasOne("HR.Tables.Tables.MsItemUnit", "Unit")
                        .WithMany("MsSalesInvoiceItemCard")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_Ms_SalesInvoiceItemCard_Ms_ItemUnit");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesInvoiceQualityDeliveryDocs", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsSalesInvoice", "Inv")
                        .WithMany("MsSalesInvoiceQualityDeliveryDocs")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Ms_SalesInvoiceQualityDeliveryDocs_Ms_SalesInvoice");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesInvoiceQualityMissedItems", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsSalesInvoice", "Inv")
                        .WithMany("MsSalesInvoiceQualityMissedItems")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Ms_SalesInvoiceQualityMissedItems_Ms_SalesInvoice");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesItemsOffersDetails", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsSalesItemsOffers", "PromoOffer")
                        .WithMany("MsSalesItemsOffersDetails")
                        .HasForeignKey("PromoOfferId")
                        .HasConstraintName("FK_Ms_SalesItemsOffersDetails_Ms_SalesItemsOffers");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesOfferItemCard", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("MsSalesOfferItemCard")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Ms_SalesOfferItemCard_MS_ItemCard");

                    b.HasOne("HR.Tables.Tables.MsSalesOffer", "SalesOffer")
                        .WithMany("MsSalesOfferItemCard")
                        .HasForeignKey("SalesOfferId")
                        .HasConstraintName("FK_Ms_SalesOfferItemCard_Ms_SalesOffer");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesOfferItemRequest", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsSalesOfferRequest", "SalesOfferReq")
                        .WithMany("MsSalesOfferItemRequest")
                        .HasForeignKey("SalesOfferReqId")
                        .HasConstraintName("FK_Ms_SalesOfferItemRequest_Ms_SalesOfferRequest");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsSalesOrderItemCard", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsSalesOrder", "SalesOrder")
                        .WithMany("MsSalesOrderItemCard")
                        .HasForeignKey("SalesOrderId")
                        .HasConstraintName("FK_Ms_SalesOrderItemCard_Ms_SalesOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsStockReceiptItemCard", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("MsStockReceiptItemCard")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_MS_StockReceiptItemCard_MS_ItemCard");

                    b.HasOne("HR.Tables.Tables.MsStockRecript", "StockRec")
                        .WithMany("MsStockReceiptItemCard")
                        .HasForeignKey("StockRecId")
                        .HasConstraintName("FK_MS_StockReceiptItemCard_MS_StockRecript");

                    b.HasOne("HR.Tables.Tables.MsItemUnit", "Unit")
                        .WithMany("MsStockReceiptItemCard")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_MS_StockReceiptItemCard_Ms_ItemUnit");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsStockRecriptExpenses", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsStockRecript", "StockRec")
                        .WithMany("MsStockRecriptExpenses")
                        .HasForeignKey("StockRecId")
                        .HasConstraintName("FK_MS_StockRecriptExpenses_MS_StockRecript");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsStockTranItemCard", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("MsStockTranItemCard")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_MS_StockTranItemCard_MS_ItemCard");

                    b.HasOne("HR.Tables.Tables.MsStockTransferNote", "Tran")
                        .WithMany("MsStockTranItemCard")
                        .HasForeignKey("TranId")
                        .HasConstraintName("FK_MS_StockTranItemCard_MS_StockTransferNote");

                    b.HasOne("HR.Tables.Tables.MsItemUnit", "Unit")
                        .WithMany("MsStockTranItemCard")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_MS_StockTranItemCard_Ms_ItemUnit");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsStockTranItemCardReq", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsStockTransferNoteRequest", "TranReq")
                        .WithMany("MsStockTranItemCardReq")
                        .HasForeignKey("TranReqId")
                        .HasConstraintName("FK_Ms_StockTranItemCardReq_Ms_StockTransferNoteRequest");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsStores", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsBoxBank", "Box")
                        .WithMany("MsStores")
                        .HasForeignKey("BoxId")
                        .HasConstraintName("FK_MS_Stores_MS_BoxBank");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsTermsCostCenter", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsTerms", "Term")
                        .WithMany("MsTermsCostCenter")
                        .HasForeignKey("TermId")
                        .HasConstraintName("FK_Ms_TermsCostCenter_Ms_Terms");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsTermsDetails", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsTerms", "Term")
                        .WithMany("MsTermsDetails")
                        .HasForeignKey("TermId")
                        .HasConstraintName("FK_Ms_TermsDetails_Ms_Terms");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsVendImgs", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsVendor", "Vendor")
                        .WithMany("MsVendImgs")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_Ms_VendImgs_MS_Vendor");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsVendor", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsCurrency", "Currency")
                        .WithMany("MsVendor")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_MS_Vendor_MS_Currency");

                    b.HasOne("HR.Tables.Tables.MsVendorCategory", "VendorCat")
                        .WithMany("MsVendor")
                        .HasForeignKey("VendorCatId")
                        .HasConstraintName("FK_MS_Vendor_MS_VendorCategory");

                    b.HasOne("HR.Tables.Tables.MsVendorTypes", "VendorType")
                        .WithMany("MsVendor")
                        .HasForeignKey("VendorTypeId")
                        .HasConstraintName("FK_MS_Vendor_Ms_VendorTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsVendorBranches", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsVendor", "Vendor")
                        .WithMany("MsVendorBranches")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_Ms_VendorBranches_MS_Vendor");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsVendorContacts", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsVendor", "Vendor")
                        .WithMany("MsVendorContacts")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_Ms_VendorContacts_MS_Vendor");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsVendorUsers", b =>
                {
                    b.HasOne("HR.Tables.Tables.GUsers", "User")
                        .WithMany("MsVendorUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Ms_VendorUsers_G_Users");

                    b.HasOne("HR.Tables.Tables.MsVendor", "Vendor")
                        .WithMany("MsVendorUsers")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_Ms_VendorUsers_MS_Vendor");
                });

            modelBuilder.Entity("HR.Tables.Tables.MsWeightcardItems", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsWeightCard", "ScaleCard")
                        .WithMany("MsWeightcardItems")
                        .HasForeignKey("ScaleCardId")
                        .HasConstraintName("FK_Ms_WeightcardItems_Ms_WeightCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdAttributeValue", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdItemAttributes", "Attribut")
                        .WithMany("ProdAttributeValue")
                        .HasForeignKey("AttributId")
                        .HasConstraintName("FK_Prod_AttributeValue_Prod_ItemAttributes");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdBasicUnits", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdBasicUnits", "ParentUnitNavigation")
                        .WithMany("InverseParentUnitNavigation")
                        .HasForeignKey("ParentUnit")
                        .HasConstraintName("FK_Prod_BasicUnits_Prod_BasicUnits");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdBillOfMaterialItems", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdBillOfMaterial", "BillOfMaterial")
                        .WithMany("ProdBillOfMaterialItems")
                        .HasForeignKey("BillOfMaterialId")
                        .HasConstraintName("FK_Prod_BillOfMaterialItems_Prod_BillOfMaterial")
                        .IsRequired();
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdBillOfMaterialSecondaryItems", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdBillOfMaterial", "BillOfMaterial")
                        .WithMany("ProdBillOfMaterialSecondaryItems")
                        .HasForeignKey("BillOfMaterialId")
                        .HasConstraintName("FK_Prod_BillOfMaterialSecondaryItems_Prod_BillOfMaterial")
                        .IsRequired();
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdEquipProfile", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdEquipments", "Equip")
                        .WithMany("ProdEquipProfile")
                        .HasForeignKey("EquipId")
                        .HasConstraintName("FK_Prod_EquipProfile_Prod_Equipments");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdItemAttributesBatchesDetails", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdItemAttributesBatche", "ItemAtrribBatch")
                        .WithMany("ProdItemAttributesBatchesDetails")
                        .HasForeignKey("ItemAtrribBatchId")
                        .HasConstraintName("FK_Prod_ItemAttributesBatchesDetails_Prod_ItemAttributesBatche")
                        .IsRequired();
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdItemAttributsJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdItemAttributes", "Attribut")
                        .WithMany("ProdItemAttributsJoin")
                        .HasForeignKey("AttributId")
                        .HasConstraintName("FK_Prod_ItemAttributsJoin_Prod_ItemAttributes");

                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("ProdItemAttributsJoin")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Prod_ItemAttributsJoin_MS_ItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdItemBatchPartition", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdItemAttributesBatche", "ItemAtrribBatch")
                        .WithMany("ProdItemBatchPartition")
                        .HasForeignKey("ItemAtrribBatchId")
                        .HasConstraintName("FK_Prod_ItemBatchPartition_Prod_ItemAttributesBatche");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdItemcardExpenses", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("ProdItemcardExpenses")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Prod_ItemcardExpenses_MS_ItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderEmpCostDocDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdJobOrderEmpCostDoc", "JorderEmpDoc")
                        .WithMany("ProdJobOrderEmpCostDocDetail")
                        .HasForeignKey("JorderEmpDocId")
                        .HasConstraintName("FK_Prod_JobOrderEmpCostDocDetail_Prod_JobOrderEmpCostDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderEquipCostDocDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdJobOrderEquipCostDoc", "JorderEquipDoc")
                        .WithMany("ProdJobOrderEquipCostDocDetail")
                        .HasForeignKey("JorderEquipDocId")
                        .HasConstraintName("FK_Prod_JobOrderEquipCostDocDetail_Prod_JobOrderEquipCostDoc");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderEquipment", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderEquipment")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderEquipment_Prod_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderExpenses", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderExpenses")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderExpenses_Prod_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderGoStock", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderGoStock")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderGoStock_Prod_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderJobs", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderJobs")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderJobs_Prod_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderMaterials", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderMaterials")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderMaterials_Prod_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderProducts", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdItemAttributesBatche", "ItemAtrribBatch")
                        .WithMany("ProdJobOrderProducts")
                        .HasForeignKey("ItemAtrribBatchId")
                        .HasConstraintName("FK_Prod_JobOrderProducts_Prod_ItemAttributesBatche");

                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("ProdJobOrderProducts")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Prod_JobOrderProducts_MS_ItemCard");

                    b.HasOne("HR.Tables.Tables.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderProducts")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderProducts_Prod_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderPurchaseInvoices", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderPurchaseInvoices")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderPurchaseInvoices_Prod_JobOrder");

                    b.HasOne("HR.Tables.Tables.MsPurchasInvoice", "PurInv")
                        .WithMany("ProdJobOrderPurchaseInvoices")
                        .HasForeignKey("PurInvId")
                        .HasConstraintName("FK_Prod_JobOrderPurchaseInvoices_MS_PurchasInvoice");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderScrap", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderScrap")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderScrap_Prod_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderServices", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderServices")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderServices_Prod_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderTasks", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderTasks")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderTasks_Prod_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJobOrderWorkFlow", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderWorkFlow")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderWorkFlow_Prod_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJoinTaskEquipments", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdTasks", "Task")
                        .WithMany("ProdJoinTaskEquipments")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK_Prod_JoinTaskEquipments_Prod_Tasks");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdJoinTaskJob", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdTasks", "Task")
                        .WithMany("ProdJoinTaskJob")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK_Prod_JoinTaskJob_Prod_Tasks");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdProductionLineDetails", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdProductionLine", "ProLine")
                        .WithMany("ProdProductionLineDetails")
                        .HasForeignKey("ProLineId")
                        .HasConstraintName("FK_Prod_ProductionLineDetails_Prod_ProductionLine");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdProductionOrderDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdProductionOrder", "ProductionOrder")
                        .WithMany("ProdProductionOrderDetail")
                        .HasForeignKey("ProductionOrderId")
                        .HasConstraintName("FK_Prod_ProductionOrderDetail_Prod_ProductionOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdRecipeDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdRecipe", "Recipe")
                        .WithMany("ProdRecipeDetail")
                        .HasForeignKey("RecipeId")
                        .HasConstraintName("FK_Prod_RecipeDetail_Prod_Recipe");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdWorkOrderEquipment", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdWorkOrder", "WorkOrder")
                        .WithMany("ProdWorkOrderEquipment")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("FK_Prod_WorkOrderEquipment_Prod_WorkOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdWorkOrderExpenses", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdWorkOrder", "WorkOrder")
                        .WithMany("ProdWorkOrderExpenses")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("FK_Prod_WorkOrderExpenses_Prod_WorkOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdWorkOrderItemRecQualityDocs", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdWorkOrder", "WorkOrder")
                        .WithMany("ProdWorkOrderItemRecQualityDocs")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("FK_Prod_WorkOrderItemRecQualityDocs_Prod_WorkOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdWorkOrderMaterials", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdWorkOrder", "WorkOrder")
                        .WithMany("ProdWorkOrderMaterials")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("FK_Prod_WorkOrderMaterials_Prod_WorkOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdWorkOrderProdItems", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdWorkOrder", "WorkOrder")
                        .WithMany("ProdWorkOrderProdItems")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("FK_Prod_WorkOrderProdItems_Prod_WorkOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProdWorkOrderServices", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProdWorkOrder", "WorkOrder")
                        .WithMany("ProdWorkOrderServices")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("FK_Prod_WorkOrderServices_Prod_WorkOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjAccounts", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjects", "Project")
                        .WithMany("ProjAccounts")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_Accounts_Proj_Projects");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjEstimateItems", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjects", "Project")
                        .WithMany("ProjEstimateItems")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_EstimateItems_Proj_Projects");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjExpenses", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjects", "Project")
                        .WithMany("ProjExpenses")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_Expenses_Proj_Projects");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjFund", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjects", "Project")
                        .WithMany("ProjFund")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_Fund_Proj_Projects");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjDocuments", b =>
                {
                    b.HasOne("HR.Tables.Tables.CodOwnershipBonds", "OwnShipBond")
                        .WithMany("ProjProjDocuments")
                        .HasForeignKey("OwnShipBondId")
                        .HasConstraintName("FK_Proj_ProjDocuments_Cod_OwnershipBonds");

                    b.HasOne("HR.Tables.Tables.ProjProjects", "Project")
                        .WithMany("ProjProjDocuments")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjDocuments_Proj_Projects");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjExploitJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.CodBuildingExploitation", "BuildExploit")
                        .WithMany("ProjProjExploitJoin")
                        .HasForeignKey("BuildExploitId")
                        .HasConstraintName("FK_Proj_ProjExploitJoin_Cod_BuildingExploitation");

                    b.HasOne("HR.Tables.Tables.ProjProjects", "Project")
                        .WithMany("ProjProjExploitJoin")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjExploitJoin_Proj_Projects");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjInsurance", b =>
                {
                    b.HasOne("HR.Tables.Tables.CodBuildingInsuranceStatus", "BuildInsurStat")
                        .WithMany("ProjProjInsurance")
                        .HasForeignKey("BuildInsurStatId")
                        .HasConstraintName("FK_Proj_ProjInsurance_Cod_BuildingInsuranceStatus");

                    b.HasOne("HR.Tables.Tables.ProjProjects", "Project")
                        .WithMany("ProjProjInsurance")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjInsurance_Proj_Projects");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjInsuranceUnit", b =>
                {
                    b.HasOne("HR.Tables.Tables.CodInsuranceCases", "InsurCase")
                        .WithMany("ProjProjInsuranceUnit")
                        .HasForeignKey("InsurCaseId")
                        .HasConstraintName("FK_Proj_ProjInsuranceUnit_Cod_InsuranceCases");

                    b.HasOne("HR.Tables.Tables.ProjProjUnits", "ProjUnit")
                        .WithMany("ProjProjInsuranceUnit")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjInsuranceUnit_Proj_ProjUnits");

                    b.HasOne("HR.Tables.Tables.CodUnitInsuranceStatus", "UnitInsurstat")
                        .WithMany("ProjProjInsuranceUnit")
                        .HasForeignKey("UnitInsurstatId")
                        .HasConstraintName("FK_Proj_ProjInsuranceUnit_Cod_UnitInsuranceStatus");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjItemEmpTaskJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjectItemEmpJoin", "ProjItemEmp")
                        .WithMany("ProjProjItemEmpTaskJoin")
                        .HasForeignKey("ProjItemEmpId")
                        .HasConstraintName("FK_Proj_ProjItemEmpTaskJoin_Proj_ProjectItemEmpJoin");

                    b.HasOne("HR.Tables.Tables.ProdTasks", "Task")
                        .WithMany("ProjProjItemEmpTaskJoin")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK_Proj_ProjItemEmpTaskJoin_Prod_Tasks");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjOccupTypeJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.CodBuildOccupTypes", "BuildOccupType")
                        .WithMany("ProjProjOccupTypeJoin")
                        .HasForeignKey("BuildOccupTypeId")
                        .HasConstraintName("FK_Proj_ProjOccupTypeJoin_Cod_BuildOccupTypes");

                    b.HasOne("HR.Tables.Tables.ProjProjects", "Project")
                        .WithMany("ProjProjOccupTypeJoin")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjOccupTypeJoin_Proj_Projects");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjOwnerJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjects", "Project")
                        .WithMany("ProjProjOwnerJoin")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjOwnerJoin_Proj_Projects");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjParkingJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.CodParkings", "Parking")
                        .WithMany("ProjProjParkingJoin")
                        .HasForeignKey("ParkingId")
                        .HasConstraintName("FK_Proj_ProjParkingJoin_Cod_Parkings");

                    b.HasOne("HR.Tables.Tables.ProjProjects", "Project")
                        .WithMany("ProjProjParkingJoin")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjParkingJoin_Proj_Projects");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjPermitActivityJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.CodBuildPermitActiv", "BuildPermitActivity")
                        .WithMany("ProjProjPermitActivityJoin")
                        .HasForeignKey("BuildPermitActivityId")
                        .HasConstraintName("FK_Proj_ProjPermitActivityJoin_Cod_BuildPermitActiv");

                    b.HasOne("HR.Tables.Tables.ProjProjects", "Project")
                        .WithMany("ProjProjPermitActivityJoin")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjPermitActivityJoin_Proj_Projects");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjPerspectiveJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.CodBuildPerspective", "BuildPerspective")
                        .WithMany("ProjProjPerspectiveJoin")
                        .HasForeignKey("BuildPerspectiveId")
                        .HasConstraintName("FK_Proj_ProjPerspectiveJoin_Cod_BuildPerspective");

                    b.HasOne("HR.Tables.Tables.ProjProjects", "Project")
                        .WithMany("ProjProjPerspectiveJoin")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjPerspectiveJoin_Proj_Projects2");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjPicture", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjects", "Project")
                        .WithMany("ProjProjPicture")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjPicture_Proj_Projects");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitDocument", b =>
                {
                    b.HasOne("HR.Tables.Tables.CodOwnershipBonds", "OwnShipBond")
                        .WithMany("ProjProjUnitDocument")
                        .HasForeignKey("OwnShipBondId")
                        .HasConstraintName("FK_Proj_ProjUnitDocument_Cod_OwnershipBonds");

                    b.HasOne("HR.Tables.Tables.ProjProjUnits", "ProjUnit")
                        .WithMany("ProjProjUnitDocument")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitDocument_Proj_ProjUnits");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitExploitJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjUnits", "ProjUnit")
                        .WithMany("ProjProjUnitExploitJoin")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitExploitJoin_Proj_ProjUnits");

                    b.HasOne("HR.Tables.Tables.CodUnitExploitation", "UnitExploit")
                        .WithMany("ProjProjUnitExploitJoin")
                        .HasForeignKey("UnitExploitId")
                        .HasConstraintName("FK_Proj_ProjUnitExploitJoin_Cod_UnitExploitation");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitInstallTemp", b =>
                {
                    b.HasOne("HR.Tables.Tables.CodInstallmentTemps", "InstallTemp")
                        .WithMany("ProjProjUnitInstallTemp")
                        .HasForeignKey("InstallTempId")
                        .HasConstraintName("FK_Proj_ProjUnitInstallTemp_Cod_InstallmentTemps");

                    b.HasOne("HR.Tables.Tables.ProjProjUnits", "ProjUnit")
                        .WithMany("ProjProjUnitInstallTemp")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitInstallTemp_Proj_ProjUnits");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitOccupTypeJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjUnits", "ProjUnit")
                        .WithMany("ProjProjUnitOccupTypeJoin")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitOccupTypeJoin_Proj_ProjUnits");

                    b.HasOne("HR.Tables.Tables.CodUnitOccupancyTypes", "UnitOccuType")
                        .WithMany("ProjProjUnitOccupTypeJoin")
                        .HasForeignKey("UnitOccuTypeId")
                        .HasConstraintName("FK_Proj_ProjUnitOccupTypeJoin_Cod_UnitOccupancyTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitOwnerJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjUnits", "ProjUnit")
                        .WithMany("ProjProjUnitOwnerJoin")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitOwnerJoin_Proj_ProjUnits");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitPermitActivityJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjUnits", "ProjUnit")
                        .WithMany("ProjProjUnitPermitActivityJoin")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitPermitActivityJoin_Proj_ProjUnits");

                    b.HasOne("HR.Tables.Tables.CodUnitPermittedActivity", "UnitPermitActiv")
                        .WithMany("ProjProjUnitPermitActivityJoin")
                        .HasForeignKey("UnitPermitActivId")
                        .HasConstraintName("FK_Proj_ProjUnitPermitActivityJoin_Cod_UnitPermittedActivity");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitPerspectiveJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjUnits", "ProjUnit")
                        .WithMany("ProjProjUnitPerspectiveJoin")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitPerspectiveJoin_Proj_ProjUnits");

                    b.HasOne("HR.Tables.Tables.CodUnitPerspective", "UnitPerspective")
                        .WithMany("ProjProjUnitPerspectiveJoin")
                        .HasForeignKey("UnitPerspectiveId")
                        .HasConstraintName("FK_Proj_ProjUnitPerspectiveJoin_Cod_UnitPerspective");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitPicture", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjUnits", "ProjUnit")
                        .WithMany("ProjProjUnitPicture")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitPicture_Proj_ProjUnits");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitService", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjUnits", "ProjUnit")
                        .WithMany("ProjProjUnitService")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitService_Proj_ProjUnits");

                    b.HasOne("HR.Tables.Tables.ProjUnitReservation", "Reserv")
                        .WithMany("ProjProjUnitService")
                        .HasForeignKey("ReservId")
                        .HasConstraintName("FK_Proj_ProjUnitService_Proj_UnitReservation");

                    b.HasOne("HR.Tables.Tables.CodUnitServices", "UnitServ")
                        .WithMany("ProjProjUnitService")
                        .HasForeignKey("UnitServId")
                        .HasConstraintName("FK_Proj_ProjUnitService_Cod_UnitServices");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnitSubUnits", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjUnits", "ProjUnit")
                        .WithMany("ProjProjUnitSubUnits")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitSubUnits_Proj_ProjUnits")
                        .IsRequired();

                    b.HasOne("HR.Tables.Tables.CodeSubUnitTypes", "SubUnittype")
                        .WithMany("ProjProjUnitSubUnits")
                        .HasForeignKey("SubUnittypeId")
                        .HasConstraintName("FK_Proj_ProjUnitSubUnits_Code_SubUnitTypes")
                        .IsRequired();
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjUnits", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjects", "Project")
                        .WithMany("ProjProjUnits")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjUnits_Proj_Projects");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjectItemEmpJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrEmployees", "Emp")
                        .WithMany("ProjProjectItemEmpJoin")
                        .HasForeignKey("EmpId")
                        .HasConstraintName("FK_Proj_ProjectItemEmpJoin_Hr_Employees");

                    b.HasOne("HR.Tables.Tables.ProjProjectItemsJoin", "ProjItemsJoin")
                        .WithMany("ProjProjectItemEmpJoin")
                        .HasForeignKey("ProjItemsJoinId")
                        .HasConstraintName("FK_Proj_ProjectItemEmpJoin_Proj_ProjectItemsJoin");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjectItemsJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjects", "Project")
                        .WithMany("ProjProjectItemsJoin")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjectItemsJoin_Proj_Projects");

                    b.HasOne("HR.Tables.Tables.ProjProjectItems", "ProjectItems")
                        .WithMany("ProjProjectItemsJoin")
                        .HasForeignKey("ProjectItemsId")
                        .HasConstraintName("FK_Proj_ProjectItemsJoin_Proj_ProjectItems");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjProjectItemsVendors", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjectItems", "ProjectItems")
                        .WithMany("ProjProjectItemsVendors")
                        .HasForeignKey("ProjectItemsId")
                        .HasConstraintName("FK_Proj_ProjectItemsVendors_Proj_ProjectItems");

                    b.HasOne("HR.Tables.Tables.MsVendor", "Vendor")
                        .WithMany("ProjProjectItemsVendors")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_Proj_ProjectItemsVendors_MS_Vendor");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjRealItems", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjProjects", "Project")
                        .WithMany("ProjRealItems")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_RealItems_Proj_Projects");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjReservInstallments", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjUnitReservation", "Reserv")
                        .WithMany("ProjReservInstallments")
                        .HasForeignKey("ReservId")
                        .HasConstraintName("FK_Proj_ReservInstallments_Proj_UnitReservation1");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjReserveUnitDocuments", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjUnitReservation", "Reserv")
                        .WithMany("ProjReserveUnitDocuments")
                        .HasForeignKey("ReservId")
                        .HasConstraintName("FK_Proj_ReserveUnitDocuments_Proj_UnitReservation");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjReserveUnitOwners", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjUnitReservation", "Reserv")
                        .WithMany("ProjReserveUnitOwners")
                        .HasForeignKey("ReservId")
                        .HasConstraintName("FK_Proj_ReserveUnitOwners_Proj_UnitReservation");
                });

            modelBuilder.Entity("HR.Tables.Tables.ProjReserveUnitSellers", b =>
                {
                    b.HasOne("HR.Tables.Tables.ProjUnitReservation", "Reserv")
                        .WithMany("ProjReserveUnitSellers")
                        .HasForeignKey("ReservId")
                        .HasConstraintName("FK_Proj_ReserveUnitSellers_Proj_UnitReservation");
                });

            modelBuilder.Entity("HR.Tables.Tables.QualityItemDeliverDetails", b =>
                {
                    b.HasOne("HR.Tables.Tables.QualityItemDelivery", "ItemDeliver")
                        .WithMany("QualityItemDeliverDetails")
                        .HasForeignKey("ItemDeliverId")
                        .HasConstraintName("FK_Quality_ItemDeliverDetails_Quality_ItemDelivery");
                });

            modelBuilder.Entity("HR.Tables.Tables.QualityItemDeliveryPackages", b =>
                {
                    b.HasOne("HR.Tables.Tables.QualityItemDelivery", "ItemDeliver")
                        .WithMany("QualityItemDeliveryPackages")
                        .HasForeignKey("ItemDeliverId")
                        .HasConstraintName("FK_Quality_ItemDeliveryPackages_Quality_ItemDelivery");
                });

            modelBuilder.Entity("HR.Tables.Tables.QualityItemRecCheckDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.QualityItemRecCheck", "ItemRecQuality")
                        .WithMany("QualityItemRecCheckDetail")
                        .HasForeignKey("ItemRecQualityId")
                        .HasConstraintName("FK_Quality_ItemRecCheckDetail_Quality_ItemRecCheck");
                });

            modelBuilder.Entity("HR.Tables.Tables.QualityItemRecPackages", b =>
                {
                    b.HasOne("HR.Tables.Tables.QualityItemRecCheck", "ItemRecQuality")
                        .WithMany("QualityItemRecPackages")
                        .HasForeignKey("ItemRecQualityId")
                        .HasConstraintName("FK_Quality_ItemRecPackages_Quality_ItemRecCheck");

                    b.HasOne("HR.Tables.Tables.ProdWorkOrder", "WorkOrder")
                        .WithMany("QualityItemRecPackages")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("FK_Quality_ItemRecPackages_Prod_WorkOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.QualityItemRecieveDetails", b =>
                {
                    b.HasOne("HR.Tables.Tables.QualityItemRecieve", "ProdItemRec")
                        .WithMany("QualityItemRecieveDetails")
                        .HasForeignKey("ProdItemRecId")
                        .HasConstraintName("FK_Prod_ItemRecieveDetails_Prod_ItemRecieve");
                });

            modelBuilder.Entity("HR.Tables.Tables.RepairJobOrderComments", b =>
                {
                    b.HasOne("HR.Tables.Tables.RepairJobOrder", "Repair")
                        .WithMany("RepairJobOrderComments")
                        .HasForeignKey("RepairId")
                        .HasConstraintName("FK_Repair_JobOrderComments_Repair_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.RepairJobOrderEmps", b =>
                {
                    b.HasOne("HR.Tables.Tables.RepairJobOrder", "Repair")
                        .WithMany("RepairJobOrderEmps")
                        .HasForeignKey("RepairId")
                        .HasConstraintName("FK_Repair_JobOrderEmps_Repair_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.RepairJobOrderItems", b =>
                {
                    b.HasOne("HR.Tables.Tables.RepairJobOrder", "Repair")
                        .WithMany("RepairJobOrderItems")
                        .HasForeignKey("RepairId")
                        .HasConstraintName("FK_Repair_JobOrderItems_Repair_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.RepairJobOrderScrapItems", b =>
                {
                    b.HasOne("HR.Tables.Tables.RepairJobOrder", "Repair")
                        .WithMany("RepairJobOrderScrapItems")
                        .HasForeignKey("RepairId")
                        .HasConstraintName("FK_Repair_JobOrderScrapItems_Repair_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.RepairJobOrederExpenses", b =>
                {
                    b.HasOne("HR.Tables.Tables.RepairJobOrder", "Repair")
                        .WithMany("RepairJobOrederExpenses")
                        .HasForeignKey("RepairId")
                        .HasConstraintName("FK_Repair_JobOrederExpenses_Repair_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrAccomodation", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrHotels", "Hotel")
                        .WithMany("SrAccomodation")
                        .HasForeignKey("HotelId")
                        .HasConstraintName("FK_Sr_Accomodation_Sr_Hotels");

                    b.HasOne("HR.Tables.Tables.SrTrips", "Trip")
                        .WithMany("SrAccomodation")
                        .HasForeignKey("TripId")
                        .HasConstraintName("FK_Sr_Accomodation_Sr_Trips");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrEmpServicTypes", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrEmployees", "Emp")
                        .WithMany("SrEmpServicTypes")
                        .HasForeignKey("EmpId")
                        .HasConstraintName("FK_Sr_EmpServicTypes_Hr_Employees");

                    b.HasOne("HR.Tables.Tables.SrServiceTypes", "SrTyp")
                        .WithMany("SrEmpServicTypes")
                        .HasForeignKey("SrTypId")
                        .HasConstraintName("FK_Sr_EmpServicTypes_Sr_ServiceTypes");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrExtension", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsgaCity", "City")
                        .WithMany("SrExtension")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Sr_Extension_MSGA_City");

                    b.HasOne("HR.Tables.Tables.SrHotels", "Hotel")
                        .WithMany("SrExtension")
                        .HasForeignKey("HotelId")
                        .HasConstraintName("FK_Sr_Extension_Sr_Hotels");

                    b.HasOne("HR.Tables.Tables.SrTrips", "Trip")
                        .WithMany("SrExtension")
                        .HasForeignKey("TripId")
                        .HasConstraintName("FK_Sr_Extension_Sr_Trips");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrFlight", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrTrips", "Trip")
                        .WithMany("SrFlight")
                        .HasForeignKey("TripId")
                        .HasConstraintName("FK_Sr_Flight_Sr_Trips");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrHotels", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsgaCity", "City")
                        .WithMany("SrHotels")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Sr_Hotels_MSGA_City");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrJobAdditionalCost", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrJobOrder", "Jorder")
                        .WithMany("SrJobAdditionalCost")
                        .HasForeignKey("JorderId")
                        .HasConstraintName("FK_Sr_JobAdditionalCost_Sr_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrJobComments", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrJobOrder", "Jorder")
                        .WithMany("SrJobComments")
                        .HasForeignKey("JorderId")
                        .HasConstraintName("FK_Sr_JobComments_Sr_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrJobExtrnalExpens", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrJobOrder", "Jorder")
                        .WithMany("SrJobExtrnalExpens")
                        .HasForeignKey("JorderId")
                        .HasConstraintName("FK_Sr_JobExtrnalExpens_Sr_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrJobFiles", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrJobOrder", "Jorder")
                        .WithMany("SrJobFiles")
                        .HasForeignKey("JorderId")
                        .HasConstraintName("FK_Sr_JobFiles_Sr_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrJobOrder", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrReciption", "Reciption")
                        .WithMany("SrJobOrder")
                        .HasForeignKey("ReciptionId")
                        .HasConstraintName("FK_Sr_JobOrder_Sr_Reciption");

                    b.HasOne("HR.Tables.Tables.SrServiceTypes", "SrTyp")
                        .WithMany("SrJobOrder")
                        .HasForeignKey("SrTypId")
                        .HasConstraintName("FK_Sr_JobOrder_Sr_ServiceTypes");

                    b.HasOne("HR.Tables.Tables.SrVehicles", "Vehicle")
                        .WithMany("SrJobOrder")
                        .HasForeignKey("VehicleId")
                        .HasConstraintName("FK_Sr_JobOrder_Sr_Vehicles");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrJobSparts", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrJobOrder", "Jorder")
                        .WithMany("SrJobSparts")
                        .HasForeignKey("JorderId")
                        .HasConstraintName("FK_Sr_JobSparts_Sr_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrJobSwages", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrJobOrder", "Jorder")
                        .WithMany("SrJobSwages")
                        .HasForeignKey("JorderId")
                        .HasConstraintName("FK_Sr_JobSWages_Sr_JobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrReceptionImages", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrReciption", "Reciption")
                        .WithMany("SrReceptionImages")
                        .HasForeignKey("ReciptionId")
                        .HasConstraintName("FK_Sr_ReceptionImages_Sr_Reciption");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrReciptionDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrComplaints", "Com")
                        .WithMany("SrReciptionDetail")
                        .HasForeignKey("ComId")
                        .HasConstraintName("FK_Sr_ReciptionDetail_Sr_Complaints");

                    b.HasOne("HR.Tables.Tables.SrReciption", "Reciption")
                        .WithMany("SrReciptionDetail")
                        .HasForeignKey("ReciptionId")
                        .HasConstraintName("FK_Sr_ReciptionDetail_Sr_Reciption");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrTaskEmp", b =>
                {
                    b.HasOne("HR.Tables.Tables.HrEmployees", "Emp")
                        .WithMany("SrTaskEmp")
                        .HasForeignKey("EmpId")
                        .HasConstraintName("FK_Sr_TaskEmp_Hr_Employees");

                    b.HasOne("HR.Tables.Tables.SrTasks", "Task")
                        .WithMany("SrTaskEmp")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK_Sr_TaskEmp_Sr_Tasks");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrTaskItem", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("SrTaskItem")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Sr_TaskItem_MS_ItemCard");

                    b.HasOne("HR.Tables.Tables.SrTasks", "Task")
                        .WithMany("SrTaskItem")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK_Sr_TaskItem_Sr_Tasks");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrTasks", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrComplaints", "Com")
                        .WithMany("SrTasks")
                        .HasForeignKey("ComId")
                        .HasConstraintName("FK_Sr_Tasks_Sr_Complaints");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrTrafficLinePriceList", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrContainerTypes", "ContainerType")
                        .WithMany("SrTrafficLinePriceList")
                        .HasForeignKey("ContainerTypeId")
                        .HasConstraintName("FK_Sr_TrafficLinePriceList_Sr_ContainerTypes");

                    b.HasOne("HR.Tables.Tables.SrTrafficLines", "TrafficLine")
                        .WithMany("SrTrafficLinePriceList")
                        .HasForeignKey("TrafficLineId")
                        .HasConstraintName("FK_Sr_TrafficLinePriceList_Sr_TrafficLines");

                    b.HasOne("HR.Tables.Tables.SrVehicles", "Vehicle")
                        .WithMany("SrTrafficLinePriceList")
                        .HasForeignKey("VehicleId")
                        .HasConstraintName("FK_Sr_TrafficLinePriceList_Sr_Vehicles");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrTransportation", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrTrips", "Trip")
                        .WithMany("SrTransportation")
                        .HasForeignKey("TripId")
                        .HasConstraintName("FK_Sr_Transportation_Sr_Trips");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrTripAccomDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrAccomodation", "Accomodation")
                        .WithMany("SrTripAccomDetail")
                        .HasForeignKey("AccomodationId")
                        .HasConstraintName("FK_Sr_TripAccomDetail_Sr_Accomodation");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrTripProgramJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrPrograms", "Program")
                        .WithMany("SrTripProgramJoin")
                        .HasForeignKey("ProgramId")
                        .HasConstraintName("FK_Sr_TripProgramJoin_Sr_Programs");

                    b.HasOne("HR.Tables.Tables.SrTrips", "Trip")
                        .WithMany("SrTripProgramJoin")
                        .HasForeignKey("TripId")
                        .HasConstraintName("FK_Sr_TripProgramJoin_Sr_Trips");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicleItemCard", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsItemCard", "ItemCard")
                        .WithMany("SrVehicleItemCard")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Sr_VehicleItemCard_MS_ItemCard");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicleJobOrder", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrVehicles", "Vehicle")
                        .WithMany("SrVehicleJobOrder")
                        .HasForeignKey("VehicleId")
                        .HasConstraintName("FK_Sr_VehicleJobOrder_Sr_Vehicles");

                    b.HasOne("HR.Tables.Tables.SrVheicleJobOrderType", "VorderType")
                        .WithMany("SrVehicleJobOrder")
                        .HasForeignKey("VorderTypeId")
                        .HasConstraintName("FK_Sr_VehicleJobOrder_Sr_VheicleJobOrderType");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicleJobOrderDetail", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrDrivers", "Driver")
                        .WithMany("SrVehicleJobOrderDetail")
                        .HasForeignKey("DriverId")
                        .HasConstraintName("FK_Sr_VehicleJobOrderDetail_Sr_Drivers");

                    b.HasOne("HR.Tables.Tables.SrVehicleJobOrder", "Vjorder")
                        .WithMany("SrVehicleJobOrderDetail")
                        .HasForeignKey("VjorderId")
                        .HasConstraintName("FK_Sr_VehicleJobOrderDetail_Sr_VehicleJobOrder");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicleRentPayJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsPaymentNote", "Pay")
                        .WithMany("SrVehicleRentPayJoin")
                        .HasForeignKey("PayId")
                        .HasConstraintName("FK_Sr_VehicleRentPayJoin_MS_PaymentNote");

                    b.HasOne("HR.Tables.Tables.SrVehicleRenalContract", "VrentContract")
                        .WithMany("SrVehicleRentPayJoin")
                        .HasForeignKey("VrentContractId")
                        .HasConstraintName("FK_Sr_VehicleRentPayJoin_Sr_VehicleRenalContract");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicleRentPurchJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsPurchasInvoice", "PurInv")
                        .WithMany("SrVehicleRentPurchJoin")
                        .HasForeignKey("PurInvId")
                        .HasConstraintName("FK_Sr_VehicleRentPurchJoin_MS_PurchasInvoice");

                    b.HasOne("HR.Tables.Tables.SrVehicleRenalContract", "VrentContract")
                        .WithMany("SrVehicleRentPurchJoin")
                        .HasForeignKey("VrentContractId")
                        .HasConstraintName("FK_Sr_VehicleRentPurchJoin_Sr_VehicleRenalContract");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicleRentRecJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsReceiptNote", "Rect")
                        .WithMany("SrVehicleRentRecJoin")
                        .HasForeignKey("RectId")
                        .HasConstraintName("FK_Sr_VehicleRentRecJoin_Ms_ReceiptNote");

                    b.HasOne("HR.Tables.Tables.SrVehicleRenalContract", "VrentContract")
                        .WithMany("SrVehicleRentRecJoin")
                        .HasForeignKey("VrentContractId")
                        .HasConstraintName("FK_Sr_VehicleRentRecJoin_Sr_VehicleRenalContract");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicleRentSalesInvJoin", b =>
                {
                    b.HasOne("HR.Tables.Tables.MsSalesInvoice", "Inv")
                        .WithMany("SrVehicleRentSalesInvJoin")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Sr_VehicleRentSalesInvJoin_Ms_SalesInvoice");

                    b.HasOne("HR.Tables.Tables.SrVehicleRenalContract", "VrentContract")
                        .WithMany("SrVehicleRentSalesInvJoin")
                        .HasForeignKey("VrentContractId")
                        .HasConstraintName("FK_Sr_VehicleRentSalesInvJoin_Sr_VehicleRenalContract");
                });

            modelBuilder.Entity("HR.Tables.Tables.SrVehicles", b =>
                {
                    b.HasOne("HR.Tables.Tables.SrGarage", "Garage")
                        .WithMany("SrVehicles")
                        .HasForeignKey("GarageId")
                        .HasConstraintName("FK_Sr_Vehicles_Sr_Garage");

                    b.HasOne("HR.Tables.Tables.SrVehicleShapes", "VehicleShape")
                        .WithMany("SrVehicles")
                        .HasForeignKey("VehicleShapeId")
                        .HasConstraintName("FK_Sr_Vehicles_Sr_VehicleShapes");

                    b.HasOne("HR.Tables.Tables.SrVehicleTypes", "VehicleTyp")
                        .WithMany("SrVehicles")
                        .HasForeignKey("VehicleTypId")
                        .HasConstraintName("FK_Sr_Vehicles_Sr_VehicleTypes");

                    b.HasOne("HR.Tables.Tables.SrWarranty", "W")
                        .WithMany("SrVehicles")
                        .HasForeignKey("Wid")
                        .HasConstraintName("FK_Sr_Vehicles_Sr_Warranty");
                });

            modelBuilder.Entity("HR.Tables.Tables.SysAnalyticalCodeUpdates", b =>
                {
                    b.HasOne("HR.Tables.Tables.SysAnalyticalCodes", "A")
                        .WithMany("SysAnalyticalCodeUpdates")
                        .HasForeignKey("Aid")
                        .HasConstraintName("FK_sys_AnalyticalCodeUpdates_Sys_AnalyticalCodes");
                });

            modelBuilder.Entity("HR.Tables.Tables.SysFinancialIntervals", b =>
                {
                    b.HasOne("HR.Tables.Tables.SysFinancialYears", "FinancialYear")
                        .WithMany("SysFinancialIntervals")
                        .HasForeignKey("FinancialYearId")
                        .HasConstraintName("FK_Sys_FinancialIntervals_Sys_FinancialYears");
                });

            modelBuilder.Entity("HR.Tables.Tables.TrOpenningBalanceDetails", b =>
                {
                    b.HasOne("HR.Tables.Tables.TrOpenningBalance", "TrOpenningBalance")
                        .WithMany("TrOpenningBalanceDetails")
                        .HasForeignKey("TrOpenningBalanceId")
                        .HasConstraintName("FK_Tr_OpenningBalanceDetails_Tr_OpenningBalance");
                });
#pragma warning restore 612, 618
        }
    }
}
