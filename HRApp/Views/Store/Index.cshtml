

<div class="row">
    <div class="col-12">
        <div class="card">

            <div class="card-body">
                <div class="row" style="margin-bottom: 5px;">
                    <div class="col-md-3">
                        <h4 class="card-title">إضافة   فرع   </h4>
                    </div>
                    <div class="col-md-6 d-flex justify-content-center text-center"  >
                        <nav aria-label="Page navigation example">
                            <ul class="pagination">
                                <li class="page-item">
                                    <a class="page-link" href="#" aria-label="Previous" onclick="Navgate(counts, false)">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link" href="#" aria-label="First" onclick="Navgate(1,true)">
                                        <span aria-hidden="true"><i style="font-size: 8px;" class="fa fa-chevron-right"></i></span>
                                    </a>
                                </li>

                                <li class="page-item"><a class="page-link" href="" id="pageNumber"></a></li>

                                <li class="page-item">
                                    <a class="page-link" href="#" aria-label="Last" onclick="Navgate(-1,true)">
                                        <span aria-hidden="true"><i style="font-size: 9px;" class="fa fa-chevron-left"></i></span>
                                    </a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link" href="#" aria-label="Next" onclick="Navgate(1, false)">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>

                    <div class="col-md-3">

                        <div class="d-flex flex-wrap gap-2 float-end">
                          
                            <button class="btn btn-success btn-sm" type="button" onclick="funcCancel()">جديد</button>
                            <button type="button" onclick="Save()" class="btn btn-primary waves-effect waves-light">حفظ </button>
                            <button class="btn btn-danger btn-sm" type="button" onclick="funPublicDelete()">حذف</button>
                        </div>
                    </div>
                </div>

                <form id="frmCreate" onsubmit="return false;">
                    <div class="row">
                        <input type="hidden" name="StoreId" />
                        <div class="col-md-4">
                            <div class="mb-3 custom-form">
                                <label for="manufacturername">كود الفرع </label>
                                <input id="manufacturername" name="StoreCode" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3 custom-form">
                                <label for="productname"> إسم الفرع</label>
                                <input id="productname" name="StoreDescA" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3 custom-form">
                                <label for="productname">  إسم الفرع إنجليزي</label>
                                <input id="productname" name="StoreDescE" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="mb-3 custom-form">
                                <label for="manufacturerbrand">Lat</label>
                                <input id="manufacturerbrand" name="Lat" type="text" class="form-control" onkeypress=" return isNumberWithDotOnly(event)">
                            </div>
                        </div>

                        <div class="col-md-5">
                            <div class="mb-3 custom-form">
                                <label for="price">Lng</label>
                                <input id="price" name="Lng" type="text" class="form-control" onkeypress=" return isNumberWithDotOnly(event)">
                            </div>
                        </div>

                        <div class="col-md-2">
                            <div class="">
                                <button class="btn btn-success" onclick="OpenMapModal()"><i class="fa fa-map-marker-alt"></i></button>
                            </div>
                        </div>


                    </div>


                </form>

            </div>
        </div>


    </div>
</div>

<div class="row list-grid">
    <div class="col-12">
        <div class="card">
            <div class="card-body">

                <h4 class="card-title">الفروع </h4>


                <table id="datatable" class="table ">
                    <thead>
                        <tr>
                            <th>الكود</th>
                            <th>الإسم</th>
                            <th>الإسم إنجليزي</th>
                            <th>Lat</th>
                            <th>Lng</th>
                            <th>#</th>

                        </tr>
                    </thead>


                </table>

            </div>
        </div>
    </div> <!-- end col -->
</div> <!-- end row -->

<div class="modal fade bs-example-modal-center" id="mapModal" tabindex="-1" style="display: none;" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Center modal</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="mapBody">
                <div class="container">
                    <div class="row">
                        <div class="col-12">
                            <div class="mapView">
                                <div class="map-block">
                                    <div id="map" style="height: 400px; width: 450px; position:relative"></div>
                                    <pre id='info'></pre>
                                    <pre id='coordinates' class='coordinates'></pre>
                                </div>
                            </div>
                        </div>

                        <div class="col-6">
                            <input class="custom loc_lat" id="lat" type="hidden" hidden="hidden" />
                        </div>
                        <div class="col-6">
                            <input class="custom loc_long" id="lng" type="hidden" hidden="hidden" />
                        </div>
                    </div>
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<!-- end row -->

@section Scripts
{
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
    <script>
        //#region Map
        var latitude = 30.03322386102545;
        var longitude = 30.03322386102545;
        //function ti initialize map with its center and marker
        function initMap() {
            var map, infoWindow, pos, myLatLng, marker;
            // Try HTML5 geolocation.
            if (navigator.geolocation) {

            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }

            myLatLng = new google.maps.LatLng(latitude, longitude);
            map = new google.maps.Map(document.getElementById('map'), {
                center: myLatLng,
                zoom: 6,
                disableDoubleClickZoom: false,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });
            infoWindow = new google.maps.InfoWindow;

            marker = new google.maps.Marker({
                position: myLatLng
                , map: map,
                title: latitude + ', ' + longitude,
                draggable: true,
                animation: google.maps.Animation.DROP
            });
            //Create new marker on  click event on the map
            google.maps.event.addListener(map, 'click', function (event) {
                marker.setMap(null);
                marker = new google.maps.Marker({
                    position: event.latLng,
                    map: map,
                    title: event.latLng.lat() + ', ' + event.latLng.lng(),
                    draggable: true
                });
                $(".loc_lat").val(event.latLng.lat());
                $(".loc_long").val(event.latLng.lng());
                $('[name="Lat"]').val(event.latLng.lat());
                $('[name="Lng"]').val(event.latLng.lat());
            });
            //Get the location in texts when click on the marker
            marker.addListener('click', function (event) {
                setMarkerData(marker, event)
            });
            //Get the location in texts when drag the marker to another location
            marker.addListener('drag', function (event) {
                setMarkerData(marker, event)
            });
            //Change the type of the map
            map.addListener('maptypeid_changed', function () {
                var showStreetViewControl = map.getMapTypeId() !== 'coordinate';
                map.setOptions({
                    streetViewControl: showStreetViewControl
                });
            });

        }
        //function to handle map errors
        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(browserHasGeolocation ?
                'Error: The Geolocation service failed.' :
                'Error: Your browser doesn\'t support geolocation.');
            infoWindow.open(map);
        }
        function setMarkerData(marker, event) {
            marker.setPosition(event.latLng);
            marker.setTitle(event.latLng.lat() + ', ' + event.latLng.lng());
            $(".loc_lat").val(event.latLng.lat());
            $(".loc_long").val(event.latLng.lng());
        }
        //#endregion
    </script>

    <script>
    function OpenMapModal() {
        $('#mapModal').modal('show');
        initMap();
    }

    function Save() {
        let sendData = $('#frmCreate').serialize();
        $.post('@Url.Action("Add")?' + sendData, {}, function (res) {
            excuteResponse(res);
            reloadDataTable();
            if (res.status == 200) {
                $('[name="StoreId"]').val("0");
            }
        });
    }


        let tbl;
        let frm = $('#frmCreate');
    $(() => {
        tbl = $('#datatable').DataTable(LoadDataTableObj('@Url.GetAction("LoadData")',
                [

                    {
                        data: null,
                        bSortable: false,
                        render: function (data, type, row) {
                            return '<label>' + (data.code ?? "") + '</label>'
                        }
                    },
                    {
                        data: null,
                        bSortable: false,
                        render: function (data, type, row) {
                            return '<label>' + (data.name ?? "") + '</label>'
                        }
                    },  {
                        data: null,
                        bSortable: false,
                        render: function (data, type, row) {
                            return '<label>' + (data.nameE ?? "") + '</label>'
                        }
                    },
                    {
                        data: null,
                        bSortable: false,
                        render: function (data, type, row) {
                            return '<label>' + (data.lat ?? "") + '</label>'
                        }
                    }
                    ,
                    {
                        data: null,
                        bSortable: false,
                        render: function (data, type, row) {
                            return '<label>' + (data.lng ?? "") + '</label>'
                        }
                    }, {
                        data: null,
                        bSortable: false,
                        render: function (data, type, row) {

                            return `  <a class="btn btn-outline-secondary btn-sm edit" data-id='${data.id}' onclick="displayDataForEdit('${data.id}')" title="Edit">
                                        <i class="fa fa-pencil-alt"></i>
                                    </a>
                                    <a class="btn btn-outline-danger btn-sm delete" onclick='funDelete("${data.id}")' title="Delete">
                                        <i class="fa fa-trash-alt"></i>
                                    </a>`;
                        }
                    }

                ]
            )
        );


        $('#datatable').find('tbody').on('click', 'tr', function () {
            let elem = $(this);
            let id = elem.find('.edit').attr('data-id');

            elem.closest('tbody').find('tr').css('background-color', 'white');
            elem.css('background-color', '#a2a9bd');


            displayDataForEdit(id);
        });

    });

        function funDelete(id) {
            event.preventDefault();
            let frmData = new FormData();
            frmData.append('id', id);
            let url = '@Url.GetAction("Delete")';
            swalConfirmPopUp(() => {
                $.ajax(getAjaxObject(url, frmData, (res) => {
                    excuteResponse(res);
                    reloadDataTable();
                    $('[name="StoreId"]').val("0");

                }));
            });
        }


        function funPublicDelete() {
            event.preventDefault();

            let checkItem = $('[name="StoreId"]').val();
            if (checkItem==0) {
                swal.fire({
                    title: "خطأ",
                    html: 'اختر العنصر الذى تريد حذفة',
                    icon: "error"
                });
                return;
            }

            let frmData = new FormData();
            frmData.append('id', checkItem);
            let url = '@Url.GetAction("Delete")';
            swalConfirmPopUp(() => {
                $.ajax(getAjaxObject(url, frmData, (res) => {
                    excuteResponse(res);
                    reloadDataTable();
                    $('[name="StoreId"]').val("0");


                }));
            });
        }

      

       function displayDataForEdit(id) {

            event.preventDefault();
            let frmData = new FormData();
            frmData.append('id', id);
            let url = '@Url.GetAction("DisplayDataForEdit")';
            $.ajax(getAjaxObject(url, frmData, (res) => {
                BindData(res);

            }));
        }

        function BindData(res) {
            $('html,body').animate({ scrollTop: 0 }, 500, 'swing', function () {
                frm.serializeArray().forEach(x => {

                    if ($(`[name="${x.name}"]`).prop('type').includes('select')) {
                        $(`[name="${x.name}"]`).val(res[lowerFirstLetter(x.name)]).change();
                    }
                    else
                        $(`[name="${x.name}"]`).val(res[lowerFirstLetter(x.name)]);
                });
                $('[name="StoreCode"]').prop('readonly', true);
            });
        }

        let counts = '@(ViewData["Count"])';
        let num = 0;
        $(() => {
            $('#pageNumber').html(num + "/" + counts);
        });

        function Navgate(xi, stepByStep) {
            debugger;
            $('#mdlSearch').modal('hide');

            if (stepByStep) {

                if (xi < 0 && num == 1)
                    return;
                else if (xi > 0 && num == counts)
                    return;

                num = parseInt(num) + parseInt(xi);
            }
            else
                num = xi;

            let frmData = new FormData();
            frmData.append('index', num);
            let url = '@Url.GetAction("GetItemByIndex")';
             $.ajax(getAjaxObject(url, frmData, (res) => {
                 $('#pageNumber').html(num + "/" + counts)

                 BindData(res);

                 $(`.edit`).closest('tbody').find('tr').css('background-color', 'white');
                 $(`.edit[data-id="${res.storeId}"]`).closest('tr').css('background-color', '#a2a9bd');
            }));
        }

    </script>
}